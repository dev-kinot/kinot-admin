{
  "productName": "Kinot",
  "description": "Desktop app for visually building and simulating hardware. Drag-and-drop blocks in a React Flow editor or insert Verilog or Python code snippets, then simulate with Cocotb and Verilator. Like GNU Radio for hardware—design, edit, and verify visually and with code. Includes source blocks to drive designs (noise, sine waves, etc.) and sink blocks to inspect signals interactively in time or frequency domains.",
  "nodes": [
    {
      "id": "hardwareEngineers",
      "type": "stakeholder",
      "data": {
        "label": "Hardware Engineers",
        "collapsed": false,
        "weight": 2,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 48,
        "y": 43913
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36
    },
    {
      "id": "fpgaDesigners",
      "type": "stakeholder",
      "data": {
        "label": "FPGA Designers",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 48,
        "y": 43677
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36
    },
    {
      "id": "asicDesigners",
      "type": "stakeholder",
      "data": {
        "label": "ASIC Designers",
        "collapsed": false,
        "weight": 2,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 48,
        "y": 58933
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36,
      "positionAbsolute": {
        "x": 48,
        "y": 963
      },
      "dragging": false
    },
    {
      "id": "embeddedDevelopers",
      "type": "stakeholder",
      "data": {
        "label": "Embedded Systems Developers",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 16,
        "y": 59169
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "selected": false,
      "width": 236,
      "height": 36
    },
    {
      "id": "verificationEngineers",
      "type": "stakeholder",
      "data": {
        "label": "Verification Engineers",
        "collapsed": false,
        "weight": 2,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 36,
        "y": 60281
      },
      "style": {
        "width": 196,
        "height": 36
      },
      "selected": false,
      "width": 196,
      "height": 36,
      "positionAbsolute": {
        "x": 35.5,
        "y": 236.5
      },
      "dragging": false
    },
    {
      "id": "researchScientists",
      "type": "stakeholder",
      "data": {
        "label": "Research Scientists / Academics",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 0,
        "y": 54141
      },
      "style": {
        "width": 268,
        "height": 36
      },
      "selected": false,
      "width": 268,
      "height": 36
    },
    {
      "id": "engineeringStudents",
      "type": "stakeholder",
      "data": {
        "label": "Computer Engineering Students",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 8,
        "y": 59573
      },
      "style": {
        "width": 252,
        "height": 36
      },
      "selected": false,
      "width": 252,
      "height": 36
    },
    {
      "id": "openSourceCommunity",
      "type": "stakeholder",
      "data": {
        "label": "Open-Source Contributors",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 28,
        "y": 61225
      },
      "style": {
        "width": 212,
        "height": 36
      },
      "selected": false,
      "width": 212,
      "height": 36
    },
    {
      "id": "productManagers",
      "type": "stakeholder",
      "data": {
        "label": "Electronics Product Managers",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 12,
        "y": 59809
      },
      "style": {
        "width": 244,
        "height": 36
      },
      "selected": false,
      "width": 244,
      "height": 36
    },
    {
      "id": "edaVendors",
      "type": "stakeholder",
      "data": {
        "label": "EDA Tool Vendors",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 48,
        "y": 60517
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36
    },
    {
      "id": "systemArchitects",
      "type": "stakeholder",
      "data": {
        "label": "System Architects",
        "collapsed": false,
        "weight": 1.5,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 48,
        "y": 43441
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36
    },
    {
      "id": "hobbyistsMakers",
      "type": "stakeholder",
      "data": {
        "label": "Hobbyists / Makers",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 48,
        "y": 44149
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36
    },
    {
      "id": "itAdministrators",
      "type": "stakeholder",
      "data": {
        "label": "IT Administrators / DevOps",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 20,
        "y": 60989
      },
      "style": {
        "width": 228,
        "height": 36
      },
      "selected": false,
      "width": 228,
      "height": 36
    },
    {
      "id": "qualityAssurance",
      "type": "stakeholder",
      "data": {
        "label": "Quality Assurance Teams",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 32,
        "y": 60753
      },
      "style": {
        "width": 204,
        "height": 36
      },
      "selected": false,
      "width": 204,
      "height": 36
    },
    {
      "id": "educatorsInstructors",
      "type": "stakeholder",
      "data": {
        "label": "Educators / Instructors",
        "collapsed": false,
        "weight": 1,
        "maxWeight": 2,
        "editing": false
      },
      "position": {
        "x": 32,
        "y": 60045
      },
      "style": {
        "width": 204,
        "height": 36
      },
      "selected": false,
      "width": 204,
      "height": 36
    },
    {
      "id": "rapidPrototyping",
      "type": "keydriver",
      "data": {
        "label": "Rapid Hardware Prototyping",
        "collapsed": false,
        "weight": 10.5,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 428,
        "y": 44189
      },
      "style": {
        "width": 228,
        "height": 36
      },
      "selected": false,
      "width": 228,
      "height": 36
    },
    {
      "id": "visualCodeWorkflow",
      "type": "keydriver",
      "data": {
        "label": "Unified Visual & Code Design Workflow",
        "collapsed": false,
        "weight": 9.5,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 384,
        "y": 50865
      },
      "style": {
        "width": 316,
        "height": 36
      },
      "selected": false,
      "width": 316,
      "height": 36
    },
    {
      "id": "fastVerification",
      "type": "keydriver",
      "data": {
        "label": "Fast Simulation & Verification",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 412,
        "y": 58109
      },
      "style": {
        "width": 260,
        "height": 36
      },
      "selected": false,
      "width": 260,
      "height": 36
    },
    {
      "id": "costEffectiveOpenSource",
      "type": "keydriver",
      "data": {
        "label": "Cost-Effective Open-Source Tooling",
        "collapsed": false,
        "weight": 8,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 396,
        "y": 60105
      },
      "style": {
        "width": 292,
        "height": 36
      },
      "selected": false,
      "width": 292,
      "height": 36
    },
    {
      "id": "educationTraining",
      "type": "keydriver",
      "data": {
        "label": "Hands-On Hardware Education & Training",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 380,
        "y": 54249
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "interoperability",
      "type": "keydriver",
      "data": {
        "label": "Interoperability with Existing Toolchains",
        "collapsed": false,
        "weight": 12.5,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 368,
        "y": 54555
      },
      "style": {
        "width": 348,
        "height": 36
      },
      "selected": false,
      "width": 348,
      "height": 36
    },
    {
      "id": "collaborationReuse",
      "type": "keydriver",
      "data": {
        "label": "Collaboration & IP Reuse",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 436,
        "y": 59701
      },
      "style": {
        "width": 212,
        "height": 36
      },
      "selected": false,
      "width": 212,
      "height": 36
    },
    {
      "id": "timeToMarket",
      "type": "keydriver",
      "data": {
        "label": "Accelerated Time-to-Market",
        "collapsed": false,
        "weight": 9.5,
        "maxWeight": 12.5,
        "editing": false
      },
      "position": {
        "x": 428,
        "y": 58387
      },
      "style": {
        "width": 228,
        "height": 36
      },
      "selected": false,
      "width": 228,
      "height": 36
    },
    {
      "id": "visualBlockEditor",
      "type": "applicationdriver",
      "data": {
        "label": "Visual Block Diagram Editor",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 880,
        "y": 44199
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "width": 236,
      "height": 36,
      "selected": false
    },
    {
      "id": "codeSnippetNodes",
      "type": "applicationdriver",
      "data": {
        "label": "Embedded Code Snippet Nodes",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 880,
        "y": 50845
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "width": 236,
      "height": 36,
      "selected": false
    },
    {
      "id": "integratedCocotbVerilatorSim",
      "type": "applicationdriver",
      "data": {
        "label": "Integrated Cocotb & Verilator Simulation",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 828,
        "y": 58109
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "width": 340,
      "height": 36,
      "selected": false
    },
    {
      "id": "openSourcePluginArch",
      "type": "applicationdriver",
      "data": {
        "label": "Open-Source Plugin Architecture",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 864,
        "y": 60095
      },
      "style": {
        "width": 268,
        "height": 36
      },
      "width": 268,
      "height": 36,
      "selected": false
    },
    {
      "id": "collaborativeDesignSharing",
      "type": "applicationdriver",
      "data": {
        "label": "Collaborative Design Sharing & IP Library",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 824,
        "y": 59691
      },
      "style": {
        "width": 348,
        "height": 36
      },
      "width": 348,
      "height": 36,
      "selected": false
    },
    {
      "id": "multiToolchainExport",
      "type": "applicationdriver",
      "data": {
        "label": "Multi-Toolchain Export",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 900,
        "y": 58611
      },
      "style": {
        "width": 196,
        "height": 36
      },
      "width": 196,
      "height": 36,
      "selected": false
    },
    {
      "id": "interactiveTutorialMode",
      "type": "applicationdriver",
      "data": {
        "label": "Interactive Tutorial & Learning Mode",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 844,
        "y": 53204
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "width": 308,
      "height": 36,
      "selected": false
    },
    {
      "id": "prototypeTemplates",
      "type": "applicationdriver",
      "data": {
        "label": "Pre-Built Hardware Templates & Examples",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24,
        "editing": false
      },
      "position": {
        "x": 832,
        "y": 54425
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "width": 332,
      "height": 36,
      "selected": false
    },
    {
      "id": "templateLibrary50Blocks",
      "type": "requirement",
      "data": {
        "label": "Provide a library of at least 50 pre-built hardware blocks (ALU, FIFO, UART, SPI, I2C, etc.) available as drag-and-drop nodes",
        "impact": 5,
        "impactInsights": "A rich starter library is fundamental to a *visual* hardware IDE: without ready blocks users cannot rapidly prototype. Directly supports the core value-prop of “assemble blocks visually like GNU Radio.”",
        "startDate": "2025-08-21",
        "dueDate": "2026-01-27",
        "status": "In Progress",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1762,
        "y": 52248
      },
      "style": {
        "width": 1020,
        "height": 144
      },
      "selected": false,
      "width": 1020,
      "height": 144
    },
    {
      "id": "templateDualRepresentationSync",
      "type": "requirement",
      "data": {
        "label": "Maintain automatic synchronization between visual block and equivalent Verilog/Python code snippet for every template",
        "impact": 5,
        "impactInsights": "Bi-directional sync between diagram and code is mission-critical; it underpins the promise of combining *visual* and *text* flows and avoids drift bugs.",
        "startDate": "2025-08-17",
        "dueDate": "2026-01-10",
        "status": "In Progress",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1794,
        "y": 54908
      },
      "style": {
        "width": 956,
        "height": 144
      },
      "selected": false,
      "width": 956,
      "height": 144
    },
    {
      "id": "templateHighCoverageTests",
      "type": "requirement",
      "data": {
        "label": "Include Cocotb test benches for each template achieving ≥95% code coverage and passing all simulations",
        "impact": 3,
        "impactInsights": "High-coverage tests improve trust and demo value, but the tool can still function without shipping every template at 95 %.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1854,
        "y": 80003
      },
      "style": {
        "width": 836,
        "height": 144
      },
      "selected": false,
      "width": 836,
      "height": 144
    },
    {
      "id": "templateSemanticVersioning",
      "type": "requirement",
      "data": {
        "label": "Apply semantic versioning with changelogs to every template release in the catalog",
        "impact": 3,
        "impactInsights": "Good for long-term maintenance and reproducibility yet not a hard blocker for initial usability.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1934,
        "y": 95527
      },
      "style": {
        "width": 676,
        "height": 144
      },
      "selected": false,
      "width": 676,
      "height": 144
    },
    {
      "id": "templateSearchFilterSub100ms",
      "type": "requirement",
      "data": {
        "label": "Enable catalog search and filter operations to return results within 100 ms for 95th percentile queries",
        "impact": 4,
        "impactInsights": "Fast discovery of blocks critically affects day-to-day flow; sluggish search breaks productivity.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1850,
        "y": 79659
      },
      "style": {
        "width": 844,
        "height": 144
      },
      "selected": false,
      "width": 844,
      "height": 144
    },
    {
      "id": "templateUserCloneSave",
      "type": "requirement",
      "data": {
        "label": "Allow users to clone, edit, and save custom versions of templates to personal or shared libraries via single-click action",
        "impact": 4,
        "impactInsights": "Customization encourages reuse and collaboration—high utility though not absolutely core to first MVP.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1778,
        "y": 95871
      },
      "style": {
        "width": 988,
        "height": 144
      },
      "selected": false,
      "width": 988,
      "height": 144
    },
    {
      "id": "templateAutoDocumentation",
      "type": "requirement",
      "data": {
        "label": "Auto-generate schematic, timing diagram, and integration examples for each template and display within documentation panel",
        "impact": 3,
        "impactInsights": "Quality docs are important for adoption but can be delivered incrementally; not a core simulation/design capability.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1774,
        "y": 97119
      },
      "style": {
        "width": 996,
        "height": 144
      },
      "selected": false,
      "width": 996,
      "height": 144
    },
    {
      "id": "templateFpgaSynthesisPass",
      "type": "requirement",
      "data": {
        "label": "Ensure all templates synthesize without errors on latest Xilinx Vivado and Intel Quartus toolchains",
        "impact": 4,
        "impactInsights": "Guarantees blocks work beyond simulation; key for users targeting real hardware.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1866,
        "y": 81035
      },
      "style": {
        "width": 812,
        "height": 144
      },
      "selected": false,
      "width": 812,
      "height": 144
    },
    {
      "id": "dragDropSnapGrid",
      "type": "requirement",
      "data": {
        "label": "Drag-and-Drop Block Placement with Snap-to-Grid & Port Auto-Align",
        "impact": 5,
        "impactInsights": "Core UX mechanic; directly delivers the ‘visual assembly’ promise.",
        "startDate": "2025-08-04",
        "dueDate": "2025-10-03",
        "status": "In Progress",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 2002,
        "y": 1982
      },
      "style": {
        "width": 540,
        "height": 144
      },
      "selected": false,
      "width": 540,
      "height": 144
    },
    {
      "id": "searchableBlockLibrary",
      "type": "requirement",
      "data": {
        "label": "Library of ≥100 Parameterisable Blocks Searchable in ≤200 ms",
        "impact": 4,
        "impactInsights": "Scales the visual approach; search speed ties to usability for larger catalogs.",
        "startDate": "",
        "dueDate": "",
        "status": "In Progress",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 2022,
        "y": 26848
      },
      "style": {
        "width": 500,
        "height": 144
      },
      "selected": false,
      "width": 500,
      "height": 144
    },
    {
      "id": "codeSnippetNodeSupport",
      "type": "requirement",
      "data": {
        "label": "Embedded Verilog or Python Code-Snippet Nodes with Syntax Highlighting & Linting",
        "impact": 5,
        "impactInsights": "Text nodes bridge custom logic into the visual graph—central to the hybrid ‘visual + code’ concept.",
        "startDate": "2025-08-25",
        "dueDate": "",
        "status": "In Progress",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1942,
        "y": 9633
      },
      "style": {
        "width": 660,
        "height": 144
      },
      "selected": false,
      "width": 660,
      "height": 144
    },
    {
      "id": "realTimeConnectionValidation",
      "type": "requirement",
      "data": {
        "label": "Real-Time Connection Validation Flagging Width/Type Mismatches in <1 s",
        "impact": 5,
        "impactInsights": "Immediate feedback prevents simulation failures; matching the user expectation of modern schematic editors.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1982,
        "y": 29380
      },
      "style": {
        "width": 580,
        "height": 144
      },
      "selected": false,
      "width": 580,
      "height": 144
    },
    {
      "id": "gitVersionControlExport",
      "type": "requirement",
      "data": {
        "label": "One-Click Git Integration Exporting Diagram JSON & Netlist",
        "impact": 4,
        "impactInsights": "Hardware teams rely on Git; seamless export is high value for collaboration and CI, though not a core editor function.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 2030,
        "y": 82663
      },
      "style": {
        "width": 484,
        "height": 144
      },
      "selected": false,
      "width": 484,
      "height": 144
    },
    {
      "id": "verilogNetlistExport",
      "type": "requirement",
      "data": {
        "label": "Export Full Diagram to Synthesizable Verilog Netlist in <10 s for ≤500 Blocks",
        "impact": 5,
        "impactInsights": "Without correct Verilog export the tool cannot feed downstream flows; absolutely fundamental.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1954,
        "y": 50024
      },
      "style": {
        "width": 636,
        "height": 144
      },
      "selected": false,
      "width": 636,
      "height": 144
    },
    {
      "id": "undoRedoHistory",
      "type": "requirement",
      "data": {
        "label": "Undo/Redo History Supporting ≥50 Consecutive Actions",
        "impact": 4,
        "impactInsights": "Standard productivity feature; users expect safe exploration. Absence leads to frustration.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 2054,
        "y": 23962
      },
      "style": {
        "width": 436,
        "height": 144
      },
      "selected": false,
      "width": 436,
      "height": 144
    },
    {
      "id": "performanceZoomPan1000Nodes",
      "type": "requirement",
      "data": {
        "label": "Smooth Zoom & Pan at 60 fps with Diagrams up to 1 000 Nodes",
        "impact": 4,
        "impactInsights": "Performance at scale affects perceived quality and determines whether serious projects are feasible.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 2026,
        "y": 49680
      },
      "style": {
        "width": 492,
        "height": 144
      },
      "selected": false,
      "width": 492,
      "height": 144
    },
    {
      "id": "codeSnippetLanguageSupport",
      "type": "requirement",
      "data": {
        "label": "Support embedding and executing Verilog (IEEE-1364-2005) and Python 3.10 code within a Code Snippet Node.",
        "impact": 5,
        "impactInsights": "Language support defines what designs users can express; mandatory to hit target audience.",
        "startDate": "2025-09-11",
        "dueDate": "2025-09-11",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1842,
        "y": 32856
      },
      "style": {
        "width": 860,
        "height": 144
      },
      "selected": false,
      "width": 860,
      "height": 144
    },
    {
      "id": "codeEditorSyntaxHighlighting",
      "type": "requirement",
      "data": {
        "label": "Provide syntax highlighting, bracket matching, and code folding for Verilog and Python with visual update latency < 100 ms per keystroke.",
        "impact": 4,
        "impactInsights": "Improves coding efficiency and reduces errors; expected IDE baseline.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1714,
        "y": 34836
      },
      "style": {
        "width": 1116,
        "height": 144
      },
      "selected": false,
      "width": 1116,
      "height": 144
    },
    {
      "id": "realtimeLinting",
      "type": "requirement",
      "data": {
        "label": "Perform real-time syntax and lint checks on code and surface errors/warnings within 500 ms after user stops typing.",
        "impact": 4,
        "impactInsights": "Early error detection saves debug time; competitive IDEs include it.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1802,
        "y": 35180
      },
      "style": {
        "width": 940,
        "height": 144
      },
      "selected": false,
      "width": 940,
      "height": 144
    },
    {
      "id": "automaticPortInference",
      "type": "requirement",
      "data": {
        "label": "Automatically infer I/O ports from the snippet and create corresponding node pins within 1 s after save.",
        "impact": 4,
        "impactInsights": "Bridges text and visual worlds, removing manual pin mapping—significant UX win.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1846,
        "y": 35524
      },
      "style": {
        "width": 852,
        "height": 144
      },
      "selected": false,
      "width": 852,
      "height": 144
    },
    {
      "id": "simulationIntegration",
      "type": "requirement",
      "data": {
        "label": "Compile Verilog snippets with Verilator and co-simulate Python test benches via Cocotb, achieving build-plus-run time < 10 s for a 1 k-line design on reference hardware.",
        "impact": 5,
        "impactInsights": "Simulation loop is the verification backbone; speed target ensures interactive workflow.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1586,
        "y": 38554
      },
      "style": {
        "width": 1372,
        "height": 144
      },
      "selected": false,
      "width": 1372,
      "height": 144
    },
    {
      "id": "snippetVersioning",
      "type": "requirement",
      "data": {
        "label": "Store every save of a Code Snippet Node in an internal Git repository and allow history view & revert in ≤ 3 clicks.",
        "impact": 4,
        "impactInsights": "Protects against code loss and supports experimentation; aligns with software-style workflows.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1798,
        "y": 87587
      },
      "style": {
        "width": 948,
        "height": 144
      },
      "selected": false,
      "width": 948,
      "height": 144
    },
    {
      "id": "reusableSnippetLibrary",
      "type": "requirement",
      "data": {
        "label": "Allow adding a Code Snippet Node to a shared project library that is searchable by name/tags with retrieval time < 2 s.",
        "impact": 3,
        "impactInsights": "Nice for collaboration but not vital for initial single-user success.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1786,
        "y": 89071
      },
      "style": {
        "width": 972,
        "height": 144
      },
      "selected": false,
      "width": 972,
      "height": 144
    },
    {
      "id": "cocotbIntegrationSupport",
      "type": "requirement",
      "data": {
        "label": "Run unmodified Cocotb Python testbenches on assembled designs and report pass/fail within the IDE",
        "impact": 5,
        "impactInsights": "Directly matches product description; elevates verification experience and differentiates from pure schematic tools.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1874,
        "y": 98151
      },
      "style": {
        "width": 796,
        "height": 144
      },
      "selected": false,
      "width": 796,
      "height": 144
    },
    {
      "id": "verilatorSVCompileCoverage",
      "type": "requirement",
      "data": {
        "label": "Compile Verilog/SystemVerilog blocks with Verilator supporting ≥95% of IEEE-1800-2017 features used in the reference suite",
        "impact": 4,
        "impactInsights": "High language coverage broadens design applicability; important though slightly less critical than basic compile.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1774,
        "y": 99183
      },
      "style": {
        "width": 996,
        "height": 144
      },
      "selected": false,
      "width": 996,
      "height": 144
    },
    {
      "id": "simulationPerf10kGate1kCps",
      "type": "requirement",
      "data": {
        "label": "Simulate a 10 k-gate design at ≥1 000 cycles/sec on an 8-core 3 GHz CPU",
        "impact": 4,
        "impactInsights": "Usable performance threshold for non-trivial designs; slow sims would negate tool benefits.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1978,
        "y": 80347
      },
      "style": {
        "width": 588,
        "height": 144
      },
      "selected": false,
      "width": 588,
      "height": 144
    },
    {
      "id": "waveformExportVcdFsdb",
      "type": "requirement",
      "data": {
        "label": "Export full-signal VCD/FSDB waveforms with <1 % runtime overhead",
        "impact": 4,
        "impactInsights": "Waveforms are essential for debug; low overhead keeps performance acceptable.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 2006,
        "y": 80691
      },
      "style": {
        "width": 532,
        "height": 144
      },
      "selected": false,
      "width": 532,
      "height": 144
    },
    {
      "id": "uiInteractiveDebugging",
      "type": "requirement",
      "data": {
        "label": "Provide UI breakpoints & single-step debugging for both Cocotb code and Verilator simulation",
        "impact": 4,
        "impactInsights": "Integrated debug shortens iteration cycles, raising user satisfaction; not strictly required for first usable build.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1894,
        "y": 100903
      },
      "style": {
        "width": 756,
        "height": 144
      },
      "selected": false,
      "width": 756,
      "height": 144
    },
    {
      "id": "headlessCiCli",
      "type": "requirement",
      "data": {
        "label": "Offer a CLI to run Cocotb+Verilator simulations headlessly, returning non-zero exit code on failure",
        "impact": 3,
        "impactInsights": "Important for automation/CI adoption but core desktop use can function without it.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1866,
        "y": 101935
      },
      "style": {
        "width": 812,
        "height": 144
      },
      "selected": false,
      "width": 812,
      "height": 144
    },
    {
      "id": "verilogLintExport",
      "type": "requirement",
      "data": {
        "label": "Exported Verilog must pass Verilator and Yosys linting on designs up to 100 k gates without manual edits.",
        "impact": 4,
        "impactInsights": "Ensures downstream tool acceptance, preventing costly manual clean-ups.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1842,
        "y": 82319
      },
      "style": {
        "width": 860,
        "height": 144
      },
      "selected": false,
      "width": 860,
      "height": 144
    },
    {
      "id": "vhdlExportCompliance",
      "type": "requirement",
      "data": {
        "label": "Provide VHDL-2008 export that compiles with GHDL and ModelSim with zero syntax errors.",
        "impact": 3,
        "impactInsights": "Expands market to VHDL users, yet not necessary for Verilog-focused MVP.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1918,
        "y": 83007
      },
      "style": {
        "width": 708,
        "height": 144
      },
      "selected": false,
      "width": 708,
      "height": 144
    },
    {
      "id": "ipxactGeneration",
      "type": "requirement",
      "data": {
        "label": "Generate IP-XACT 1.6 compliant component XML validated against official schema.",
        "impact": 2,
        "impactInsights": "Niche integration format; valuable for enterprise flows but low impact for majority of prototyping users.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1946,
        "y": 83351
      },
      "style": {
        "width": 652,
        "height": 144
      },
      "selected": false,
      "width": 652,
      "height": 144
    },
    {
      "id": "vivadoProjectExport",
      "type": "requirement",
      "data": {
        "label": "Produce a build-ready Xilinx Vivado project (.xpr) that synthesizes to bitstream in one click.",
        "impact": 4,
        "impactInsights": "Key for FPGA deployment which is a primary hardware target; high value.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1886,
        "y": 83695
      },
      "style": {
        "width": 772,
        "height": 144
      },
      "selected": false,
      "width": 772,
      "height": 144
    },
    {
      "id": "quartusProjectExport",
      "type": "requirement",
      "data": {
        "label": "Produce an Intel Quartus Prime project (.qpf/.qsf) that compiles to SRAM bitstream with default settings.",
        "impact": 3,
        "impactInsights": "Adds vendor breadth; nice but less critical if Vivado supported first.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1842,
        "y": 84491
      },
      "style": {
        "width": 860,
        "height": 144
      },
      "selected": false,
      "width": 860,
      "height": 144
    },
    {
      "id": "synopsysDCScriptExport",
      "type": "requirement",
      "data": {
        "label": "Generate Synopsys Design Compiler TCL script enabling gate-level netlist generation with zero manual edits.",
        "impact": 2,
        "impactInsights": "Applies to ASIC flows; useful for small subset of users, not central to desktop prototyping vision.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1834,
        "y": 85523
      },
      "style": {
        "width": 876,
        "height": 144
      },
      "selected": false,
      "width": 876,
      "height": 144
    },
    {
      "id": "cocotbTestbenchExport",
      "type": "requirement",
      "data": {
        "label": "Auto-generate Cocotb Python testbench skeleton covering all top-level I/Os with ready Makefile.",
        "impact": 3,
        "impactInsights": "Speeds verification kick-off but users could write tests manually.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1882,
        "y": 86211
      },
      "style": {
        "width": 780,
        "height": 144
      },
      "selected": false,
      "width": 780,
      "height": 144
    },
    {
      "id": "makefileExport",
      "type": "requirement",
      "data": {
        "label": "Create portable GNU Makefile for open-source Verilator simulation completing build in < 2 min for 50 k gate design.",
        "impact": 3,
        "impactInsights": "Aids automation yet overlaps with in-IDE run; moderate impact.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1802,
        "y": 86899
      },
      "style": {
        "width": 940,
        "height": 144
      },
      "selected": false,
      "width": 940,
      "height": 144
    },
    {
      "id": "dockerCIExport",
      "type": "requirement",
      "data": {
        "label": "Export Dockerfile containing toolchain dependencies to run synthesis & simulation in CI within ≤ 10 min.",
        "impact": 2,
        "impactInsights": "Good for DevOps; peripheral to core desktop editing experience.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1846,
        "y": 87931
      },
      "style": {
        "width": 852,
        "height": 144
      },
      "selected": false,
      "width": 852,
      "height": 144
    },
    {
      "id": "rtlCoverageReportExport",
      "type": "requirement",
      "data": {
        "label": "Provide LCOV/HTML code-coverage report generation for simulated RTL with ≥ 95 % statement coverage threshold.",
        "impact": 3,
        "impactInsights": "Improves quality metrics but advanced users can integrate external tools.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1826,
        "y": 89415
      },
      "style": {
        "width": 892,
        "height": 144
      },
      "selected": false,
      "width": 892,
      "height": 144
    },
    {
      "id": "pluginApiVersioning",
      "type": "requirement",
      "data": {
        "label": "Stable, SemVer-based Plugin API v1.0 with 18-month backward-compatibility window and automated regression tests across two minor releases.",
        "impact": 2,
        "impactInsights": "Extensibility matters long-term; not essential for initial product viability.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1710,
        "y": 97463
      },
      "style": {
        "width": 1124,
        "height": 144
      },
      "selected": false,
      "width": 1124,
      "height": 144
    },
    {
      "id": "sandboxedPluginExecution",
      "type": "requirement",
      "data": {
        "label": "Plugins must run in isolated WebWorker/Node-VM sandbox, blocking file-system or network access outside project scope and passing OWASP Top-10 security scans.",
        "impact": 2,
        "impactInsights": "Security for plugins is important but only after a plugin ecosystem exists.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1634,
        "y": 97807
      },
      "style": {
        "width": 1276,
        "height": 144
      },
      "selected": false,
      "width": 1276,
      "height": 144
    },
    {
      "id": "runtimePluginLoading",
      "type": "requirement",
      "data": {
        "label": "Install, enable, disable, or uninstall any plugin without application restart; load time <2 s for a 5 MB plugin on reference laptop.",
        "impact": 2,
        "impactInsights": "Convenience for plugin users; secondary to main design/sim features.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1734,
        "y": 98495
      },
      "style": {
        "width": 1076,
        "height": 144
      },
      "selected": false,
      "width": 1076,
      "height": 144
    },
    {
      "id": "pluginSdkDocumentation",
      "type": "requirement",
      "data": {
        "label": "Provide fully-typed TypeScript/Python SDK, template repo, and step-by-step docs enabling a new developer to publish a ‘Hello-World’ plugin in ≤30 minutes (usability study n=10).",
        "impact": 2,
        "impactInsights": "Developer onboarding drives ecosystem growth but not pivotal to core user flow initially.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1554,
        "y": 99527
      },
      "style": {
        "width": 1436,
        "height": 144
      },
      "selected": false,
      "width": 1436,
      "height": 144
    },
    {
      "id": "pluginMarketplaceUI",
      "type": "requirement",
      "data": {
        "label": "Built-in marketplace UI supporting search (<300 ms over 1 000 entries), ratings, and one-click install/update workflows.",
        "impact": 2,
        "impactInsights": "Helps discovery of plugins; useful after plugin base exists.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1782,
        "y": 100215
      },
      "style": {
        "width": 980,
        "height": 144
      },
      "selected": false,
      "width": 980,
      "height": 144
    },
    {
      "id": "pluginCompatibilityCITesting",
      "type": "requirement",
      "data": {
        "label": "Offer CLI & GitHub Action that runs Verilator+Cocotb regression on each plugin; ≥95 % of registry plugins must pass nightly CI.",
        "impact": 2,
        "impactInsights": "Quality gate for plugins; advanced ecosystem feature.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1754,
        "y": 101247
      },
      "style": {
        "width": 1036,
        "height": 144
      },
      "selected": false,
      "width": 1036,
      "height": 144
    },
    {
      "id": "licensingComplianceChecker",
      "type": "requirement",
      "data": {
        "label": "Automated SPDX license scanner warns when plugin license conflicts with MIT/GPL core; ≥95 % detection accuracy on curated 200-plugin corpus.",
        "impact": 1,
        "impactInsights": "Legal safeguard; low impact on daily design/sim workflow.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1702,
        "y": 102279
      },
      "style": {
        "width": 1140,
        "height": 144
      },
      "selected": false,
      "width": 1140,
      "height": 144
    },
    {
      "id": "versionControlledRepository",
      "type": "requirement",
      "data": {
        "label": "Support saving & retrieving designs to a Git-compatible cloud repository with full commit history and branch / pull-request workflow.",
        "impact": 4,
        "impactInsights": "Team collaboration and history are crucial for serious projects; aligns with software expectations.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1730,
        "y": 98839
      },
      "style": {
        "width": 1084,
        "height": 144
      },
      "selected": false,
      "width": 1084,
      "height": 144
    },
    {
      "id": "granularAccessPermissions",
      "type": "requirement",
      "data": {
        "label": "Provide role-based read, write, and admin permissions per project, enforceable via UI and API, with changes propagated within 5 s.",
        "impact": 3,
        "impactInsights": "Important for enterprise/team scenarios but not for solo users.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1742,
        "y": 99871
      },
      "style": {
        "width": 1060,
        "height": 144
      },
      "selected": false,
      "width": 1060,
      "height": 144
    },
    {
      "id": "searchableIpLibrary",
      "type": "requirement",
      "data": {
        "label": "Index all IP blocks with metadata (name, language, IO spec, license, tags) and return search results in <200 ms for 90 % of queries.",
        "impact": 3,
        "impactInsights": "Extends reuse across projects; helpful yet secondary to core block library.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1734,
        "y": 100559
      },
      "style": {
        "width": 1076,
        "height": 144
      },
      "selected": false,
      "width": 1076,
      "height": 144
    },
    {
      "id": "publishIpBlocks",
      "type": "requirement",
      "data": {
        "label": "Allow users to publish selected IP blocks to public or private libraries with explicit license selection and visibility settings.",
        "impact": 3,
        "impactInsights": "Drives community sharing; good for network effects, not core for initial product.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1746,
        "y": 101591
      },
      "style": {
        "width": 1052,
        "height": 144
      },
      "selected": false,
      "width": 1052,
      "height": 144
    },
    {
      "id": "realTimeCommenting",
      "type": "requirement",
      "data": {
        "label": "Enable multi-user commenting and node annotations that synchronize across clients with <1 s latency.",
        "impact": 2,
        "impactInsights": "Collaboration nicety; tool remains valuable without it.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1862,
        "y": 102623
      },
      "style": {
        "width": 820,
        "height": 144
      },
      "selected": false,
      "width": 820,
      "height": 144
    },
    {
      "id": "visualMergeConflictResolution",
      "type": "requirement",
      "data": {
        "label": "Detect concurrent edit conflicts and present a visual diff/merge tool that resolves and saves merged design within 2 min.",
        "impact": 3,
        "impactInsights": "Critical for multi-user editing but not required for single-user adoption.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1778,
        "y": 102967
      },
      "style": {
        "width": 988,
        "height": 144
      },
      "selected": false,
      "width": 988,
      "height": 144
    },
    {
      "id": "ipAttributionReport",
      "type": "requirement",
      "data": {
        "label": "Automatically generate an HTML/PDF report listing all imported IP blocks, versions, authors, and licenses on demand in <10 s.",
        "impact": 1,
        "impactInsights": "Compliance/reporting utility; marginal to core workflow.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1762,
        "y": 104703
      },
      "style": {
        "width": 1020,
        "height": 144
      },
      "selected": false,
      "width": 1020,
      "height": 144
    },
    {
      "id": "pinnedIpVersionSimulation",
      "type": "requirement",
      "data": {
        "label": "Lock each referenced IP block to a specific semantic version and guarantee simulations reproduce identical results regardless of later library updates.",
        "impact": 3,
        "impactInsights": "Reproducibility is important especially for CI; moderate impact.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 11,
        "maxWeight": 24
      },
      "position": {
        "x": 1658,
        "y": 106403
      },
      "style": {
        "width": 1228,
        "height": 144
      },
      "selected": false,
      "width": 1228,
      "height": 144
    },
    {
      "id": "guidedWalkthroughHighlight",
      "type": "requirement",
      "data": {
        "label": "Provide a guided walkthrough mode that highlights relevant UI elements and nodes with instructional overlays for each tutorial step",
        "impact": 2,
        "impactInsights": "Onboarding aid; improves learning curve but not functionality.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1738,
        "y": 84835
      },
      "style": {
        "width": 1068,
        "height": 144
      },
      "selected": false,
      "width": 1068,
      "height": 144
    },
    {
      "id": "builtInTutorialLibrary",
      "type": "requirement",
      "data": {
        "label": "Include at least 20 built-in tutorial lessons covering basic gates through pipelined processors, accessible from a Tutorials library panel",
        "impact": 3,
        "impactInsights": "Education drives adoption, especially for new users/students; valuable though not functional necessity.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1710,
        "y": 85179
      },
      "style": {
        "width": 1124,
        "height": 144
      },
      "selected": false,
      "width": 1124,
      "height": 144
    },
    {
      "id": "persistentProgressTracking",
      "type": "requirement",
      "data": {
        "label": "Persist per-user tutorial progress (Not Started / In-Progress / Completed) across sessions using local storage or cloud sync",
        "impact": 2,
        "impactInsights": "Nice UX detail for learning; low effect on design capabilities.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1766,
        "y": 85867
      },
      "style": {
        "width": 1012,
        "height": 144
      },
      "selected": false,
      "width": 1012,
      "height": 144
    },
    {
      "id": "autoSimulationFeedback",
      "type": "requirement",
      "data": {
        "label": "Automatically run simulation after each tutorial step and display results within 2 seconds for designs up to 500 logic elements",
        "impact": 3,
        "impactInsights": "Reinforces learning and showcases core sim loop; moderate impact.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1754,
        "y": 86555
      },
      "style": {
        "width": 1036,
        "height": 144
      },
      "selected": false,
      "width": 1036,
      "height": 144
    },
    {
      "id": "inlineCodeChallengeValidation",
      "type": "requirement",
      "data": {
        "label": "Embed code challenge checkpoints that execute user-entered Verilog or Python snippets and return pass/fail feedback within 3 seconds",
        "impact": 2,
        "impactInsights": "Gamified learning element; useful for tutorials, not core tooling.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1734,
        "y": 87243
      },
      "style": {
        "width": 1076,
        "height": 144
      },
      "selected": false,
      "width": 1076,
      "height": 144
    },
    {
      "id": "contextSensitiveHintSystem",
      "type": "requirement",
      "data": {
        "label": "Offer on-demand context-sensitive hints for each tutorial step, revealed in no more than 3 clicks and logged for analytics",
        "impact": 2,
        "impactInsights": "Further tutorial polish; limited impact on main feature set.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1774,
        "y": 88275
      },
      "style": {
        "width": 996,
        "height": 144
      },
      "selected": false,
      "width": 996,
      "height": 144
    },
    {
      "id": "tutorialWorkspaceResetUndo",
      "type": "requirement",
      "data": {
        "label": "Allow users to reset the tutorial workspace to its initial state in one click and undo the last 20 actions",
        "impact": 2,
        "impactInsights": "Quality-of-life for training; small scope relative to product’s primary value.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1838,
        "y": 89759
      },
      "style": {
        "width": 868,
        "height": 144
      },
      "selected": false,
      "width": 868,
      "height": 144
    },
    {
      "id": "roadmapMVPQ12025",
      "type": "roadmap",
      "data": {
        "label": "V1 - MVP",
        "collapsed": false,
        "editing": false
      },
      "position": {
        "x": 912,
        "y": 61795
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "width": 172,
      "height": 36,
      "selected": false,
      "positionAbsolute": {
        "x": 108,
        "y": -5.059303590859631
      },
      "dragging": false
    },
    {
      "id": "roadmapPerformanceQ22025",
      "type": "roadmap",
      "data": {
        "label": "V2 - Performance & Scalability Improvements",
        "collapsed": false,
        "editing": false
      },
      "position": {
        "x": 816,
        "y": 74940
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "width": 364,
      "height": 36,
      "selected": false,
      "positionAbsolute": {
        "x": 0,
        "y": 234.67315485940284
      },
      "dragging": false
    },
    {
      "id": "roadmapExportToolingQ32025",
      "type": "roadmap",
      "data": {
        "label": "V3 - Production-Ready Export Tooling",
        "collapsed": false,
        "editing": false
      },
      "position": {
        "x": 844,
        "y": 93494
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "width": 308,
      "height": 36,
      "selected": false,
      "positionAbsolute": {
        "x": 28,
        "y": 471.33657742970144
      },
      "dragging": false
    },
    {
      "id": "roadmapPluginsMarketplaceQ42025",
      "type": "roadmap",
      "data": {
        "label": "V4 - Plugin Ecosystem & Marketplace",
        "collapsed": false,
        "editing": false
      },
      "position": {
        "x": 848,
        "y": 94078
      },
      "style": {
        "width": 300,
        "height": 36
      },
      "width": 300,
      "height": 36,
      "selected": false
    },
    {
      "id": "roadmapCollaborationTutorialsQ12026",
      "type": "roadmap",
      "data": {
        "label": "V5 - Collaboration & Tutorials Expansion",
        "collapsed": false,
        "editing": false
      },
      "position": {
        "x": 828,
        "y": 94438
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "width": 340,
      "height": 36,
      "selected": false,
      "positionAbsolute": {
        "x": 12,
        "y": 943.2358117396175
      },
      "dragging": false
    },
    {
      "id": "roadmap_1VkqwcOIu3",
      "type": "roadmap",
      "position": {
        "x": 912,
        "y": 98020
      },
      "data": {
        "label": "V6 - Improvements",
        "collapsed": false
      },
      "selected": false,
      "width": 172,
      "height": 36,
      "style": {
        "width": 172,
        "height": 36
      }
    },
    {
      "id": "multiSelectGroupingAlignment",
      "type": "requirement",
      "data": {
        "label": "Box Select & Multi-Select Grouping with Align/Distribute Executing in ≤200 ms for 50 Blocks",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Core daily‐use editing flow; slow or missing grouping/align makes large designs painful. \n• Directly drives perceived usability of the visual editor, a primary product differentiator. \n\n**Why not 5** \n• Work-arounds (manual drag) exist, so failure degrades UX but does not block all use.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1898,
        "y": 35868
      },
      "style": {
        "width": 748,
        "height": 288
      },
      "selected": false,
      "width": 748,
      "height": 288
    },
    {
      "id": "hierarchicalSubdiagramSupport",
      "type": "requirement",
      "data": {
        "label": "Create, Collapse, and Re-open Hierarchical Sub-Diagrams of 100 Blocks in ≤1 s while Preserving Netlist Hierarchy",
        "impact": 5,
        "impactInsights": "**Why it matters** \n• Essential for scaling beyond toy examples; without hierarchy, diagrams become unmanageable. \n• Impacts both correctness (netlist scope) and UX (visual clutter). \n• Competitors like GNU Radio provide this; absence would be a strategic gap.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1814,
        "y": 39150
      },
      "style": {
        "width": 916,
        "height": 216
      },
      "selected": false,
      "width": 916,
      "height": 216
    },
    {
      "id": "parameterInspectorPanel",
      "type": "requirement",
      "data": {
        "label": "Parameter Inspector Panel Opens in ≤100 ms and Applies Changes to Running Simulation in <1 s",
        "impact": 5,
        "impactInsights": "**Why it matters** \n• Real-time param tweaking is key to an interactive HW sandbox. \n• Directly ties editor to simulator; slow feedback kills exploratory flow. \n• Any delay here propagates to every design iteration.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1894,
        "y": 49264
      },
      "style": {
        "width": 756,
        "height": 216
      },
      "selected": false,
      "width": 756,
      "height": 216
    },
    {
      "id": "autoRoutingConnections",
      "type": "requirement",
      "data": {
        "label": "Auto-Route 90° Orthogonal Connections for up to 100 Nets in ≤500 ms with ≤5 Overlaps",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Reduces diagram clutter and manual wiring effort, improving readability. \n• Speeds initial prototyping, a core product promise. \n\n**Why not 5** \n• Users can still draw wires manually; it’s a productivity boost, not a blocker.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1926,
        "y": 50368
      },
      "style": {
        "width": 692,
        "height": 288
      },
      "selected": false,
      "width": 692,
      "height": 288
    },
    {
      "id": "autosaveRecovery",
      "type": "requirement",
      "data": {
        "label": "Automatic Diagram Autosave Every 30 s with Session Recovery Loading in ≤3 s",
        "impact": 5,
        "impactInsights": "**Why it matters** \n• Protects user work from crashes/power loss; trust & reliability issue. \n• Industry-standard expectation; absence would be viewed as negligence.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1962,
        "y": 47383
      },
      "style": {
        "width": 620,
        "height": 180
      },
      "selected": false,
      "width": 620,
      "height": 180
    },
    {
      "id": "templateParamConfigGUI",
      "type": "requirement",
      "data": {
        "label": "Enable parameterized templates: Editing parameters in properties panel regenerates HDL & updates block within 500 ms for 95th percentile interactions",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Makes template library truly reusable; fixed-param blocks limit value. \n• Tight regeneration time keeps interactive feel. \n\n**Why not 5** \n• Users could clone & edit code manually, though far less convenient.",
        "startDate": "2025-08-23",
        "dueDate": "2025-11-12",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1666,
        "y": 57630
      },
      "style": {
        "width": 1212,
        "height": 288
      },
      "selected": false,
      "width": 1212,
      "height": 288
    },
    {
      "id": "templateLicenseMetadataSPDX",
      "type": "requirement",
      "data": {
        "label": "Attach SPDX license identifier and author metadata to every template and surface in catalog details view",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Clarifies legal usage, easing enterprise adoption. \n\n**Why low** \n• Does not affect core design/simulation flow; mostly compliance.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1846,
        "y": 84039
      },
      "style": {
        "width": 852,
        "height": 252
      },
      "selected": false,
      "width": 852,
      "height": 252
    },
    {
      "id": "templateCiSimPipeline",
      "type": "requirement",
      "data": {
        "label": "Run nightly CI pipeline executing Verilator+Cocotb simulations for all templates, completing under 10 minutes with 0 failures",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Ensures shipped templates stay functional; reduces support load. \n• Builds credibility of catalog. \n\n**Why not higher** \n• Users can still work even if CI occasionally fails; indirect impact.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1762,
        "y": 81379
      },
      "style": {
        "width": 1020,
        "height": 288
      },
      "selected": false,
      "width": 1020,
      "height": 288
    },
    {
      "id": "templatePortDocCoverage",
      "type": "requirement",
      "data": {
        "label": "Generate port documentation table listing direction, width, and purpose for 100 % of template ports",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Aids learnability and integration. \n\n**Why low** \n• Documentation improves UX but does not unlock functionality.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1866,
        "y": 81867
      },
      "style": {
        "width": 812,
        "height": 252
      },
      "selected": false,
      "width": 812,
      "height": 252
    },
    {
      "id": "templateSourceSinkBlocks20",
      "type": "requirement",
      "data": {
        "label": "Provide at least 20 reusable source/sink templates (e.g., noise, sine, spectrum analyzer) for signal generation and inspection",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Out-of-box library sets initial user value; fewer blocks = empty toolbox. \n• Differentiates product similar to GNU Radio’s block set. \n\n**Why not 5** \n• Users can create custom blocks, though with higher barrier.",
        "startDate": "2025-08-25",
        "dueDate": "2026-02-13",
        "status": "To Do",
        "collapsed": false,
        "weight": 24,
        "maxWeight": 24
      },
      "position": {
        "x": 1758,
        "y": 79171
      },
      "style": {
        "width": 1028,
        "height": 288
      },
      "selected": false,
      "width": 1028,
      "height": 288
    },
    {
      "id": "contextAwareAutocomplete",
      "type": "requirement",
      "data": {
        "label": "Offer context-aware auto-completion and signature help for Verilog system tasks/functions and Python 3.10 standard library symbols with response time ≤ 200 ms per keystroke.",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Speeds code entry, reduces syntax errors—critical for mixed visual/code workflow. \n• Competing IDEs provide it; missing feature hurts perceived polish. \n\n**Why not 5** \n• Power users can work without it; core simulation unaffected.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1570,
        "y": 90555
      },
      "style": {
        "width": 1404,
        "height": 288
      },
      "selected": false,
      "width": 1404,
      "height": 288
    },
    {
      "id": "executionSandboxing",
      "type": "requirement",
      "data": {
        "label": "Execute Python snippets in a restricted sandbox limiting file-system access to the project directory, capping CPU time to 2 s per run, and preventing network calls.",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Prevents malicious or runaway code; protects user machine and corporate environments. \n• Enables safe sharing of designs. \n\n**Why not 5** \n• Desktop app (not cloud) less exposed, though still important.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1606,
        "y": 50856
      },
      "style": {
        "width": 1332,
        "height": 288
      },
      "selected": false,
      "width": 1332,
      "height": 288
    },
    {
      "id": "hoverDocumentation",
      "type": "requirement",
      "data": {
        "label": "Display inline documentation tool-tips for Verilog keywords, Python built-ins, and user-defined symbols on hover with latency ≤ 100 ms.",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Lowers learning curve; complements autocomplete. \n\n**Why not higher** \n• Convenience feature; absence doesn’t block workflow.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1722,
        "y": 55252
      },
      "style": {
        "width": 1100,
        "height": 252
      },
      "selected": false,
      "width": 1100,
      "height": 252
    },
    {
      "id": "waveformProbeIntegration",
      "type": "requirement",
      "data": {
        "label": "Enable users to mark snippet pins as probes that automatically stream to oscilloscope/spectrum sink blocks at ≥ 20 fps for up to 1 024 signals.",
        "impact": 5,
        "impactInsights": "**Why it matters** \n• Real-time signal visibility is a marquee feature similar to on-chip debug. \n• Deeply integrates code & visual sinks; drives \"simulate & inspect\" value prop. \n• Performance target ensures smooth UX.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1690,
        "y": 51344
      },
      "style": {
        "width": 1164,
        "height": 216
      },
      "selected": false,
      "width": 1164,
      "height": 216
    },
    {
      "id": "parameterizedSnippets",
      "type": "requirement",
      "data": {
        "label": "Allow definition of editable parameters/constants in a snippet’s property panel and regenerate code/ports within 500 ms after any parameter change.",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Mirrors param templates but for ad-hoc code; empowers iterative design. \n• Keeps code and diagram in sync. \n\n**Why not 5** \n• Users can still edit code directly; workflow just less streamlined.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 20,
        "maxWeight": 24
      },
      "position": {
        "x": 1674,
        "y": 51760
      },
      "style": {
        "width": 1196,
        "height": 288
      },
      "selected": false,
      "width": 1196,
      "height": 288
    },
    {
      "id": "systemVerilogExportCompliance",
      "type": "requirement",
      "data": {
        "label": "Export SystemVerilog-2017 that compiles without warnings on Synopsys VCS and Mentor Questa for designs up to 200 k gates.",
        "impact": 5,
        "impactInsights": "**Why it matters** \n• Bridges from exploratory prototyping to production tool-chains; critical for professional adoption. \n• Compilation warnings erode trust; clean export is table stakes.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1778,
        "y": 91043
      },
      "style": {
        "width": 988,
        "height": 180
      },
      "selected": false,
      "width": 988,
      "height": 180
    },
    {
      "id": "xdcConstraintExport",
      "type": "requirement",
      "data": {
        "label": "Generate Xilinx Design Constraints (.xdc) with pin and timing constraints yielding zero unmet constraints in Vivado timing analysis on reference board.",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Enables FPGA implementation flow, a major use case. \n• Reduces manual constraint editing errors. \n\n**Why not 5** \n• Applies only to Xilinx users; others unaffected.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1658,
        "y": 92327
      },
      "style": {
        "width": 1228,
        "height": 288
      },
      "selected": false,
      "width": 1228,
      "height": 288
    },
    {
      "id": "sdcTimingExport",
      "type": "requirement",
      "data": {
        "label": "Produce Synopsys Design Constraints (.sdc) capturing clocks, IO, and false-path definitions achieving ≤ 5 % timing slack deviation post-synthesis in Design Compiler.",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Critical for ASIC flow; ensures timing intent preserved. \n\n**Why not 5** \n• High-end niche; hobbyists might not care.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1602,
        "y": 94171
      },
      "style": {
        "width": 1340,
        "height": 252
      },
      "selected": false,
      "width": 1340,
      "height": 252
    },
    {
      "id": "cHeaderRegisterExport",
      "type": "requirement",
      "data": {
        "label": "Auto-generate CMSIS-SVD 1.3 compliant XML and corresponding C header/driver for memory-mapped registers compiling cleanly with GCC -Wall -Werror.",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Smooths firmware/hardware hand-off; valuable for SoC use. \n\n**Why not higher** \n• Not every design involves memory-mapped registers.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1682,
        "y": 91875
      },
      "style": {
        "width": 1180,
        "height": 252
      },
      "selected": false,
      "width": 1180,
      "height": 252
    },
    {
      "id": "githubActionCIWorkflowExport",
      "type": "requirement",
      "data": {
        "label": "Output GitHub Actions workflow YAML that builds Verilator simulation, runs Cocotb tests, and uploads coverage in ≤ 15 min CI job.",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Promotes best practices; lowers friction to adopt CI. \n\n**Why not higher** \n• Users can craft workflows themselves; convenience feature.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1746,
        "y": 96215
      },
      "style": {
        "width": 1052,
        "height": 252
      },
      "selected": false,
      "width": 1052,
      "height": 252
    },
    {
      "id": "uvmTbSkeletonExport",
      "type": "requirement",
      "data": {
        "label": "Generate UVM 1.2 SystemVerilog testbench skeleton instantiating DUT, basic sequence, compiling in Questa with -uvm flag.",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Helps advanced verification teams. \n\n**Why low** \n• Specialized; many users will ignore it.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 22,
        "maxWeight": 24
      },
      "position": {
        "x": 1782,
        "y": 94623
      },
      "style": {
        "width": 980,
        "height": 252
      },
      "selected": false,
      "width": 980,
      "height": 252
    },
    {
      "id": "pluginManifestSchema",
      "type": "requirement",
      "data": {
        "label": "Each plugin must include a manifest (plugin.json) conforming to schema v1.1 containing name, version, description, author, license, entrypoints, and minAppVersion; provided CLI linter must report zero errors.",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Ensures plugin ecosystem stability and discoverability. \n\n**Why not higher** \n• Core app functions without plugins; impact indirect.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1430,
        "y": 103311
      },
      "style": {
        "width": 1684,
        "height": 252
      },
      "selected": false,
      "width": 1684,
      "height": 252
    },
    {
      "id": "pluginDeterministicBuilds",
      "type": "requirement",
      "data": {
        "label": "Plugin build pipeline must produce byte-identical artifacts (SHA-256 match) across two consecutive CI runs; non-determinism allowance <0.1 % file diff.",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Supports security and reproducibility. \n\n**Why low** \n• Failure doesn’t impede day-to-day design/simulate cycle.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1658,
        "y": 105499
      },
      "style": {
        "width": 1228,
        "height": 252
      },
      "selected": false,
      "width": 1228,
      "height": 252
    },
    {
      "id": "pluginPerformanceIsolation",
      "type": "requirement",
      "data": {
        "label": "Enabling a plugin in a 50-block reference design shall not increase simulation wall-clock time by >5 % or RAM usage by >100 MB on the baseline laptop (Intel i7-1185G7, 16 GB RAM).",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Guards baseline performance; poor isolation would tarnish user perception. \n\n**Why not higher** \n• Only relevant when plugins installed; core still works.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1546,
        "y": 105951
      },
      "style": {
        "width": 1452,
        "height": 252
      },
      "selected": false,
      "width": 1452,
      "height": 252
    },
    {
      "id": "pluginInternationalizationSupport",
      "type": "requirement",
      "data": {
        "label": "All user-visible strings in a plugin must be externalized via the app’s i18n API; at minimum, English and one additional locale file must be supplied; l10n linter score ≥95 %.",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Broadens market reach; ensures consistent UX. \n\n**Why low** \n• Does not affect functionality for English-speaking users, which may be majority early adopters.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1562,
        "y": 105047
      },
      "style": {
        "width": 1420,
        "height": 252
      },
      "selected": false,
      "width": 1420,
      "height": 252
    },
    {
      "id": "pluginSBOMGeneration",
      "type": "requirement",
      "data": {
        "label": "Plugin distribution bundle must embed an SPDX v2.3 SBOM listing 100 % third-party dependencies; SBOM validation in CI must pass with zero critical issues.",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Aids security/compliance audits, important for enterprise. \n\n**Why low** \n• Indirect effect on day-to-day user value.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 19,
        "maxWeight": 24
      },
      "position": {
        "x": 1646,
        "y": 106747
      },
      "style": {
        "width": 1252,
        "height": 252
      },
      "selected": false,
      "width": 1252,
      "height": 252
    },
    {
      "id": "mixedLangVhdlSupport",
      "type": "requirement",
      "data": {
        "label": "Simulate mixed Verilog/SystemVerilog and VHDL modules via VHPI bridge with 100 % signal visibility and ≤2 % performance degradation compared to Verilog-only designs",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Many legacy IPs in VHDL; mixed-lang ability widens adoption base. \n\n**Why not 5** \n• Some users are Verilog-only; complexity could delay releases.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1606,
        "y": 103763
      },
      "style": {
        "width": 1332,
        "height": 252
      },
      "selected": false,
      "width": 1332,
      "height": 252
    },
    {
      "id": "multithreadedSimScaling50kGate",
      "type": "requirement",
      "data": {
        "label": "Achieve ≥1.8× simulation speedup when increasing CPU cores from 4 to 8 on a 50 k-gate reference design",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Performance is a selling point vs. commercial simulators. \n• Directly impacts productivity on large designs. \n\n**Why not 5** \n• Benefit felt mainly on bigger CPUs/designs; small projects unaffected.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1854,
        "y": 104215
      },
      "style": {
        "width": 836,
        "height": 288
      },
      "selected": false,
      "width": 836,
      "height": 288
    },
    {
      "id": "batchRegression500Tests",
      "type": "requirement",
      "data": {
        "label": "Execute ≥500 parameterized Cocotb testcases in overnight batch mode, producing aggregated JUnit XML and coverage reports",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Supports serious verification workflows. \n\n**Why not higher** \n• Overnight regression is important but not interactive; niche for hobbyists.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1782,
        "y": 96667
      },
      "style": {
        "width": 980,
        "height": 252
      },
      "selected": false,
      "width": 980,
      "height": 252
    },
    {
      "id": "deterministicSeedRepro",
      "type": "requirement",
      "data": {
        "label": "Automatically record random seeds for every Cocotb run and enable deterministic replay that produces identical pass/fail results",
        "impact": 4,
        "impactInsights": "**Why it matters** \n• Key for debugging and CI triage; flakiness erodes trust. \n\n**Why not 5** \n• Applies primarily to randomized tests; some designs deterministic.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1750,
        "y": 88619
      },
      "style": {
        "width": 1044,
        "height": 252
      },
      "selected": false,
      "width": 1044,
      "height": 252
    },
    {
      "id": "dpiCModelCosimSupport",
      "type": "requirement",
      "data": {
        "label": "Link SystemVerilog DPI-C models compiled with GCC/Clang into Verilator simulation and call them from Cocotb with <5 % function-call overhead",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Enables high-performance C models; valuable for certain IP. \n\n**Why not higher** \n• Advanced use case; average user may not need DPI-C.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 10,
        "maxWeight": 24
      },
      "position": {
        "x": 1702,
        "y": 90103
      },
      "style": {
        "width": 1140,
        "height": 252
      },
      "selected": false,
      "width": 1140,
      "height": 252
    },
    {
      "id": "adaptiveDifficultyBranching",
      "type": "requirement",
      "data": {
        "label": "Adapt subsequent tutorial steps based on user error history, selecting the appropriate difficulty branch within 100 ms of step completion",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Improves onboarding and learning retention. \n\n**Why low** \n• Core product usable without adaptive tutorials.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1714,
        "y": 91423
      },
      "style": {
        "width": 1116,
        "height": 252
      },
      "selected": false,
      "width": 1116,
      "height": 252
    },
    {
      "id": "tutorialLocalizationMultiLanguage",
      "type": "requirement",
      "data": {
        "label": "Provide complete localization of tutorial UI and content in English, Spanish, and Simplified Chinese, with language switch achievable from settings in ≤3 clicks",
        "impact": 2,
        "impactInsights": "**Why it matters** \n• Expands global reach. \n\n**Why low** \n• Affects only tutorial content; product still functions.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1622,
        "y": 93267
      },
      "style": {
        "width": 1300,
        "height": 252
      },
      "selected": false,
      "width": 1300,
      "height": 252
    },
    {
      "id": "keyboardAccessibleTutorialControls",
      "type": "requirement",
      "data": {
        "label": "Ensure all tutorial controls (next, previous, hint, reset) are operable via keyboard shortcuts and meet WCAG 2.1 AA for focus indication",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Accessibility compliance broadens audience and avoids legal issues. \n\n**Why not higher** \n• Limited to tutorial area; main editor already keyboard-driven.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1718,
        "y": 92815
      },
      "style": {
        "width": 1108,
        "height": 252
      },
      "selected": false,
      "width": 1108,
      "height": 252
    },
    {
      "id": "tutorialCompletionCertificatePDF",
      "type": "requirement",
      "data": {
        "label": "Generate a branded PDF certificate summarizing completed lessons within 5 s of tutorial completion",
        "impact": 1,
        "impactInsights": "**Why it matters** \n• Nice-to-have for educational marketing. \n\n**Why low** \n• No influence on design or simulation capability.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1870,
        "y": 95075
      },
      "style": {
        "width": 804,
        "height": 252
      },
      "selected": false,
      "width": 804,
      "height": 252
    },
    {
      "id": "tutorialAutosaveAndRestore",
      "type": "requirement",
      "data": {
        "label": "Autosave tutorial workspace and code every 30 s or on checkpoint pass and restore the last state within 3 s after application relaunch",
        "impact": 3,
        "impactInsights": "**Why it matters** \n• Prevents frustration during learning; consistent with diagram autosave. \n\n**Why not higher** \n• Scope limited to tutorial; core projects already covered by global autosave.",
        "startDate": "",
        "dueDate": "",
        "status": "To Do",
        "collapsed": false,
        "weight": 4,
        "maxWeight": 24
      },
      "position": {
        "x": 1726,
        "y": 93719
      },
      "style": {
        "width": 1092,
        "height": 252
      },
      "selected": false,
      "width": 1092,
      "height": 252
    },
    {
      "id": "planBlockLibrary",
      "type": "task",
      "data": {
        "label": "Plan block library scope & content",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-02",
        "dueDate": "2025-09-12",
        "comments": ""
      },
      "position": {
        "x": 3464,
        "y": 59372
      },
      "style": {
        "width": 292,
        "height": 36
      },
      "selected": false,
      "width": 292,
      "height": 36
    },
    {
      "id": "researchCommonBlocks",
      "type": "task",
      "data": {
        "label": "Research common hardware blocks used in industry & education",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-02",
        "dueDate": "2025-09-05"
      },
      "position": {
        "x": 4028,
        "y": 59254
      },
      "style": {
        "width": 500,
        "height": 36
      },
      "selected": false,
      "width": 500,
      "height": 36
    },
    {
      "id": "prioritizeBlockList",
      "type": "task",
      "data": {
        "label": "Prioritize and finalize list of 50+ blocks",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-09",
        "dueDate": "2025-09-12",
        "comments": ""
      },
      "position": {
        "x": 4100,
        "y": 59490
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "designBlockInterfaces",
      "type": "task",
      "data": {
        "label": "Design standardized interfaces for all blocks",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-08-21",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 3420,
        "y": 59844
      },
      "style": {
        "width": 380,
        "height": 36
      },
      "selected": false,
      "width": 380,
      "height": 36
    },
    {
      "id": "defineIOPorts",
      "type": "task",
      "data": {
        "label": "Define input/output port conventions (clock, reset, data, control)",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31",
        "comments": "Defined input, output and inout ports."
      },
      "position": {
        "x": 4004,
        "y": 59726
      },
      "style": {
        "width": 548,
        "height": 36
      },
      "selected": false,
      "width": 548,
      "height": 36
    },
    {
      "id": "defineParamSchema",
      "type": "task",
      "data": {
        "label": "Define parameterization schema (e.g., data width, depth)",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-08-21",
        "dueDate": "2025-08-27",
        "comments": "Parametrization is the same as used in Verilog."
      },
      "position": {
        "x": 4044,
        "y": 59962
      },
      "style": {
        "width": 468,
        "height": 36
      },
      "selected": false,
      "width": 468,
      "height": 36
    },
    {
      "id": "implementHardwareBlocks",
      "type": "task",
      "data": {
        "label": "Implement hardware blocks in HDL/Python",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-09-11",
        "dueDate": "2025-09-19"
      },
      "position": {
        "x": 3444,
        "y": 60316
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "selected": false,
      "width": 332,
      "height": 36
    },
    {
      "id": "codeVerilogBlocks",
      "type": "task",
      "data": {
        "label": "Write synthesizable Verilog for each block",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-09-11",
        "dueDate": "2025-09-17",
        "comments": ""
      },
      "position": {
        "x": 4100,
        "y": 60198
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "codePythonModels",
      "type": "task",
      "data": {
        "label": "Create equivalent Python behavioural models where useful",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-09-13",
        "dueDate": "2025-09-19"
      },
      "position": {
        "x": 4044,
        "y": 60434
      },
      "style": {
        "width": 468,
        "height": 36
      },
      "selected": false,
      "width": 468,
      "height": 36
    },
    {
      "id": "createEditorNodeDefinitions",
      "type": "task",
      "data": {
        "label": "Create React Flow node definitions for each block",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-09-24",
        "dueDate": "2025-10-07"
      },
      "position": {
        "x": 3404,
        "y": 60906
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "createNodeIcons",
      "type": "task",
      "data": {
        "label": "Design node icons / visuals",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-09-24",
        "dueDate": "2025-10-07"
      },
      "position": {
        "x": 4160,
        "y": 60670
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "selected": false,
      "width": 236,
      "height": 36
    },
    {
      "id": "mapPortsToNode",
      "type": "task",
      "data": {
        "label": "Map node ports to block I/O",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-09-26",
        "dueDate": "2025-10-02"
      },
      "position": {
        "x": 4160,
        "y": 60906
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "selected": false,
      "width": 236,
      "height": 36
    },
    {
      "id": "buildConfigUI",
      "type": "task",
      "data": {
        "label": "Build parameter configuration UI",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-09-26",
        "dueDate": "2025-10-02"
      },
      "position": {
        "x": 4140,
        "y": 61142
      },
      "style": {
        "width": 276,
        "height": 36
      },
      "selected": false,
      "width": 276,
      "height": 36
    },
    {
      "id": "integrateSimulationFramework",
      "type": "task",
      "data": {
        "label": "Integrate blocks with Cocotb & Verilator simulation",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-07",
        "dueDate": "2025-10-21"
      },
      "position": {
        "x": 3396,
        "y": 61496
      },
      "style": {
        "width": 428,
        "height": 36
      },
      "selected": false,
      "width": 428,
      "height": 36
    },
    {
      "id": "writeCocotbTestbenches",
      "type": "task",
      "data": {
        "label": "Develop Cocotb testbenches for every block",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-07",
        "dueDate": "2025-10-13"
      },
      "position": {
        "x": 4100,
        "y": 61378
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "ensureVerilatorCompatibility",
      "type": "task",
      "data": {
        "label": "Ensure Verilator compilation & lint passes",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-15",
        "dueDate": "2025-10-21"
      },
      "position": {
        "x": 4100,
        "y": 61614
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "validateAndTestBlocks",
      "type": "task",
      "data": {
        "label": "Validate and test all blocks",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-23",
        "dueDate": "2025-11-07"
      },
      "position": {
        "x": 3488,
        "y": 64092
      },
      "style": {
        "width": 244,
        "height": 36
      },
      "selected": false,
      "width": 244,
      "height": 36
    },
    {
      "id": "unitTestBlocks",
      "type": "task",
      "data": {
        "label": "Run unit tests with predefined vectors",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-23",
        "dueDate": "2025-10-29"
      },
      "position": {
        "x": 4116,
        "y": 63974
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "performanceBenchmarking",
      "type": "task",
      "data": {
        "label": "Benchmark timing & resource utilization",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-01",
        "dueDate": "2025-11-07"
      },
      "position": {
        "x": 4112,
        "y": 64210
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "selected": false,
      "width": 332,
      "height": 36
    },
    {
      "id": "documentBlocks",
      "type": "task",
      "data": {
        "label": "Document block usage & APIs",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-09",
        "dueDate": "2025-11-25"
      },
      "position": {
        "x": 3492,
        "y": 64564
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "selected": false,
      "width": 236,
      "height": 36
    },
    {
      "id": "writeUsageExamples",
      "type": "task",
      "data": {
        "label": "Write usage examples and tutorials",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-09",
        "dueDate": "2025-11-15"
      },
      "position": {
        "x": 4132,
        "y": 64446
      },
      "style": {
        "width": 292,
        "height": 36
      },
      "selected": false,
      "width": 292,
      "height": 36
    },
    {
      "id": "generateAPIDocumentation",
      "type": "task",
      "data": {
        "label": "Generate API reference documentation",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-19",
        "dueDate": "2025-11-25"
      },
      "position": {
        "x": 4124,
        "y": 64682
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "selected": false,
      "width": 308,
      "height": 36
    },
    {
      "id": "packageAndReleaseLibrary",
      "type": "task",
      "data": {
        "label": "Package and release block library",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-29",
        "dueDate": "2025-12-06"
      },
      "position": {
        "x": 3468,
        "y": 65036
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "bundleInstallableModule",
      "type": "task",
      "data": {
        "label": "Bundle blocks as installable module/package",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-29",
        "dueDate": "2025-12-05"
      },
      "position": {
        "x": 4096,
        "y": 64918
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "versionAndPublish",
      "type": "task",
      "data": {
        "label": "Version, tag, and publish release",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-30",
        "dueDate": "2025-12-06"
      },
      "position": {
        "x": 4136,
        "y": 65154
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "setupCICDPipeline",
      "type": "task",
      "data": {
        "label": "Set up CI/CD pipeline for blocks",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-07",
        "dueDate": "2025-12-13"
      },
      "position": {
        "x": 3472,
        "y": 65508
      },
      "style": {
        "width": 276,
        "height": 36
      },
      "selected": false,
      "width": 276,
      "height": 36
    },
    {
      "id": "configureAutoBuild",
      "type": "task",
      "data": {
        "label": "Configure automated build pipeline",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-07",
        "dueDate": "2025-12-13"
      },
      "position": {
        "x": 4132,
        "y": 65390
      },
      "style": {
        "width": 292,
        "height": 36
      },
      "selected": false,
      "width": 292,
      "height": 36
    },
    {
      "id": "configureAutoTest",
      "type": "task",
      "data": {
        "label": "Configure automated test pipeline",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-07",
        "dueDate": "2025-12-13"
      },
      "position": {
        "x": 4136,
        "y": 65626
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "collectUserFeedback",
      "type": "task",
      "data": {
        "label": "Collect and process user feedback",
        "collapsed": false,
        "status": "New",
        "priority": "Low",
        "startDate": "2026-01-19",
        "dueDate": "2026-01-27"
      },
      "position": {
        "x": 3468,
        "y": 65980
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "gatherBetaFeedback",
      "type": "task",
      "data": {
        "label": "Gather feedback from beta users",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2026-01-19",
        "dueDate": "2026-01-25"
      },
      "position": {
        "x": 4144,
        "y": 65862
      },
      "style": {
        "width": 268,
        "height": 36
      },
      "selected": false,
      "width": 268,
      "height": 36
    },
    {
      "id": "iterateImprovements",
      "type": "task",
      "data": {
        "label": "Iteratively improve blocks based on feedback",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2026-01-21",
        "dueDate": "2026-01-27"
      },
      "position": {
        "x": 4092,
        "y": 66098
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskDefineSyncArchitecture",
      "type": "task",
      "data": {
        "label": "Define synchronization architecture and data model",
        "collapsed": false,
        "priority": "High",
        "status": "Solved",
        "comments": "",
        "startDate": "2025-08-24",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 3400,
        "y": 66570
      },
      "style": {
        "width": 420,
        "height": 36
      },
      "selected": false,
      "width": 420,
      "height": 36
    },
    {
      "id": "taskDefineIR",
      "type": "task",
      "data": {
        "label": "Define unified intermediate representation (IR) of hardware design",
        "collapsed": false,
        "status": "Solved",
        "comments": "The IR is the node blocks and edges map in JSON.",
        "priority": "Medium",
        "startDate": "2025-08-24",
        "dueDate": "2025-08-30"
      },
      "position": {
        "x": 4004,
        "y": 66334
      },
      "style": {
        "width": 548,
        "height": 36
      },
      "selected": false,
      "width": 548,
      "height": 36
    },
    {
      "id": "taskMappingIRBlocks",
      "type": "task",
      "data": {
        "label": "Define mapping rules between IR and visual blocks",
        "collapsed": false,
        "status": "Solved",
        "comments": "Each node block has its respective JSON file, which is used to visualize it.",
        "priority": "Medium",
        "startDate": "2025-08-24",
        "dueDate": "2025-08-30"
      },
      "position": {
        "x": 4072,
        "y": 66570
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "taskDefineCodeGenRules",
      "type": "task",
      "data": {
        "label": "Define code-generation rules for Verilog and Python from IR",
        "collapsed": false,
        "status": "Solved",
        "comments": "A test_kinot.py and top_kinot.v are generated from the edges, they call the related python or verilog codes specified for each node.",
        "priority": "Medium",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4032,
        "y": 66806
      },
      "style": {
        "width": 492,
        "height": 36
      },
      "selected": false,
      "width": 492,
      "height": 36
    },
    {
      "id": "taskVisualToIR",
      "type": "task",
      "data": {
        "label": "Implement visual-to-IR converter",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-08-24",
        "dueDate": "2025-09-16"
      },
      "position": {
        "x": 3472,
        "y": 67278
      },
      "style": {
        "width": 276,
        "height": 36
      },
      "selected": false,
      "width": 276,
      "height": 36
    },
    {
      "id": "taskCaptureBlockEvents",
      "type": "task",
      "data": {
        "label": "Capture block-graph change events",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-02",
        "dueDate": "2025-09-08"
      },
      "position": {
        "x": 4136,
        "y": 67042
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "taskTransformBlockToIR",
      "type": "task",
      "data": {
        "label": "Transform block graph into IR",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-08-24",
        "dueDate": "2025-08-30"
      },
      "position": {
        "x": 4152,
        "y": 67278
      },
      "style": {
        "width": 252,
        "height": 36
      },
      "selected": false,
      "width": 252,
      "height": 36
    },
    {
      "id": "taskEmitCodeUpdate",
      "type": "task",
      "data": {
        "label": "Emit update event for code generator",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-10",
        "dueDate": "2025-09-16"
      },
      "position": {
        "x": 4124,
        "y": 67514
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "selected": false,
      "width": 308,
      "height": 36
    },
    {
      "id": "taskIRToCodeGenerator",
      "type": "task",
      "data": {
        "label": "Implement IR-to-code generator (Verilog & Python)",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-08-17",
        "dueDate": "2025-09-10"
      },
      "position": {
        "x": 3404,
        "y": 67986
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "taskGenerateVerilog",
      "type": "task",
      "data": {
        "label": "Generate Verilog code from IR",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-08-17",
        "dueDate": "2025-08-23"
      },
      "position": {
        "x": 4152,
        "y": 67750
      },
      "style": {
        "width": 252,
        "height": 36
      },
      "selected": false,
      "width": 252,
      "height": 36
    },
    {
      "id": "taskGeneratePython",
      "type": "task",
      "data": {
        "label": "Generate Python (Cocotb) code from IR",
        "collapsed": false,
        "status": "Solved",
        "priority": "Medium",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4120,
        "y": 67986
      },
      "style": {
        "width": 316,
        "height": 36
      },
      "selected": false,
      "width": 316,
      "height": 36
    },
    {
      "id": "taskFormatCodeSnippets",
      "type": "task",
      "data": {
        "label": "Format generated code snippets",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-04",
        "dueDate": "2025-09-10"
      },
      "position": {
        "x": 4148,
        "y": 68222
      },
      "style": {
        "width": 260,
        "height": 36
      },
      "selected": false,
      "width": 260,
      "height": 36
    },
    {
      "id": "taskCodeToIR",
      "type": "task",
      "data": {
        "label": "Implement code-to-IR parser",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-18",
        "dueDate": "2025-10-14"
      },
      "position": {
        "x": 3492,
        "y": 68694
      },
      "style": {
        "width": 236,
        "height": 36
      },
      "selected": false,
      "width": 236,
      "height": 36
    },
    {
      "id": "taskVerilogParserIR",
      "type": "task",
      "data": {
        "label": "Build Verilog parser that outputs IR",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-18",
        "dueDate": "2025-09-24"
      },
      "position": {
        "x": 4124,
        "y": 68458
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "selected": false,
      "width": 308,
      "height": 36
    },
    {
      "id": "taskPythonParserIR",
      "type": "task",
      "data": {
        "label": "Build Python parser that outputs IR",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-09-28",
        "dueDate": "2025-10-04"
      },
      "position": {
        "x": 4128,
        "y": 68694
      },
      "style": {
        "width": 300,
        "height": 36
      },
      "selected": false,
      "width": 300,
      "height": 36
    },
    {
      "id": "taskHandleSyntaxErrors",
      "type": "task",
      "data": {
        "label": "Handle syntax errors and provide feedback",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-08",
        "dueDate": "2025-10-14"
      },
      "position": {
        "x": 4104,
        "y": 68930
      },
      "style": {
        "width": 348,
        "height": 36
      },
      "selected": false,
      "width": 348,
      "height": 36
    },
    {
      "id": "taskIRToVisual",
      "type": "task",
      "data": {
        "label": "Implement IR-to-visual updater",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-11",
        "dueDate": "2025-10-26"
      },
      "position": {
        "x": 3480,
        "y": 69284
      },
      "style": {
        "width": 260,
        "height": 36
      },
      "selected": false,
      "width": 260,
      "height": 36
    },
    {
      "id": "taskComputeGraphDiff",
      "type": "task",
      "data": {
        "label": "Compute diff between existing block graph and new IR",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-11",
        "dueDate": "2025-10-17"
      },
      "position": {
        "x": 4060,
        "y": 69166
      },
      "style": {
        "width": 436,
        "height": 36
      },
      "selected": false,
      "width": 436,
      "height": 36
    },
    {
      "id": "taskUpdateVisualBlocks",
      "type": "task",
      "data": {
        "label": "Update visual blocks according to diff",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-20",
        "dueDate": "2025-10-26"
      },
      "position": {
        "x": 4116,
        "y": 69402
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "taskRealtimeSync",
      "type": "task",
      "data": {
        "label": "Integrate real-time synchronization pipeline",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-28",
        "dueDate": "2025-11-05"
      },
      "position": {
        "x": 3424,
        "y": 69756
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskDebounceUpdate",
      "type": "task",
      "data": {
        "label": "Set up debounce to limit update frequency",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-28",
        "dueDate": "2025-11-03"
      },
      "position": {
        "x": 4104,
        "y": 69638
      },
      "style": {
        "width": 348,
        "height": 36
      },
      "selected": false,
      "width": 348,
      "height": 36
    },
    {
      "id": "taskConflictResolution",
      "type": "task",
      "data": {
        "label": "Manage conflict detection and resolution",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-10-30",
        "dueDate": "2025-11-05"
      },
      "position": {
        "x": 4108,
        "y": 69874
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "selected": false,
      "width": 340,
      "height": 36
    },
    {
      "id": "taskStatusUI",
      "type": "task",
      "data": {
        "label": "Implement synchronization status UI",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-08",
        "dueDate": "2025-11-14"
      },
      "position": {
        "x": 3460,
        "y": 70110
      },
      "style": {
        "width": 300,
        "height": 36
      },
      "selected": false,
      "width": 300,
      "height": 36
    },
    {
      "id": "taskDisplaySyncStatus",
      "type": "task",
      "data": {
        "label": "Display sync progress and errors",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-08",
        "dueDate": "2025-11-14"
      },
      "position": {
        "x": 4140,
        "y": 70110
      },
      "style": {
        "width": 276,
        "height": 36
      },
      "selected": false,
      "width": 276,
      "height": 36
    },
    {
      "id": "taskPerformanceOpt",
      "type": "task",
      "data": {
        "label": "Performance testing and optimization",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-17",
        "dueDate": "2025-12-02"
      },
      "position": {
        "x": 3456,
        "y": 70464
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "selected": false,
      "width": 308,
      "height": 36
    },
    {
      "id": "taskBenchmarkLargeDesigns",
      "type": "task",
      "data": {
        "label": "Benchmark synchronization with large designs",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-17",
        "dueDate": "2025-11-23"
      },
      "position": {
        "x": 4092,
        "y": 70346
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskOptimizeAlgorithms",
      "type": "task",
      "data": {
        "label": "Optimize synchronization algorithms",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-11-26",
        "dueDate": "2025-12-02"
      },
      "position": {
        "x": 4128,
        "y": 70582
      },
      "style": {
        "width": 300,
        "height": 36
      },
      "selected": false,
      "width": 300,
      "height": 36
    },
    {
      "id": "taskAutomatedTesting",
      "type": "task",
      "data": {
        "label": "Automated testing suite",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-07",
        "dueDate": "2025-12-21"
      },
      "position": {
        "x": 3508,
        "y": 70936
      },
      "style": {
        "width": 204,
        "height": 36
      },
      "selected": false,
      "width": 204,
      "height": 36
    },
    {
      "id": "taskUnitTestsConverters",
      "type": "task",
      "data": {
        "label": "Unit tests for converters and generators",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-07",
        "dueDate": "2025-12-13"
      },
      "position": {
        "x": 4108,
        "y": 70818
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "selected": false,
      "width": 340,
      "height": 36
    },
    {
      "id": "taskIntegrationTests",
      "type": "task",
      "data": {
        "label": "Integration tests for round-trip consistency",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-15",
        "dueDate": "2025-12-21"
      },
      "position": {
        "x": 4092,
        "y": 71054
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskDocumentation",
      "type": "task",
      "data": {
        "label": "Write Documentation",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2025-12-26",
        "dueDate": "2026-01-10"
      },
      "position": {
        "x": 3524,
        "y": 62204
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 228,
      "height": 36
    },
    {
      "id": "taskWriteUserGuide",
      "type": "task",
      "data": {
        "label": "Write user guide for synchronization feature",
        "collapsed": false,
        "status": "Ongoing",
        "priority": "Medium",
        "startDate": "2025-12-26",
        "dueDate": "2026-01-01"
      },
      "position": {
        "x": 4092,
        "y": 61850
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskCreateSampleTemplates",
      "type": "task",
      "data": {
        "label": "Create sample templates demonstrating sync",
        "collapsed": false,
        "status": "New",
        "priority": "Medium",
        "startDate": "2026-01-04",
        "dueDate": "2026-01-10"
      },
      "position": {
        "x": 4100,
        "y": 62086
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "paramTemplatesPreparation",
      "type": "task",
      "data": {
        "label": "Prepare parameterizable template infrastructure",
        "collapsed": false,
        "startDate": "2025-08-24",
        "dueDate": "2025-09-18"
      },
      "position": {
        "x": 3412,
        "y": 71526
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "paramSchemaDefinition",
      "type": "task",
      "data": {
        "label": "Define JSON/YAML schema for template parameters",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-24",
        "dueDate": "2025-08-30"
      },
      "position": {
        "x": 4080,
        "y": 71290
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "templatePlaceholderInsertion",
      "type": "task",
      "data": {
        "label": "Insert parameter placeholders into existing HDL templates",
        "collapsed": false,
        "status": "Ongoing",
        "startDate": "2025-09-02",
        "dueDate": "2025-09-08"
      },
      "position": {
        "x": 4040,
        "y": 71526
      },
      "style": {
        "width": 476,
        "height": 36
      },
      "selected": false,
      "width": 476,
      "height": 36
    },
    {
      "id": "parameterValidationRules",
      "type": "task",
      "data": {
        "label": "Implement server-side and client-side parameter validation rules",
        "collapsed": false,
        "startDate": "2025-09-12",
        "dueDate": "2025-09-18"
      },
      "position": {
        "x": 4012,
        "y": 71762
      },
      "style": {
        "width": 532,
        "height": 36
      },
      "selected": false,
      "width": 532,
      "height": 36
    },
    {
      "id": "parameterUIImplementation",
      "type": "task",
      "data": {
        "label": "Implement Parameter Editing UI in properties panel",
        "collapsed": false,
        "startDate": "2025-08-24",
        "dueDate": "2025-09-12"
      },
      "position": {
        "x": 3400,
        "y": 72234
      },
      "style": {
        "width": 420,
        "height": 36
      },
      "selected": false,
      "width": 420,
      "height": 36
    },
    {
      "id": "dynamicFormGenerator",
      "type": "task",
      "data": {
        "label": "Build dynamic form generator from parameter schema",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-24",
        "dueDate": "2025-08-30"
      },
      "position": {
        "x": 4068,
        "y": 71998
      },
      "style": {
        "width": 420,
        "height": 36
      },
      "selected": false,
      "width": 420,
      "height": 36
    },
    {
      "id": "uiValidationFeedback",
      "type": "task",
      "data": {
        "label": "Provide real-time validation feedback in UI",
        "collapsed": false,
        "startDate": "2025-09-06",
        "dueDate": "2025-09-12"
      },
      "position": {
        "x": 4096,
        "y": 72234
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "stateBindingImplementation",
      "type": "task",
      "data": {
        "label": "Wire three-way binding between UI, internal state, and schema",
        "collapsed": false,
        "status": "Ongoing",
        "startDate": "2025-09-01",
        "dueDate": "2025-09-07"
      },
      "position": {
        "x": 4024,
        "y": 72470
      },
      "style": {
        "width": 508,
        "height": 36
      },
      "selected": false,
      "width": 508,
      "height": 36
    },
    {
      "id": "regenerationEngineImplementation",
      "type": "task",
      "data": {
        "label": "Implement HDL regeneration engine",
        "collapsed": false,
        "startDate": "2025-08-23",
        "dueDate": "2025-09-13"
      },
      "position": {
        "x": 3468,
        "y": 73060
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "changeDetectionDebounce",
      "type": "task",
      "data": {
        "label": "Detect parameter changes & debounce events",
        "collapsed": false,
        "startDate": "2025-09-07",
        "dueDate": "2025-09-13"
      },
      "position": {
        "x": 4100,
        "y": 72706
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "generateHDL",
      "type": "task",
      "data": {
        "label": "Substitute parameters and generate HDL",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-23",
        "dueDate": "2025-08-29"
      },
      "position": {
        "x": 4116,
        "y": 72942
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "validateHDL",
      "type": "task",
      "data": {
        "label": "Run syntax check on generated HDL",
        "collapsed": false,
        "status": "Solved",
        "comments": "Done by Verilator.",
        "startDate": "2025-08-26",
        "dueDate": "2025-09-01"
      },
      "position": {
        "x": 4136,
        "y": 73178
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "writeHDLMemory",
      "type": "task",
      "data": {
        "label": "Write regenerated HDL to in-memory file system",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4084,
        "y": 73414
      },
      "style": {
        "width": 388,
        "height": 36
      },
      "selected": false,
      "width": 388,
      "height": 36
    },
    {
      "id": "blockUpdateRendering",
      "type": "task",
      "data": {
        "label": "Update visual block after regeneration",
        "collapsed": false,
        "startDate": "2025-08-23",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 3448,
        "y": 73886
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "replaceHDLInModel",
      "type": "task",
      "data": {
        "label": "Replace HDL in simulation model",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-23",
        "dueDate": "2025-08-29"
      },
      "position": {
        "x": 4144,
        "y": 73650
      },
      "style": {
        "width": 268,
        "height": 36
      },
      "selected": false,
      "width": 268,
      "height": 36
    },
    {
      "id": "updateBlockMetadata",
      "type": "task",
      "data": {
        "label": "Update block metadata (ports, params, docs)",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4096,
        "y": 73886
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "reactFlowRerender",
      "type": "task",
      "data": {
        "label": "Trigger React Flow re-render for updated block",
        "collapsed": false,
        "status": "New",
        "startDate": "2025-09-03",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 4084,
        "y": 74122
      },
      "style": {
        "width": 388,
        "height": 36
      },
      "selected": false,
      "width": 388,
      "height": 36
    },
    {
      "id": "performanceAssurance",
      "type": "task",
      "data": {
        "label": "Ensure <500 ms latency for 95th percentile",
        "collapsed": false,
        "startDate": "2025-09-02",
        "dueDate": "2025-09-29"
      },
      "position": {
        "x": 3432,
        "y": 74712
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "profileLatency",
      "type": "task",
      "data": {
        "label": "Profile end-to-end latency across templates",
        "collapsed": false,
        "startDate": "2025-09-02",
        "dueDate": "2025-09-08"
      },
      "position": {
        "x": 4096,
        "y": 74358
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "implementCaching",
      "type": "task",
      "data": {
        "label": "Cache unchanged generation steps",
        "collapsed": false,
        "startDate": "2025-09-09",
        "dueDate": "2025-09-15"
      },
      "position": {
        "x": 4140,
        "y": 74594
      },
      "style": {
        "width": 276,
        "height": 36
      },
      "selected": false,
      "width": 276,
      "height": 36
    },
    {
      "id": "parallelizeTasks",
      "type": "task",
      "data": {
        "label": "Parallelize CPU-heavy subtasks where possible",
        "collapsed": false,
        "startDate": "2025-09-14",
        "dueDate": "2025-09-20"
      },
      "position": {
        "x": 4088,
        "y": 74830
      },
      "style": {
        "width": 380,
        "height": 36
      },
      "selected": false,
      "width": 380,
      "height": 36
    },
    {
      "id": "automatedPerfTesting",
      "type": "task",
      "data": {
        "label": "Set up automated performance tests in CI",
        "collapsed": false,
        "startDate": "2025-09-23",
        "dueDate": "2025-09-29"
      },
      "position": {
        "x": 4108,
        "y": 75066
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "selected": false,
      "width": 340,
      "height": 36
    },
    {
      "id": "automatedTestingQA",
      "type": "task",
      "data": {
        "label": "Automated testing & QA",
        "collapsed": false,
        "startDate": "2025-10-02",
        "dueDate": "2025-10-25"
      },
      "position": {
        "x": 3512,
        "y": 75538
      },
      "style": {
        "width": 196,
        "height": 36
      },
      "selected": false,
      "width": 196,
      "height": 36
    },
    {
      "id": "unitTests",
      "type": "task",
      "data": {
        "label": "Write unit tests for parameter substitution logic",
        "collapsed": false,
        "startDate": "2025-10-02",
        "dueDate": "2025-10-08"
      },
      "position": {
        "x": 4072,
        "y": 75302
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "integrationTests",
      "type": "task",
      "data": {
        "label": "Create integration tests from UI edit to block update",
        "collapsed": false,
        "startDate": "2025-10-10",
        "dueDate": "2025-10-16"
      },
      "position": {
        "x": 4056,
        "y": 75538
      },
      "style": {
        "width": 444,
        "height": 36
      },
      "selected": false,
      "width": 444,
      "height": 36
    },
    {
      "id": "regressionPerformanceTests",
      "type": "task",
      "data": {
        "label": "Add regression tests to guard 500 ms SLA",
        "collapsed": false,
        "startDate": "2025-10-19",
        "dueDate": "2025-10-25"
      },
      "position": {
        "x": 4108,
        "y": 75774
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "selected": false,
      "width": 340,
      "height": 36
    },
    {
      "id": "documentationExamples",
      "type": "task",
      "data": {
        "label": "Documentation & examples",
        "collapsed": false,
        "startDate": "2025-09-02",
        "dueDate": "2025-11-12"
      },
      "position": {
        "x": 3504,
        "y": 43336
      },
      "style": {
        "width": 212,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "updateUserDocs",
      "type": "task",
      "data": {
        "label": "Update user documentation for parameter editing",
        "collapsed": false,
        "status": "Ongoing",
        "startDate": "2025-09-02",
        "dueDate": "2025-11-03"
      },
      "position": {
        "x": 4080,
        "y": 40828
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "createExampleTemplates",
      "type": "task",
      "data": {
        "label": "Provide example parameterized templates",
        "collapsed": false,
        "startDate": "2025-11-06",
        "dueDate": "2025-11-12"
      },
      "position": {
        "x": 4112,
        "y": 41064
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "selected": false,
      "width": 332,
      "height": 36
    },
    {
      "id": "taskT1",
      "type": "task",
      "data": {
        "label": "Define template specifications",
        "collapsed": false,
        "startDate": "2025-09-01",
        "dueDate": "2025-10-03"
      },
      "position": {
        "x": 3480,
        "y": 76364
      },
      "style": {
        "width": 260,
        "height": 36
      },
      "selected": false,
      "width": 260,
      "height": 36
    },
    {
      "id": "taskT1_1",
      "type": "task",
      "data": {
        "label": "Gather common signal generation use cases",
        "collapsed": false,
        "startDate": "2025-09-01",
        "dueDate": "2025-09-07"
      },
      "position": {
        "x": 4104,
        "y": 76010
      },
      "style": {
        "width": 348,
        "height": 36
      },
      "selected": false,
      "width": 348,
      "height": 36
    },
    {
      "id": "taskT1_2",
      "type": "task",
      "data": {
        "label": "Gather common signal inspection use cases",
        "collapsed": false,
        "startDate": "2025-09-08",
        "dueDate": "2025-09-14"
      },
      "position": {
        "x": 4104,
        "y": 76246
      },
      "style": {
        "width": 348,
        "height": 36
      },
      "selected": false,
      "width": 348,
      "height": 36
    },
    {
      "id": "taskT1_3",
      "type": "task",
      "data": {
        "label": "Prioritize list of 20+ template candidates",
        "collapsed": false,
        "startDate": "2025-09-16",
        "dueDate": "2025-09-22"
      },
      "position": {
        "x": 4100,
        "y": 76482
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "taskT1_4",
      "type": "task",
      "data": {
        "label": "Document functional and interface specs for each template",
        "collapsed": false,
        "startDate": "2025-09-27",
        "dueDate": "2025-10-03"
      },
      "position": {
        "x": 4040,
        "y": 76718
      },
      "style": {
        "width": 476,
        "height": 36
      },
      "selected": false,
      "width": 476,
      "height": 36
    },
    {
      "id": "taskT2",
      "type": "task",
      "data": {
        "label": "Design template architecture",
        "collapsed": false,
        "startDate": "2025-08-25",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 3488,
        "y": 77190
      },
      "style": {
        "width": 244,
        "height": 36
      },
      "selected": false,
      "width": 244,
      "height": 36
    },
    {
      "id": "taskT2_1",
      "type": "task",
      "data": {
        "label": "Choose abstraction and parameter interface format",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4072,
        "y": 76954
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "taskT2_2",
      "type": "task",
      "data": {
        "label": "Define coding standards for Verilog and Python implementations",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4020,
        "y": 77190
      },
      "style": {
        "width": 516,
        "height": 36
      },
      "selected": false,
      "width": 516,
      "height": 36
    },
    {
      "id": "taskT2_3",
      "type": "task",
      "data": {
        "label": "Define metadata schema for discoverability",
        "collapsed": false,
        "status": "Ongoing",
        "startDate": "2025-09-03",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 4100,
        "y": 77426
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "taskT3",
      "type": "task",
      "data": {
        "label": "Implement source templates",
        "collapsed": false,
        "startDate": "2025-08-25",
        "dueDate": "2025-10-19"
      },
      "position": {
        "x": 3496,
        "y": 78707
      },
      "style": {
        "width": 228,
        "height": 36
      },
      "selected": false,
      "width": 228,
      "height": 36
    },
    {
      "id": "taskT3_1",
      "type": "task",
      "data": {
        "label": "Develop Noise Generator source template",
        "collapsed": false,
        "status": "Ongoing",
        "startDate": "2025-08-25",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 4112,
        "y": 77662
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "selected": false,
      "width": 332,
      "height": 36
    },
    {
      "id": "taskT3_1_1",
      "type": "task",
      "data": {
        "label": "Implement Verilog version of Noise Generator",
        "collapsed": false,
        "status": "New",
        "startDate": "2025-09-03",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 4744,
        "y": 53068
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskT3_1_2",
      "type": "task",
      "data": {
        "label": "Implement Python version of Noise Generator",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-25",
        "dueDate": "2025-08-31"
      },
      "position": {
        "x": 4748,
        "y": 77780
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "taskT3_2",
      "type": "task",
      "data": {
        "label": "Develop Sine Wave Generator source template",
        "collapsed": false,
        "status": "Ongoing",
        "startDate": "2025-08-26",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 4096,
        "y": 78134
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "taskT3_2_1",
      "type": "task",
      "data": {
        "label": "Implement Verilog version of Sine Wave Generator",
        "collapsed": false,
        "startDate": "2025-09-03",
        "dueDate": "2025-09-09"
      },
      "position": {
        "x": 4728,
        "y": 78016
      },
      "style": {
        "width": 404,
        "height": 36
      },
      "selected": false,
      "width": 404,
      "height": 36
    },
    {
      "id": "taskT3_2_2",
      "type": "task",
      "data": {
        "label": "Implement Python version of Sine Wave Generator",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-26",
        "dueDate": "2025-09-01"
      },
      "position": {
        "x": 4732,
        "y": 79196
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "taskT3_3",
      "type": "task",
      "data": {
        "label": "Develop Square Wave Generator source template",
        "collapsed": false,
        "startDate": "2025-09-08",
        "dueDate": "2025-09-14"
      },
      "position": {
        "x": 4088,
        "y": 78370
      },
      "style": {
        "width": 380,
        "height": 36
      },
      "selected": false,
      "width": 380,
      "height": 36
    },
    {
      "id": "taskT3_4",
      "type": "task",
      "data": {
        "label": "Develop Pulse Generator source template",
        "collapsed": false,
        "startDate": "2025-09-10",
        "dueDate": "2025-09-16"
      },
      "position": {
        "x": 4112,
        "y": 78606
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "selected": false,
      "width": 332,
      "height": 36
    },
    {
      "id": "taskT3_5",
      "type": "task",
      "data": {
        "label": "Develop Arbitrary Waveform Generator source template",
        "collapsed": false,
        "startDate": "2025-09-13",
        "dueDate": "2025-09-19"
      },
      "position": {
        "x": 4060,
        "y": 78842
      },
      "style": {
        "width": 436,
        "height": 36
      },
      "selected": false,
      "width": 436,
      "height": 36
    },
    {
      "id": "taskT3_6",
      "type": "task",
      "data": {
        "label": "Develop Chirp Signal Generator source template",
        "collapsed": false,
        "startDate": "2025-09-15",
        "dueDate": "2025-09-21"
      },
      "position": {
        "x": 4084,
        "y": 79078
      },
      "style": {
        "width": 388,
        "height": 36
      },
      "selected": false,
      "width": 388,
      "height": 36
    },
    {
      "id": "taskT3_7",
      "type": "task",
      "data": {
        "label": "Develop PRBS Generator source template",
        "collapsed": false,
        "startDate": "2025-09-21",
        "dueDate": "2025-09-27"
      },
      "position": {
        "x": 4116,
        "y": 79314
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "taskT3_8",
      "type": "task",
      "data": {
        "label": "Develop Sawtooth Wave Generator source template",
        "collapsed": false,
        "startDate": "2025-09-24",
        "dueDate": "2025-09-30"
      },
      "position": {
        "x": 4080,
        "y": 79550
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "taskT3_9",
      "type": "task",
      "data": {
        "label": "Develop DC Level Source template",
        "collapsed": false,
        "startDate": "2025-10-01",
        "dueDate": "2025-10-07"
      },
      "position": {
        "x": 4140,
        "y": 79786
      },
      "style": {
        "width": 276,
        "height": 36
      },
      "selected": false,
      "width": 276,
      "height": 36
    },
    {
      "id": "taskT3_10",
      "type": "task",
      "data": {
        "label": "Develop Data Replay Source template",
        "collapsed": false,
        "startDate": "2025-10-08",
        "dueDate": "2025-10-14"
      },
      "position": {
        "x": 4128,
        "y": 80022
      },
      "style": {
        "width": 300,
        "height": 36
      },
      "selected": false,
      "width": 300,
      "height": 36
    },
    {
      "id": "taskT4",
      "type": "task",
      "data": {
        "label": "Implement sink templates",
        "collapsed": false,
        "startDate": "2025-08-26",
        "dueDate": "2025-10-26"
      },
      "position": {
        "x": 3504,
        "y": 81539
      },
      "style": {
        "width": 212,
        "height": 36
      },
      "selected": false,
      "width": 212,
      "height": 36
    },
    {
      "id": "taskT4_1",
      "type": "task",
      "data": {
        "label": "Develop Time-Domain Signal Viewer sink template",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-26",
        "dueDate": "2025-09-01"
      },
      "position": {
        "x": 4080,
        "y": 80494
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "taskT4_1_1",
      "type": "task",
      "data": {
        "label": "Implement React Flow node UI for Time-Domain Viewer",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-26",
        "dueDate": "2025-09-01"
      },
      "position": {
        "x": 4716,
        "y": 79432
      },
      "style": {
        "width": 428,
        "height": 36
      },
      "selected": false,
      "width": 428,
      "height": 36
    },
    {
      "id": "taskT4_1_2",
      "type": "task",
      "data": {
        "label": "Integrate plotting library for Time-Domain Viewer",
        "collapsed": false,
        "status": "Solved",
        "startDate": "2025-08-26",
        "dueDate": "2025-09-01"
      },
      "position": {
        "x": 4724,
        "y": 80612
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "taskT4_2",
      "type": "task",
      "data": {
        "label": "Develop Frequency Spectrum Analyzer sink template",
        "collapsed": false,
        "startDate": "2025-09-02",
        "dueDate": "2025-09-10"
      },
      "position": {
        "x": 4072,
        "y": 80966
      },
      "style": {
        "width": 412,
        "height": 36
      },
      "selected": false,
      "width": 412,
      "height": 36
    },
    {
      "id": "taskT4_2_1",
      "type": "task",
      "data": {
        "label": "Implement FFT backend for Spectrum Analyzer",
        "collapsed": false,
        "startDate": "2025-09-02",
        "dueDate": "2025-09-08"
      },
      "position": {
        "x": 4748,
        "y": 80848
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "taskT4_2_2",
      "type": "task",
      "data": {
        "label": "Build frequency plot UI for Spectrum Analyzer",
        "collapsed": false,
        "startDate": "2025-09-04",
        "dueDate": "2025-09-10"
      },
      "position": {
        "x": 4740,
        "y": 81084
      },
      "style": {
        "width": 380,
        "height": 36
      },
      "selected": false,
      "width": 380,
      "height": 36
    },
    {
      "id": "taskT4_3",
      "type": "task",
      "data": {
        "label": "Develop Eye Diagram Viewer sink template",
        "collapsed": false,
        "startDate": "2025-09-13",
        "dueDate": "2025-09-19"
      },
      "position": {
        "x": 4108,
        "y": 81202
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "selected": false,
      "width": 340,
      "height": 36
    },
    {
      "id": "taskT4_4",
      "type": "task",
      "data": {
        "label": "Develop Logic Analyzer sink template",
        "collapsed": false,
        "startDate": "2025-09-20",
        "dueDate": "2025-09-26"
      },
      "position": {
        "x": 4124,
        "y": 81438
      },
      "style": {
        "width": 308,
        "height": 36
      },
      "selected": false,
      "width": 308,
      "height": 36
    },
    {
      "id": "taskT4_5",
      "type": "task",
      "data": {
        "label": "Develop CSV Data Logger sink template",
        "collapsed": false,
        "startDate": "2025-09-23",
        "dueDate": "2025-09-29"
      },
      "position": {
        "x": 4120,
        "y": 81674
      },
      "style": {
        "width": 316,
        "height": 36
      },
      "selected": false,
      "width": 316,
      "height": 36
    },
    {
      "id": "taskT4_6",
      "type": "task",
      "data": {
        "label": "Develop PSD Plotter sink template",
        "collapsed": false,
        "startDate": "2025-10-02",
        "dueDate": "2025-10-08"
      },
      "position": {
        "x": 4136,
        "y": 81910
      },
      "style": {
        "width": 284,
        "height": 36
      },
      "selected": false,
      "width": 284,
      "height": 36
    },
    {
      "id": "taskT4_7",
      "type": "task",
      "data": {
        "label": "Develop XY Scatter Plot viewer sink template",
        "collapsed": false,
        "startDate": "2025-10-06",
        "dueDate": "2025-10-12"
      },
      "position": {
        "x": 4092,
        "y": 82146
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskT4_8",
      "type": "task",
      "data": {
        "label": "Develop Histogram Analyzer sink template",
        "collapsed": false,
        "startDate": "2025-10-10",
        "dueDate": "2025-10-16"
      },
      "position": {
        "x": 4108,
        "y": 82382
      },
      "style": {
        "width": 340,
        "height": 36
      },
      "selected": false,
      "width": 340,
      "height": 36
    },
    {
      "id": "taskT4_9",
      "type": "task",
      "data": {
        "label": "Develop Average Meter sink template",
        "collapsed": false,
        "startDate": "2025-10-15",
        "dueDate": "2025-10-21"
      },
      "position": {
        "x": 4128,
        "y": 82618
      },
      "style": {
        "width": 300,
        "height": 36
      },
      "selected": false,
      "width": 300,
      "height": 36
    },
    {
      "id": "taskT4_10",
      "type": "task",
      "data": {
        "label": "Develop Waterfall Spectrogram sink template",
        "collapsed": false,
        "startDate": "2025-10-20",
        "dueDate": "2025-10-26"
      },
      "position": {
        "x": 4096,
        "y": 82854
      },
      "style": {
        "width": 364,
        "height": 36
      },
      "selected": false,
      "width": 364,
      "height": 36
    },
    {
      "id": "taskT5",
      "type": "task",
      "data": {
        "label": "Unit test each template",
        "collapsed": false,
        "startDate": "2025-10-25",
        "dueDate": "2025-11-16"
      },
      "position": {
        "x": 3508,
        "y": 83444
      },
      "style": {
        "width": 204,
        "height": 36
      },
      "selected": false,
      "width": 204,
      "height": 36
    },
    {
      "id": "taskT5_1",
      "type": "task",
      "data": {
        "label": "Write Cocotb unit tests for source templates",
        "collapsed": false,
        "startDate": "2025-10-25",
        "dueDate": "2025-10-31"
      },
      "position": {
        "x": 4092,
        "y": 83090
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskT5_2",
      "type": "task",
      "data": {
        "label": "Write Cocotb unit tests for sink templates",
        "collapsed": false,
        "startDate": "2025-11-01",
        "dueDate": "2025-11-07"
      },
      "position": {
        "x": 4100,
        "y": 83326
      },
      "style": {
        "width": 356,
        "height": 36
      },
      "selected": false,
      "width": 356,
      "height": 36
    },
    {
      "id": "taskT5_3",
      "type": "task",
      "data": {
        "label": "Run Verilator simulations and collect coverage",
        "collapsed": false,
        "startDate": "2025-11-05",
        "dueDate": "2025-11-11"
      },
      "position": {
        "x": 4084,
        "y": 83562
      },
      "style": {
        "width": 388,
        "height": 36
      },
      "selected": false,
      "width": 388,
      "height": 36
    },
    {
      "id": "taskT5_4",
      "type": "task",
      "data": {
        "label": "Automate template tests in CI pipeline",
        "collapsed": false,
        "startDate": "2025-11-10",
        "dueDate": "2025-11-16"
      },
      "position": {
        "x": 4116,
        "y": 83798
      },
      "style": {
        "width": 324,
        "height": 36
      },
      "selected": false,
      "width": 324,
      "height": 36
    },
    {
      "id": "taskT6",
      "type": "task",
      "data": {
        "label": "Package and register templates",
        "collapsed": false,
        "startDate": "2025-11-16",
        "dueDate": "2025-12-13"
      },
      "position": {
        "x": 3480,
        "y": 84388
      },
      "style": {
        "width": 260,
        "height": 36
      },
      "selected": false,
      "width": 260,
      "height": 36
    },
    {
      "id": "taskT6_1",
      "type": "task",
      "data": {
        "label": "Add metadata, icons, and categories to template library",
        "collapsed": false,
        "startDate": "2025-11-16",
        "dueDate": "2025-11-22"
      },
      "position": {
        "x": 4048,
        "y": 84034
      },
      "style": {
        "width": 460,
        "height": 36
      },
      "selected": false,
      "width": 460,
      "height": 36
    },
    {
      "id": "taskT6_2",
      "type": "task",
      "data": {
        "label": "Publish templates in built-in palette",
        "collapsed": false,
        "startDate": "2025-11-23",
        "dueDate": "2025-11-29"
      },
      "position": {
        "x": 4120,
        "y": 84270
      },
      "style": {
        "width": 316,
        "height": 36
      },
      "selected": false,
      "width": 316,
      "height": 36
    },
    {
      "id": "taskT6_3",
      "type": "task",
      "data": {
        "label": "Update user documentation for templates",
        "collapsed": false,
        "startDate": "2025-11-29",
        "dueDate": "2025-12-05"
      },
      "position": {
        "x": 4112,
        "y": 84506
      },
      "style": {
        "width": 332,
        "height": 36
      },
      "selected": false,
      "width": 332,
      "height": 36
    },
    {
      "id": "taskT6_4",
      "type": "task",
      "data": {
        "label": "Create example workspace using new templates",
        "collapsed": false,
        "startDate": "2025-12-07",
        "dueDate": "2025-12-13"
      },
      "position": {
        "x": 4092,
        "y": 84742
      },
      "style": {
        "width": 372,
        "height": 36
      },
      "selected": false,
      "width": 372,
      "height": 36
    },
    {
      "id": "taskT7",
      "type": "task",
      "data": {
        "label": "Beta review and QA",
        "collapsed": false,
        "startDate": "2026-01-24",
        "dueDate": "2026-02-13"
      },
      "position": {
        "x": 3524,
        "y": 85214
      },
      "style": {
        "width": 172,
        "height": 36
      },
      "selected": false,
      "width": 172,
      "height": 36
    },
    {
      "id": "taskT7_1",
      "type": "task",
      "data": {
        "label": "Conduct internal code reviews",
        "collapsed": false,
        "startDate": "2026-01-24",
        "dueDate": "2026-01-30"
      },
      "position": {
        "x": 4152,
        "y": 84978
      },
      "style": {
        "width": 252,
        "height": 36
      },
      "selected": false,
      "width": 252,
      "height": 36
    },
    {
      "id": "taskT7_2",
      "type": "task",
      "data": {
        "label": "Perform user acceptance testing with beta group",
        "collapsed": false,
        "startDate": "2026-01-31",
        "dueDate": "2026-02-06"
      },
      "position": {
        "x": 4080,
        "y": 85214
      },
      "style": {
        "width": 396,
        "height": 36
      },
      "selected": false,
      "width": 396,
      "height": 36
    },
    {
      "id": "taskT7_3",
      "type": "task",
      "data": {
        "label": "Fix defects and performance issues from beta feedback",
        "collapsed": false,
        "startDate": "2026-02-07",
        "dueDate": "2026-02-13"
      },
      "position": {
        "x": 4056,
        "y": 85450
      },
      "style": {
        "width": 444,
        "height": 36
      },
      "selected": false,
      "width": 444,
      "height": 36
    },
    {
      "id": "task_ZbkuAd8AOc",
      "type": "task",
      "position": {
        "x": 4160,
        "y": 80258
      },
      "data": {
        "label": "Develop CSV source template",
        "collapsed": false,
        "priority": "Highest",
        "startDate": "2025-10-13",
        "dueDate": "2025-10-19",
        "comments": ""
      },
      "selected": false,
      "width": 320,
      "height": 119,
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "dragUXDesign",
      "type": "task",
      "data": {
        "label": "Design Drag-and-Drop Interaction UX",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3460,
        "y": 236
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "dragUXWireframes",
      "type": "task",
      "data": {
        "label": "Create Wireframes & Prototypes",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4148,
        "y": 0
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "dragUXFeedback",
      "type": "task",
      "data": {
        "label": "Conduct User Feedback Sessions",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4148,
        "y": 236
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "dragUXSpec",
      "type": "task",
      "data": {
        "label": "Finalize Interaction Specification",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4132,
        "y": 472
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "implementDragHandler",
      "type": "task",
      "data": {
        "label": "Implement Block Drag Handler in Editor",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3448,
        "y": 1062
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "captureEvents",
      "type": "task",
      "data": {
        "label": "Capture Mouse/Touch Events",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4164,
        "y": 708
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "updateStatePos",
      "type": "task",
      "data": {
        "label": "Update Block Position in State",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4148,
        "y": 944
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "enforceBounds",
      "type": "task",
      "data": {
        "label": "Enforce Canvas Bounding Constraints",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 1180
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "groupDrag",
      "type": "task",
      "data": {
        "label": "Support Multi-Select & Group Drag",
        "collapsed": false
      },
      "position": {
        "x": 4136,
        "y": 1416
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "snapToGridLogic",
      "type": "task",
      "data": {
        "label": "Implement Snap-to-Grid Logic",
        "collapsed": false
      },
      "position": {
        "x": 3488,
        "y": 1888
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "gridConfig",
      "type": "task",
      "data": {
        "label": "Add Configurable Grid Size Settings",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 1652
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "calcNearestGrid",
      "type": "task",
      "data": {
        "label": "Calculate Nearest Grid Position on Drag End",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 1888
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "gridVisualization",
      "type": "task",
      "data": {
        "label": "Visualize Grid & Snap Indicator",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 2124
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "portAutoAlignAlgo",
      "type": "task",
      "data": {
        "label": "Implement Port Auto-Alignment Algorithm",
        "collapsed": false
      },
      "position": {
        "x": 3444,
        "y": 2596
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "detectAdjacentPorts",
      "type": "task",
      "data": {
        "label": "Detect Adjacent Compatible Ports",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 2360
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "autoRoutePreview",
      "type": "task",
      "data": {
        "label": "Auto-Route Link Preview",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 2596
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "overrideToggle",
      "type": "task",
      "data": {
        "label": "Provide User Override / Toggle Auto-Align",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 2832
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "dynamicConnectionPreview",
      "type": "task",
      "data": {
        "label": "Render Dynamic Connection Preview During Drag",
        "collapsed": false
      },
      "position": {
        "x": 3420,
        "y": 3186
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "highlightTargets",
      "type": "task",
      "data": {
        "label": "Highlight Valid Drop Targets",
        "collapsed": false
      },
      "position": {
        "x": 4156,
        "y": 3068
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "drawTempLines",
      "type": "task",
      "data": {
        "label": "Draw Temporary Connector Lines",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 3304
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "placementTesting",
      "type": "task",
      "data": {
        "label": "Create Unit & Integration Tests for Placement Features",
        "collapsed": false
      },
      "position": {
        "x": 3384,
        "y": 3776
      },
      "style": {
        "width": 452,
        "height": 36
      }
    },
    {
      "id": "unitTestsGrid",
      "type": "task",
      "data": {
        "label": "Write Unit Tests for Grid Snapping Calculations",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 3540
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "uiTestsDrag",
      "type": "task",
      "data": {
        "label": "Write UI Tests for Drag-and-Drop Flow",
        "collapsed": false
      },
      "position": {
        "x": 4120,
        "y": 3776
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "regressionAutoAlign",
      "type": "task",
      "data": {
        "label": "Regression Tests for Auto-Align Scenarios",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 4012
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "optimizePerformanceLargeDiagrams",
      "type": "task",
      "data": {
        "label": "Optimize Performance for Large Diagrams",
        "collapsed": false
      },
      "position": {
        "x": 3444,
        "y": 4484
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "throttleDebounce",
      "type": "task",
      "data": {
        "label": "Implement Throttling / Debouncing of Drag Events",
        "collapsed": false
      },
      "position": {
        "x": 4076,
        "y": 4248
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "useRAF",
      "type": "task",
      "data": {
        "label": "Use requestAnimationFrame for Rendering",
        "collapsed": false
      },
      "position": {
        "x": 4112,
        "y": 4484
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "profileBenchmark",
      "type": "task",
      "data": {
        "label": "Profile & Benchmark Interaction Latency",
        "collapsed": false
      },
      "position": {
        "x": 4112,
        "y": 4720
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "updateDocsTutorial",
      "type": "task",
      "data": {
        "label": "Update Documentation & Tutorial Examples",
        "collapsed": false
      },
      "position": {
        "x": 3440,
        "y": 5192
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "addUserGuide",
      "type": "task",
      "data": {
        "label": "Add User Guide Section for Drag-and-Drop",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 4956
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "recordDemo",
      "type": "task",
      "data": {
        "label": "Record Demo GIF / Video",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 5192
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "updateAPIRef",
      "type": "task",
      "data": {
        "label": "Update API Reference for Grid Settings",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 5428
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "designCodeSnippetNodeUIUX",
      "type": "task",
      "data": {
        "label": "Design Code Snippet Node UI/UX",
        "collapsed": false
      },
      "position": {
        "x": 3480,
        "y": 5900
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "defineNodePropertiesMetadata",
      "type": "task",
      "data": {
        "label": "Define node properties and metadata schema",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4100,
        "y": 5664
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "createCodeEditorComponentIntegration",
      "type": "task",
      "data": {
        "label": "Create code editor component integration",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4108,
        "y": 5900
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "integrateMonacoEditor",
      "type": "task",
      "data": {
        "label": "Integrate Monaco Editor",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4828,
        "y": 5782
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "configureLanguageModes",
      "type": "task",
      "data": {
        "label": "Configure language modes for Verilog and Python",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4732,
        "y": 16638
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "implementNodeConnectors",
      "type": "task",
      "data": {
        "label": "Implement node parameter inputs/outputs connectors",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4068,
        "y": 6136
      },
      "style": {
        "width": 420,
        "height": 36
      }
    },
    {
      "id": "implementSyntaxHighlighting",
      "type": "task",
      "data": {
        "label": "Implement syntax highlighting",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3484,
        "y": 6608
      },
      "style": {
        "width": 252,
        "height": 36
      }
    },
    {
      "id": "implementVerilogSyntaxHighlighting",
      "type": "task",
      "data": {
        "label": "Implement Verilog syntax highlighting rules",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4096,
        "y": 6372
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "implementPythonSyntaxHighlighting",
      "type": "task",
      "data": {
        "label": "Implement Python syntax highlighting rules",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4100,
        "y": 6608
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "testHighlightingPerformance",
      "type": "task",
      "data": {
        "label": "Test highlighting performance on large snippets",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4080,
        "y": 6844
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "implementRealtimeLinting",
      "type": "task",
      "data": {
        "label": "Implement real-time linting",
        "collapsed": false
      },
      "position": {
        "x": 3492,
        "y": 7316
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "selectLintingEngines",
      "type": "task",
      "data": {
        "label": "Select linting engines for Verilog and Python",
        "collapsed": false
      },
      "position": {
        "x": 4088,
        "y": 7080
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "integrateLintingWebWorkers",
      "type": "task",
      "data": {
        "label": "Integrate linting via Web Workers",
        "collapsed": false
      },
      "position": {
        "x": 4136,
        "y": 7316
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "mapLintingDiagnostics",
      "type": "task",
      "data": {
        "label": "Map linting diagnostics to editor markers",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 7552
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "implementCompilationSimulationIntegration",
      "type": "task",
      "data": {
        "label": "Implement code snippet compilation & simulation integration",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 3364,
        "y": 8024
      },
      "style": {
        "width": 492,
        "height": 36
      }
    },
    {
      "id": "generateTemporaryFiles",
      "type": "task",
      "data": {
        "label": "Generate temporary files from snippets",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4116,
        "y": 7788
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "verilogSnippetToVerilatorFlow",
      "type": "task",
      "data": {
        "label": "Pass Verilog snippets to Verilator compile flow",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4080,
        "y": 8024
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "wrapPythonSnippetsCocotbHarness",
      "type": "task",
      "data": {
        "label": "Wrap Python snippets with Cocotb test harness",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4088,
        "y": 8260
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "implementDragDropCreationConfiguration",
      "type": "task",
      "data": {
        "label": "Implement drag-and-drop creation & configuration",
        "collapsed": false
      },
      "position": {
        "x": 3408,
        "y": 8614
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "addPaletteEntryCodeSnippetNode",
      "type": "task",
      "data": {
        "label": "Add palette entry for Code Snippet Node",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4112,
        "y": 8496
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "supportOnCanvasEdit",
      "type": "task",
      "data": {
        "label": "Support on-canvas edit via double-click",
        "collapsed": false
      },
      "position": {
        "x": 4112,
        "y": 8732
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "persistCodeSnippetsProjectModel",
      "type": "task",
      "data": {
        "label": "Persist code snippets in project model",
        "collapsed": false
      },
      "position": {
        "x": 3448,
        "y": 9086
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "serializeSnippets",
      "type": "task",
      "data": {
        "label": "Serialize snippets to project file",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 8968
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "loadReconstructNode",
      "type": "task",
      "data": {
        "label": "Load and reconstruct node on project open",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 9204
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "unitIntegrationTesting",
      "type": "task",
      "data": {
        "label": "Unit & integration testing",
        "collapsed": false
      },
      "position": {
        "x": 3496,
        "y": 9558
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "writeJestUnitTestsEditor",
      "type": "task",
      "data": {
        "label": "Write Jest unit tests for editor component",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 9440
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "createEndToEndCypressTests",
      "type": "task",
      "data": {
        "label": "Create end-to-end Cypress tests for snippet node workflow",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 9676
      },
      "style": {
        "width": 476,
        "height": 36
      }
    },
    {
      "id": "provideSampleVerilogSnippet",
      "type": "task",
      "data": {
        "label": "Provide sample Verilog snippet node",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 43336
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "provideSamplePythonSnippet",
      "type": "task",
      "data": {
        "label": "Provide sample Python snippet node",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 44602
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "updateUserManual",
      "type": "task",
      "data": {
        "label": "Update User Manual Sections",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 45566
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "signalMetadataPropagationEngine",
      "type": "task",
      "data": {
        "label": "Implement Signal Metadata Propagation Engine",
        "collapsed": false
      },
      "position": {
        "x": 3424,
        "y": 20178
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "compatibilityRulesLibrary",
      "type": "task",
      "data": {
        "label": "Develop Type & Width Compatibility Rules Library",
        "collapsed": false
      },
      "position": {
        "x": 3408,
        "y": 21122
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "editorValidationTriggerIntegration",
      "type": "task",
      "data": {
        "label": "Integrate Real-Time Validation Trigger in Editor",
        "collapsed": false
      },
      "position": {
        "x": 3408,
        "y": 21948
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "validationPerformanceOptimization",
      "type": "task",
      "data": {
        "label": "Optimize Validation Engine for <1 s Performance",
        "collapsed": false
      },
      "position": {
        "x": 3412,
        "y": 22774
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "errorHighlightingUI",
      "type": "task",
      "data": {
        "label": "Design Visual Error Highlighting & Messaging UI",
        "collapsed": false
      },
      "position": {
        "x": 3412,
        "y": 23718
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "validationTesting",
      "type": "task",
      "data": {
        "label": "Implement Unit & Integration Tests for Validation",
        "collapsed": false
      },
      "position": {
        "x": 3404,
        "y": 24544
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "validationTelemetryLogging",
      "type": "task",
      "data": {
        "label": "Add Telemetry & Logging for Validation Metrics",
        "collapsed": false
      },
      "position": {
        "x": 3416,
        "y": 25252
      },
      "style": {
        "width": 388,
        "height": 36
      }
    },
    {
      "id": "validationDocumentation",
      "type": "task",
      "data": {
        "label": "Document Validation Feature for Users & Developers",
        "collapsed": false
      },
      "position": {
        "x": 3400,
        "y": 25960
      },
      "style": {
        "width": 420,
        "height": 36
      }
    },
    {
      "id": "signalMetadataPropagationEngineDefineSchema",
      "type": "task",
      "data": {
        "label": "Define metadata schema for signal attributes",
        "collapsed": false
      },
      "position": {
        "x": 4092,
        "y": 19824
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "signalMetadataPropagationEngineExtendDataModel",
      "type": "task",
      "data": {
        "label": "Extend block data model to store metadata",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 20060
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "signalMetadataPropagationEngineDevelopAlgorithm",
      "type": "task",
      "data": {
        "label": "Develop propagation algorithm across graph",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 20296
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "signalMetadataPropagationEngineImplementCaching",
      "type": "task",
      "data": {
        "label": "Implement caching strategy to minimize recomputation",
        "collapsed": false
      },
      "position": {
        "x": 4060,
        "y": 20532
      },
      "style": {
        "width": 436,
        "height": 36
      }
    },
    {
      "id": "compatibilityRulesGatherRequirements",
      "type": "task",
      "data": {
        "label": "Gather compatibility requirements from standards and user needs",
        "collapsed": false
      },
      "position": {
        "x": 4016,
        "y": 20768
      },
      "style": {
        "width": 524,
        "height": 36
      }
    },
    {
      "id": "compatibilityRulesEncodeRules",
      "type": "task",
      "data": {
        "label": "Encode rules in declarative format",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 21004
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "compatibilityRulesImplementEngine",
      "type": "task",
      "data": {
        "label": "Implement rule evaluation engine",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 21240
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "compatibilityRulesUserDefinedMechanism",
      "type": "task",
      "data": {
        "label": "Provide mechanism for custom user-defined rules",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 21476
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "editorTriggerHookEvents",
      "type": "task",
      "data": {
        "label": "Hook into React Flow events (node add, connection create)",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 21712
      },
      "style": {
        "width": 476,
        "height": 36
      }
    },
    {
      "id": "editorTriggerDebounceEvents",
      "type": "task",
      "data": {
        "label": "Debounce events to reduce redundant validations",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 21948
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "editorTriggerInvokeValidation",
      "type": "task",
      "data": {
        "label": "Invoke validation engine and return results",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 22184
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "performanceProfileWorkflow",
      "type": "task",
      "data": {
        "label": "Profile validation workflow",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 22420
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "performanceParallelizeEvaluation",
      "type": "task",
      "data": {
        "label": "Parallelize rule evaluation where possible",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 22656
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "performanceIncrementalValidation",
      "type": "task",
      "data": {
        "label": "Implement incremental validation based on changed connections",
        "collapsed": false
      },
      "position": {
        "x": 4024,
        "y": 22892
      },
      "style": {
        "width": 508,
        "height": 36
      }
    },
    {
      "id": "performanceSetBudgets",
      "type": "task",
      "data": {
        "label": "Set performance budgets and automated checks",
        "collapsed": false
      },
      "position": {
        "x": 4092,
        "y": 23128
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "uiDefineVisualizationPatterns",
      "type": "task",
      "data": {
        "label": "Define error visualization patterns (red lines, tooltips)",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 23364
      },
      "style": {
        "width": 476,
        "height": 36
      }
    },
    {
      "id": "uiImplementErrorListPanel",
      "type": "task",
      "data": {
        "label": "Implement UI components for error list panel",
        "collapsed": false
      },
      "position": {
        "x": 4092,
        "y": 23600
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "uiEnsureAccessibility",
      "type": "task",
      "data": {
        "label": "Ensure accessibility (color-blind friendly)",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 23836
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "uiAddClickNavigation",
      "type": "task",
      "data": {
        "label": "Add click-through navigation to offending connection",
        "collapsed": false
      },
      "position": {
        "x": 4060,
        "y": 24072
      },
      "style": {
        "width": 436,
        "height": 36
      }
    },
    {
      "id": "testingWriteUnitTests",
      "type": "task",
      "data": {
        "label": "Write unit tests for rules library",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 24308
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "testingCreateSampleGraphs",
      "type": "task",
      "data": {
        "label": "Create sample graphs with expected errors",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 24544
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "testingAutomateRegression",
      "type": "task",
      "data": {
        "label": "Automate regression tests in CI pipeline",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 24780
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "telemetryLogValidationDuration",
      "type": "task",
      "data": {
        "label": "Log validation duration and error counts",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 25016
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "telemetrySendAnonymized",
      "type": "task",
      "data": {
        "label": "Send anonymized telemetry to analytics service",
        "collapsed": false
      },
      "position": {
        "x": 4084,
        "y": 25252
      },
      "style": {
        "width": 388,
        "height": 36
      }
    },
    {
      "id": "telemetryCreateDashboard",
      "type": "task",
      "data": {
        "label": "Create dashboard to monitor validation performance",
        "collapsed": false
      },
      "position": {
        "x": 4068,
        "y": 25488
      },
      "style": {
        "width": 420,
        "height": 36
      }
    },
    {
      "id": "documentationUpdateUserGuide",
      "type": "task",
      "data": {
        "label": "Update user guide with real-time validation section",
        "collapsed": false
      },
      "position": {
        "x": 4064,
        "y": 25724
      },
      "style": {
        "width": 428,
        "height": 36
      }
    },
    {
      "id": "documentationProvideAPIDocumentation",
      "type": "task",
      "data": {
        "label": "Provide API documentation for rules engine",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 25960
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "documentationCreateTutorials",
      "type": "task",
      "data": {
        "label": "Create tutorial video and sample projects",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 26196
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "designSubdiagramDataModel",
      "type": "task",
      "data": {
        "label": "Design Sub-Diagram Data Model with Hierarchy Metadata",
        "collapsed": false
      },
      "position": {
        "x": 3388,
        "y": 36580
      },
      "style": {
        "width": 444,
        "height": 36
      }
    },
    {
      "id": "defineJsonSchemaChanges",
      "type": "task",
      "data": {
        "label": "Define JSON Schema Changes for Nested Graph",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 36344
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "implementFrontendDataStructures",
      "type": "task",
      "data": {
        "label": "Implement Front-End Data Structures in React Flow State",
        "collapsed": false
      },
      "position": {
        "x": 4048,
        "y": 36580
      },
      "style": {
        "width": 460,
        "height": 36
      }
    },
    {
      "id": "updateBackendSimulationMetadata",
      "type": "task",
      "data": {
        "label": "Update Back-End Simulation Metadata Mapping for Hierarchy",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 36816
      },
      "style": {
        "width": 476,
        "height": 36
      }
    },
    {
      "id": "implementSubdiagramCreation",
      "type": "task",
      "data": {
        "label": "Implement Sub-Diagram Creation Functionality",
        "collapsed": false
      },
      "position": {
        "x": 3424,
        "y": 37406
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "implementMultiSelect",
      "type": "task",
      "data": {
        "label": "Implement Multi-Select of Blocks and Links",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 37052
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "groupSelectionIntoSubdiagram",
      "type": "task",
      "data": {
        "label": "Group Selection into New Sub-Diagram",
        "collapsed": false
      },
      "position": {
        "x": 4124,
        "y": 37288
      },
      "style": {
        "width": 308,
        "height": 36
      }
    },
    {
      "id": "generateWrapperBlock",
      "type": "task",
      "data": {
        "label": "Generate Wrapper Block with Auto-Inferred Ports",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 37524
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "ensureUndoRedoIntegration",
      "type": "task",
      "data": {
        "label": "Ensure Undo/Redo Stack Integration",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 37760
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "implementCollapseExpandUI",
      "type": "task",
      "data": {
        "label": "Implement Collapse/Expand UI Interactions",
        "collapsed": false
      },
      "position": {
        "x": 3436,
        "y": 38350
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "implementCollapseExpandTrigger",
      "type": "task",
      "data": {
        "label": "Add Double-Click or Button Trigger for Collapse/Expand",
        "collapsed": false
      },
      "position": {
        "x": 4052,
        "y": 37996
      },
      "style": {
        "width": 452,
        "height": 36
      }
    },
    {
      "id": "animateCollapseExpand",
      "type": "task",
      "data": {
        "label": "Animate Collapse/Expand for Visual Feedback",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 38232
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "maintainLayoutPositions",
      "type": "task",
      "data": {
        "label": "Maintain Original Layout Positions on Expand",
        "collapsed": false
      },
      "position": {
        "x": 4092,
        "y": 38468
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "updateMinimapViewport",
      "type": "task",
      "data": {
        "label": "Update Minimap & Viewport on Collapse/Expand",
        "collapsed": false
      },
      "position": {
        "x": 4092,
        "y": 38704
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "optimizePerformance100Blocks",
      "type": "task",
      "data": {
        "label": "Optimize Performance for 100-Block Operations",
        "collapsed": false
      },
      "position": {
        "x": 3420,
        "y": 39412
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "benchmarkBaseline100Blocks",
      "type": "task",
      "data": {
        "label": "Benchmark Baseline on 100-Block Graphs",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 38940
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "implementIncrementalRendering",
      "type": "task",
      "data": {
        "label": "Implement Incremental Rendering Strategy",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 39176
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "memoizeNodeRendering",
      "type": "task",
      "data": {
        "label": "Apply Memoization/Virtualization to Node Rendering",
        "collapsed": false
      },
      "position": {
        "x": 4068,
        "y": 39412
      },
      "style": {
        "width": 420,
        "height": 36
      }
    },
    {
      "id": "optimizeEventDispatching",
      "type": "task",
      "data": {
        "label": "Optimize Event Dispatching & Store Updates",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 39648
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "verifyOneSecondPerformance",
      "type": "task",
      "data": {
        "label": "Re-benchmark & Verify ≤1 s Requirement",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 39884
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "preserveNetlistHierarchy",
      "type": "task",
      "data": {
        "label": "Preserve & Validate Netlist Hierarchy",
        "collapsed": false
      },
      "position": {
        "x": 3452,
        "y": 40356
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "generateHierarchicalIdentifiers",
      "type": "task",
      "data": {
        "label": "Generate Hierarchical Unique Identifiers",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 40120
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "updateNetlistExporterHierarchy",
      "type": "task",
      "data": {
        "label": "Update Netlist Exporter to Include Hierarchy Path",
        "collapsed": false
      },
      "position": {
        "x": 4072,
        "y": 40356
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "verifyHierarchyConsistencyTests",
      "type": "task",
      "data": {
        "label": "Verify Hierarchy Consistency via Unit Tests",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 40592
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "writeAutomatedTests",
      "type": "task",
      "data": {
        "label": "Write Automated Tests for Functionality & Timing",
        "collapsed": false
      },
      "position": {
        "x": 3408,
        "y": 45526
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "unitTestsDataModel",
      "type": "task",
      "data": {
        "label": "Create Unit Tests for Data Model",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 44838
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "integrationTestsUIOperations",
      "type": "task",
      "data": {
        "label": "Create Integration Tests for UI Operations",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 45074
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "performanceTestScript",
      "type": "task",
      "data": {
        "label": "Develop Performance Test Script for 100-Block Timing",
        "collapsed": false
      },
      "position": {
        "x": 4060,
        "y": 45310
      },
      "style": {
        "width": 436,
        "height": 36
      }
    },
    {
      "id": "ciPipelineIntegration",
      "type": "task",
      "data": {
        "label": "Integrate Tests into CI Pipeline",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 45802
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "updateSerializationSupport",
      "type": "task",
      "data": {
        "label": "Update Serialization/Deserialization for Sub-Diagrams",
        "collapsed": false
      },
      "position": {
        "x": 3388,
        "y": 45900
      },
      "style": {
        "width": 444,
        "height": 36
      }
    },
    {
      "id": "updateSaveFileVersioning",
      "type": "task",
      "data": {
        "label": "Update Save-File Versioning Schema",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 46038
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "implementDesignMigration",
      "type": "task",
      "data": {
        "label": "Implement Migration Path for Older Designs",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 46274
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "verifyLoadSaveRoundtrip",
      "type": "task",
      "data": {
        "label": "Verify Load/Save Round-Trip with Sub-Diagrams",
        "collapsed": false
      },
      "position": {
        "x": 4088,
        "y": 46510
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "updateDocumentationAndTutorials",
      "type": "task",
      "data": {
        "label": "Update Documentation & Tutorials",
        "collapsed": false
      },
      "position": {
        "x": 3472,
        "y": 46746
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "createTutorialVideo",
      "type": "task",
      "data": {
        "label": "Create Tutorial Video/Walkthrough",
        "collapsed": false
      },
      "position": {
        "x": 4136,
        "y": 46746
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "updateApiDocs",
      "type": "task",
      "data": {
        "label": "Update API Documentation for Programmatic Access",
        "collapsed": false
      },
      "position": {
        "x": 4076,
        "y": 46982
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "optimizePanelInitialization",
      "type": "task",
      "data": {
        "label": "Optimize Panel Initialization",
        "collapsed": false
      },
      "position": {
        "x": 3484,
        "y": 52528
      },
      "style": {
        "width": 252,
        "height": 36
      }
    },
    {
      "id": "profilePanelLoadTime",
      "type": "task",
      "data": {
        "label": "Profile Panel Load Time Bottlenecks",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 52174
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "removeRedundantReRenders",
      "type": "task",
      "data": {
        "label": "Remove Redundant Re-Renders",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 52410
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "memoizeStaticSubcomponents",
      "type": "task",
      "data": {
        "label": "Memoize Static Subcomponents",
        "collapsed": false
      },
      "position": {
        "x": 4156,
        "y": 52646
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "optimizeAssetBundling",
      "type": "task",
      "data": {
        "label": "Optimize Asset Bundling & Minification",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 52882
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "implementLazyLoadingStrategy",
      "type": "task",
      "data": {
        "label": "Implement Lazy Loading Strategy",
        "collapsed": false
      },
      "position": {
        "x": 3476,
        "y": 53354
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "identifyHeavyDependencies",
      "type": "task",
      "data": {
        "label": "Identify Heavy Dependencies",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 53118
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "convertToDynamicImports",
      "type": "task",
      "data": {
        "label": "Convert to Dynamic Imports",
        "collapsed": false
      },
      "position": {
        "x": 4164,
        "y": 53354
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "implementSkeletonLoadingUI",
      "type": "task",
      "data": {
        "label": "Implement Skeleton Loading UI",
        "collapsed": false
      },
      "position": {
        "x": 4152,
        "y": 53590
      },
      "style": {
        "width": 252,
        "height": 36
      }
    },
    {
      "id": "prefetchAndCacheParameterMetadata",
      "type": "task",
      "data": {
        "label": "Pre-fetch & Cache Parameter Metadata",
        "collapsed": false
      },
      "position": {
        "x": 3456,
        "y": 54062
      },
      "style": {
        "width": 308,
        "height": 36
      }
    },
    {
      "id": "designMetadataCacheStructure",
      "type": "task",
      "data": {
        "label": "Design Metadata Cache Structure",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 53826
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "triggerMetadataFetchOnProjectLoad",
      "type": "task",
      "data": {
        "label": "Trigger Metadata Fetch on Project Load",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 54062
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "implementCacheInvalidationPolicy",
      "type": "task",
      "data": {
        "label": "Implement Cache Invalidation Policy",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 54298
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "efficientStateManagementForPanel",
      "type": "task",
      "data": {
        "label": "Implement Efficient State Management for Panel",
        "collapsed": false
      },
      "position": {
        "x": 3416,
        "y": 54770
      },
      "style": {
        "width": 388,
        "height": 36
      }
    },
    {
      "id": "evaluateStateLibraryOptions",
      "type": "task",
      "data": {
        "label": "Evaluate State Library Options",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 54534
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "implementShallowComparisonSelectors",
      "type": "task",
      "data": {
        "label": "Implement Shallow Comparison Selectors",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 54770
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "writeStateUnitTests",
      "type": "task",
      "data": {
        "label": "Write Unit Tests for State Updates",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 55006
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "debouncedAndBatchedParameterUpdates",
      "type": "task",
      "data": {
        "label": "Implement Debounced & Batched Parameter Updates",
        "collapsed": false
      },
      "position": {
        "x": 3412,
        "y": 55478
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "addDebounceToUserInputHandlers",
      "type": "task",
      "data": {
        "label": "Add ≤50 ms Debounce to User Input Handlers",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 55242
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "batchMultipleParameterChanges",
      "type": "task",
      "data": {
        "label": "Batch Multiple Parameter Changes into Single Simulation Call",
        "collapsed": false
      },
      "position": {
        "x": 4028,
        "y": 55478
      },
      "style": {
        "width": 500,
        "height": 36
      }
    },
    {
      "id": "provideImmediateUIFeedbackDuringDebounce",
      "type": "task",
      "data": {
        "label": "Provide Immediate UI Feedback During Debounce",
        "collapsed": false
      },
      "position": {
        "x": 4088,
        "y": 55714
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "incrementalSimulationUpdatePath",
      "type": "task",
      "data": {
        "label": "Implement Incremental Simulation Update Path",
        "collapsed": false
      },
      "position": {
        "x": 3424,
        "y": 56186
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "defineAPILiveParameterInjection",
      "type": "task",
      "data": {
        "label": "Define API for Live Parameter Injection",
        "collapsed": false
      },
      "position": {
        "x": 4112,
        "y": 55950
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "implementDifferentialConfigurationGeneration",
      "type": "task",
      "data": {
        "label": "Implement Differential Configuration Generation",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 56186
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "implementFallbackFullRecompilePath",
      "type": "task",
      "data": {
        "label": "Implement Fallback Full Recompile Path with User Warning",
        "collapsed": false
      },
      "position": {
        "x": 4044,
        "y": 56422
      },
      "style": {
        "width": 468,
        "height": 36
      }
    },
    {
      "id": "performanceProfilingAndMonitoring",
      "type": "task",
      "data": {
        "label": "Establish Performance Profiling & Monitoring",
        "collapsed": false
      },
      "position": {
        "x": 3424,
        "y": 56894
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "integrateReactProfiler",
      "type": "task",
      "data": {
        "label": "Integrate React Profiler",
        "collapsed": false
      },
      "position": {
        "x": 4172,
        "y": 56658
      },
      "style": {
        "width": 212,
        "height": 36
      }
    },
    {
      "id": "addRuntimePerformanceMetricsLogging",
      "type": "task",
      "data": {
        "label": "Add Runtime Performance Metrics Logging",
        "collapsed": false
      },
      "position": {
        "x": 4112,
        "y": 56894
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "documentOptimizationFindings",
      "type": "task",
      "data": {
        "label": "Document Optimization Findings",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 57130
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "automatedTimingTests",
      "type": "task",
      "data": {
        "label": "Implement Automated Timing Tests",
        "collapsed": false
      },
      "position": {
        "x": 3472,
        "y": 57602
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "unitTestPanelOpenTime",
      "type": "task",
      "data": {
        "label": "Unit Test: Panel Opens ≤100 ms",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 57366
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "integrationTestParameterChangeLatency",
      "type": "task",
      "data": {
        "label": "Integration Test: Parameter Change Applies <1 s",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 57602
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "setupCIFailureThresholds",
      "type": "task",
      "data": {
        "label": "Set Up CI Failure Thresholds",
        "collapsed": false
      },
      "position": {
        "x": 4156,
        "y": 57838
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "codeReviewAndRefactoringForPerformance",
      "type": "task",
      "data": {
        "label": "Conduct Code Review & Refactoring for Performance",
        "collapsed": false
      },
      "position": {
        "x": 3404,
        "y": 58310
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "peerReviewCriticalPaths",
      "type": "task",
      "data": {
        "label": "Peer Review Critical Paths",
        "collapsed": false
      },
      "position": {
        "x": 4164,
        "y": 58074
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "refactorSpaghettiCode",
      "type": "task",
      "data": {
        "label": "Refactor Spaghetti Code",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 58310
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "removeDeadCode",
      "type": "task",
      "data": {
        "label": "Remove Dead Code",
        "collapsed": false
      },
      "position": {
        "x": 4192,
        "y": 58546
      },
      "style": {
        "width": 172,
        "height": 36
      }
    },
    {
      "id": "continuousPerformanceRegressionPipeline",
      "type": "task",
      "data": {
        "label": "Set Up Continuous Performance Regression Pipeline",
        "collapsed": false
      },
      "position": {
        "x": 3404,
        "y": 58900
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "addPerformanceBenchmarksToCI",
      "type": "task",
      "data": {
        "label": "Add Performance Benchmarks to CI",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 58782
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "alertOnPerformanceRegression",
      "type": "task",
      "data": {
        "label": "Alert on Performance Regression",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 59018
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "taskAutosaveArch",
      "type": "task",
      "data": {
        "label": "Design Autosave Architecture",
        "collapsed": false
      },
      "position": {
        "x": 3488,
        "y": 47454
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "taskChangeDetection",
      "type": "task",
      "data": {
        "label": "Identify Change-Detection Triggers",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 47218
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "taskDiagramSerializationFormat",
      "type": "task",
      "data": {
        "label": "Define Diagram State Serialization Format",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 47454
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "taskStorageStrategy",
      "type": "task",
      "data": {
        "label": "Specify Autosave Storage Location & File Naming",
        "collapsed": false
      },
      "position": {
        "x": 4080,
        "y": 47690
      },
      "style": {
        "width": 396,
        "height": 36
      }
    },
    {
      "id": "taskAutosaveTimer",
      "type": "task",
      "data": {
        "label": "Implement 30-Second Autosave Timer & Trigger",
        "collapsed": false
      },
      "position": {
        "x": 3424,
        "y": 47926
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "taskTimerResetOnManualSave",
      "type": "task",
      "data": {
        "label": "Reset Timer on Manual Save or Export",
        "collapsed": false
      },
      "position": {
        "x": 4124,
        "y": 47926
      },
      "style": {
        "width": 308,
        "height": 36
      }
    },
    {
      "id": "taskSerializeDiagram",
      "type": "task",
      "data": {
        "label": "Serialize Diagram State",
        "collapsed": false
      },
      "position": {
        "x": 3508,
        "y": 48516
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "taskCollectDiagramState",
      "type": "task",
      "data": {
        "label": "Collect React-Flow Nodes & Edges",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 48162
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "taskCollectCodeSnippets",
      "type": "task",
      "data": {
        "label": "Collect Verilog/Python Code Snippets",
        "collapsed": false
      },
      "position": {
        "x": 4124,
        "y": 48398
      },
      "style": {
        "width": 308,
        "height": 36
      }
    },
    {
      "id": "taskCollectSimConfig",
      "type": "task",
      "data": {
        "label": "Collect Simulator Configuration",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 48634
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "taskCompressJSON",
      "type": "task",
      "data": {
        "label": "Compress Serialized JSON",
        "collapsed": false
      },
      "position": {
        "x": 4172,
        "y": 48870
      },
      "style": {
        "width": 212,
        "height": 36
      }
    },
    {
      "id": "taskWriteToDisk",
      "type": "task",
      "data": {
        "label": "Write State to Disk Atomically",
        "collapsed": false
      },
      "position": {
        "x": 3480,
        "y": 49224
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "taskWriteTempFile",
      "type": "task",
      "data": {
        "label": "Write Autosave State to Temp File",
        "collapsed": false
      },
      "position": {
        "x": 4136,
        "y": 49106
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "taskMoveToAutosaveFile",
      "type": "task",
      "data": {
        "label": "Move Temp to Final Autosave File",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 49342
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "taskSessionRecoveryLoader",
      "type": "task",
      "data": {
        "label": "Implement Session Recovery Loader",
        "collapsed": false
      },
      "position": {
        "x": 3468,
        "y": 49814
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "taskDetectAutosaveFile",
      "type": "task",
      "data": {
        "label": "Detect Autosave File on Startup",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 49578
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "taskRecoveryPrompt",
      "type": "task",
      "data": {
        "label": "Display Recovery Prompt to User",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 49814
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "taskLoadDiagramWithin3s",
      "type": "task",
      "data": {
        "label": "Load & Deserialize Diagram ≤3 s",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 50050
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "taskOptimizeLoading",
      "type": "task",
      "data": {
        "label": "Optimize Recovery Loading Performance",
        "collapsed": false
      },
      "position": {
        "x": 3452,
        "y": 50404
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "taskLazyLoadAssets",
      "type": "task",
      "data": {
        "label": "Lazy-Load Heavy Assets",
        "collapsed": false
      },
      "position": {
        "x": 4180,
        "y": 50286
      },
      "style": {
        "width": 196,
        "height": 36
      }
    },
    {
      "id": "taskBinaryCompression",
      "type": "task",
      "data": {
        "label": "Enable Optional Binary Compression",
        "collapsed": false
      },
      "position": {
        "x": 4132,
        "y": 50522
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "taskTests",
      "type": "task",
      "data": {
        "label": "Develop Unit & Integration Tests",
        "collapsed": false
      },
      "position": {
        "x": 3472,
        "y": 50994
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "taskIntervalAccuracyTest",
      "type": "task",
      "data": {
        "label": "Test Autosave Interval Accuracy",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 50758
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "taskLoadingTimeTest",
      "type": "task",
      "data": {
        "label": "Test Recovery Loading Time",
        "collapsed": false
      },
      "position": {
        "x": 4164,
        "y": 50994
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "taskDataIntegrityTest",
      "type": "task",
      "data": {
        "label": "Test Autosave Data Integrity",
        "collapsed": false
      },
      "position": {
        "x": 4156,
        "y": 51230
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "taskUIFeedback",
      "type": "task",
      "data": {
        "label": "Implement UI Feedback & Error Handling",
        "collapsed": false
      },
      "position": {
        "x": 3448,
        "y": 51702
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "taskSaveStatusIndicator",
      "type": "task",
      "data": {
        "label": "Display Save Status Indicator",
        "collapsed": false
      },
      "position": {
        "x": 4152,
        "y": 51466
      },
      "style": {
        "width": 252,
        "height": 36
      }
    },
    {
      "id": "taskHandleWriteErrors",
      "type": "task",
      "data": {
        "label": "Handle Write Errors with Retries",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 51702
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "taskLogFailures",
      "type": "task",
      "data": {
        "label": "Log Autosave & Recovery Failures",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 51938
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "taskDevDocs",
      "type": "task",
      "data": {
        "label": "Developer Documentation",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 63502
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "taskUserDocs",
      "type": "task",
      "data": {
        "label": "User Documentation",
        "collapsed": false
      },
      "position": {
        "x": 4192,
        "y": 63738
      },
      "style": {
        "width": 172,
        "height": 36
      }
    },
    {
      "id": "defineBlockLibraryArchitecture",
      "type": "task",
      "data": {
        "label": "Define Block Library Architecture",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3468,
        "y": 15458
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "implementParameterizationFramework",
      "type": "task",
      "data": {
        "label": "Implement Parameterization Framework",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 3456,
        "y": 15694
      },
      "style": {
        "width": 308,
        "height": 36
      }
    },
    {
      "id": "buildMetadataIndexAndSearchBackend",
      "type": "task",
      "data": {
        "label": "Build Metadata Index & Search Backend",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3452,
        "y": 15930
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "developParameterisableBlocks",
      "type": "task",
      "data": {
        "label": "Develop 100+ Parameterisable Blocks",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3460,
        "y": 16992
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "integrateLibraryWithEditorUI",
      "type": "task",
      "data": {
        "label": "Integrate Library with Visual Editor UI",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 3444,
        "y": 17936
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "establishCICDValidationPipeline",
      "type": "task",
      "data": {
        "label": "Establish CI/CD Validation Pipeline for Blocks",
        "collapsed": false
      },
      "position": {
        "x": 3416,
        "y": 18644
      },
      "style": {
        "width": 388,
        "height": 36
      }
    },
    {
      "id": "writeDocumentation",
      "type": "task",
      "data": {
        "label": "Write User & Developer Documentation",
        "collapsed": false
      },
      "position": {
        "x": 3456,
        "y": 18998
      },
      "style": {
        "width": 308,
        "height": 36
      }
    },
    {
      "id": "conductPerformanceAndAcceptanceTesting",
      "type": "task",
      "data": {
        "label": "Conduct Performance & Acceptance Testing",
        "collapsed": false
      },
      "position": {
        "x": 3440,
        "y": 19352
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "chooseDataStoreIndexingStrategy",
      "type": "task",
      "data": {
        "label": "Choose Data Store & Indexing Strategy",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4120,
        "y": 15576
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "implementSearchAPI",
      "type": "task",
      "data": {
        "label": "Implement Search API",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4188,
        "y": 15812
      },
      "style": {
        "width": 180,
        "height": 36
      }
    },
    {
      "id": "optimizeSearchPerformance",
      "type": "task",
      "data": {
        "label": "Optimize Search Performance to ≤200 ms",
        "collapsed": false
      },
      "position": {
        "x": 4116,
        "y": 16048
      },
      "style": {
        "width": 324,
        "height": 36
      }
    },
    {
      "id": "implementSearchUnitTests",
      "type": "task",
      "data": {
        "label": "Implement Unit Tests for Search Backend",
        "collapsed": false
      },
      "position": {
        "x": 4112,
        "y": 16284
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "designSourceBlocks",
      "type": "task",
      "data": {
        "label": "Design ≥20 Source Blocks",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4172,
        "y": 16520
      },
      "style": {
        "width": 212,
        "height": 36
      }
    },
    {
      "id": "designProcessingBlocks",
      "type": "task",
      "data": {
        "label": "Design ≥40 Processing Blocks",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4156,
        "y": 16756
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "designSinkBlocks",
      "type": "task",
      "data": {
        "label": "Design ≥20 Sink Blocks",
        "collapsed": false,
        "status": "Ongoing"
      },
      "position": {
        "x": 4180,
        "y": 16992
      },
      "style": {
        "width": 196,
        "height": 36
      }
    },
    {
      "id": "writeBlockMetadataAndParameters",
      "type": "task",
      "data": {
        "label": "Write Block Metadata & Parameter Schemas",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 17228
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "unitTestEachBlock",
      "type": "task",
      "data": {
        "label": "Unit Test Each Block",
        "collapsed": false
      },
      "position": {
        "x": 4188,
        "y": 17464
      },
      "style": {
        "width": 180,
        "height": 36
      }
    },
    {
      "id": "createSearchablePaletteComponent",
      "type": "task",
      "data": {
        "label": "Create Searchable Palette Component",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4128,
        "y": 17700
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "implementDragAndDropFromSearchResults",
      "type": "task",
      "data": {
        "label": "Implement Drag-and-Drop from Search Results",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 17936
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "implementParameterEditingDialog",
      "type": "task",
      "data": {
        "label": "Implement Parameter Editing Dialog",
        "collapsed": false,
        "status": "Solved"
      },
      "position": {
        "x": 4132,
        "y": 18172
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "configureCIPipeline",
      "type": "task",
      "data": {
        "label": "Configure Continuous Integration Pipeline",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 18408
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "addAutomatedBuildLintJobs",
      "type": "task",
      "data": {
        "label": "Add Automated Build & Lint Jobs",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 18644
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "addAutomatedSimulationTests",
      "type": "task",
      "data": {
        "label": "Add Automated Simulation Tests",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 18880
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "measureSearchLatency",
      "type": "task",
      "data": {
        "label": "Measure Search Latency Under Typical Load",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 19116
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "gatherBetaUserFeedback",
      "type": "task",
      "data": {
        "label": "Gather Beta User Feedback",
        "collapsed": false
      },
      "position": {
        "x": 4168,
        "y": 19352
      },
      "style": {
        "width": 220,
        "height": 36
      }
    },
    {
      "id": "fixReportedIssues",
      "type": "task",
      "data": {
        "label": "Fix Reported Issues",
        "collapsed": false
      },
      "position": {
        "x": 4192,
        "y": 19588
      },
      "style": {
        "width": 172,
        "height": 36
      }
    },
    {
      "id": "tUndoArch",
      "type": "task",
      "data": {
        "label": "Design Undo/Redo Architecture",
        "collapsed": false
      },
      "position": {
        "x": 3484,
        "y": 10266
      },
      "style": {
        "width": 252,
        "height": 36
      }
    },
    {
      "id": "tDefineActionAbstraction",
      "type": "task",
      "data": {
        "label": "Define Action Abstraction",
        "collapsed": false
      },
      "position": {
        "x": 4168,
        "y": 9912
      },
      "style": {
        "width": 220,
        "height": 36
      }
    },
    {
      "id": "tDetermineStateStrategy",
      "type": "task",
      "data": {
        "label": "Determine State Snapshot vs Command Pattern Strategy",
        "collapsed": false
      },
      "position": {
        "x": 4060,
        "y": 10148
      },
      "style": {
        "width": 436,
        "height": 36
      }
    },
    {
      "id": "tSpecifyStackSize",
      "type": "task",
      "data": {
        "label": "Specify Minimum Stack Size of 50",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 10384
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "tDefineSerialization",
      "type": "task",
      "data": {
        "label": "Define Action Serialization Requirements",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 10620
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "tImplementRecordingMiddleware",
      "type": "task",
      "data": {
        "label": "Implement Action Recording Middleware",
        "collapsed": false
      },
      "position": {
        "x": 3452,
        "y": 11092
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "tIntegrateReactFlowEvents",
      "type": "task",
      "data": {
        "label": "Integrate Recording with React Flow Events",
        "collapsed": false
      },
      "position": {
        "x": 4100,
        "y": 10856
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "tCaptureCodeEditorChanges",
      "type": "task",
      "data": {
        "label": "Capture Code Editor Changes",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 11092
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "tRecordSimulationParamChanges",
      "type": "task",
      "data": {
        "label": "Record Simulation Parameter Changes",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 11328
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "tImplementStacks",
      "type": "task",
      "data": {
        "label": "Implement Undo and Redo Stacks",
        "collapsed": false
      },
      "position": {
        "x": 3480,
        "y": 11682
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "tStackPushPop",
      "type": "task",
      "data": {
        "label": "Implement Push/Pop Operations",
        "collapsed": false
      },
      "position": {
        "x": 4152,
        "y": 11564
      },
      "style": {
        "width": 252,
        "height": 36
      }
    },
    {
      "id": "tStackSizeLimit",
      "type": "task",
      "data": {
        "label": "Enforce Stack Size Limit",
        "collapsed": false
      },
      "position": {
        "x": 4172,
        "y": 11800
      },
      "style": {
        "width": 212,
        "height": 36
      }
    },
    {
      "id": "tUndoExecLogic",
      "type": "task",
      "data": {
        "label": "Implement Undo Execution Logic",
        "collapsed": false
      },
      "position": {
        "x": 3480,
        "y": 12272
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "tUndoReverseAction",
      "type": "task",
      "data": {
        "label": "Reverse Recorded Action",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 12036
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "tUndoUpdateUI",
      "type": "task",
      "data": {
        "label": "Update UI State after Undo",
        "collapsed": false
      },
      "position": {
        "x": 4164,
        "y": 12272
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "tHandleCompositeActions",
      "type": "task",
      "data": {
        "label": "Handle Composite Actions",
        "collapsed": false
      },
      "position": {
        "x": 4172,
        "y": 12508
      },
      "style": {
        "width": 212,
        "height": 36
      }
    },
    {
      "id": "tRedoExecLogic",
      "type": "task",
      "data": {
        "label": "Implement Redo Execution Logic",
        "collapsed": false
      },
      "position": {
        "x": 3480,
        "y": 12862
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "tRedoReapplyAction",
      "type": "task",
      "data": {
        "label": "Reapply Recorded Action",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 12744
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "tRedoUpdateUI",
      "type": "task",
      "data": {
        "label": "Update UI State after Redo",
        "collapsed": false
      },
      "position": {
        "x": 4164,
        "y": 13098
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "tKeyboardShortcuts",
      "type": "task",
      "data": {
        "label": "Implement Keyboard Shortcuts for Undo/Redo",
        "collapsed": false
      },
      "position": {
        "x": 3432,
        "y": 13098
      },
      "style": {
        "width": 356,
        "height": 36
      }
    },
    {
      "id": "tToolbarButtons",
      "type": "task",
      "data": {
        "label": "Implement Toolbar Buttons for Undo/Redo",
        "collapsed": false
      },
      "position": {
        "x": 3444,
        "y": 13334
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "tPersistHistory",
      "type": "task",
      "data": {
        "label": "Persist History Across Sessions",
        "collapsed": false
      },
      "position": {
        "x": 3476,
        "y": 13570
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "tSerializeHistory",
      "type": "task",
      "data": {
        "label": "Serialize History to Storage",
        "collapsed": false
      },
      "position": {
        "x": 4156,
        "y": 13334
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "tRestoreHistory",
      "type": "task",
      "data": {
        "label": "Restore History on App Load",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 13688
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "tUnitTests",
      "type": "task",
      "data": {
        "label": "Implement Unit Tests for Undo/Redo",
        "collapsed": false
      },
      "position": {
        "x": 3464,
        "y": 14160
      },
      "style": {
        "width": 292,
        "height": 36
      }
    },
    {
      "id": "tTestActionTypes",
      "type": "task",
      "data": {
        "label": "Test Individual Action Types",
        "collapsed": false
      },
      "position": {
        "x": 4156,
        "y": 13924
      },
      "style": {
        "width": 244,
        "height": 36
      }
    },
    {
      "id": "tTest50Actions",
      "type": "task",
      "data": {
        "label": "Test 50 Consecutive Undo/Redo Actions",
        "collapsed": false
      },
      "position": {
        "x": 4120,
        "y": 14160
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "tTestStackEviction",
      "type": "task",
      "data": {
        "label": "Test Stack Limit Eviction",
        "collapsed": false
      },
      "position": {
        "x": 4168,
        "y": 14396
      },
      "style": {
        "width": 220,
        "height": 36
      }
    },
    {
      "id": "tPerformanceOpt",
      "type": "task",
      "data": {
        "label": "Optimize Performance of Undo/Redo",
        "collapsed": false
      },
      "position": {
        "x": 3468,
        "y": 14750
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "tDebounceActions",
      "type": "task",
      "data": {
        "label": "Debounce Rapid Actions",
        "collapsed": false
      },
      "position": {
        "x": 4180,
        "y": 14632
      },
      "style": {
        "width": 196,
        "height": 36
      }
    },
    {
      "id": "tMemoryProfiling",
      "type": "task",
      "data": {
        "label": "Profile Memory Usage",
        "collapsed": false
      },
      "position": {
        "x": 4188,
        "y": 14868
      },
      "style": {
        "width": 180,
        "height": 36
      }
    },
    {
      "id": "tDocumentation",
      "type": "task",
      "data": {
        "label": "Write Documentation for Undo/Redo System",
        "collapsed": false
      },
      "position": {
        "x": 3440,
        "y": 15222
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "tDevDocs",
      "type": "task",
      "data": {
        "label": "Developer Documentation for Adding New Actions",
        "collapsed": false
      },
      "position": {
        "x": 4084,
        "y": 15104
      },
      "style": {
        "width": 388,
        "height": 36
      }
    },
    {
      "id": "tUserDocs",
      "type": "task",
      "data": {
        "label": "User Documentation for Undo/Redo Feature",
        "collapsed": false
      },
      "position": {
        "x": 4108,
        "y": 15340
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "implementMultiSelectMechanics",
      "type": "task",
      "data": {
        "label": "Implement Multi-Select Interaction Mechanics",
        "collapsed": false
      },
      "position": {
        "x": 3424,
        "y": 31506
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "addBoxSelectionDragHandler",
      "type": "task",
      "data": {
        "label": "Add Box Selection Drag Handler",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 31152
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "addModifierClickMultiSelectLogic",
      "type": "task",
      "data": {
        "label": "Add Modifier-Click Multi-Select Logic",
        "collapsed": false
      },
      "position": {
        "x": 4120,
        "y": 31388
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "maintainSelectionStateStore",
      "type": "task",
      "data": {
        "label": "Maintain Selection State Store",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 31624
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "renderSelectionVisualFeedback",
      "type": "task",
      "data": {
        "label": "Render Selection Visual Feedback",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 31860
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "implementGroupingFeature",
      "type": "task",
      "data": {
        "label": "Implement Grouping Feature",
        "collapsed": false
      },
      "position": {
        "x": 3496,
        "y": 32450
      },
      "style": {
        "width": 228,
        "height": 36
      }
    },
    {
      "id": "designGroupDataModel",
      "type": "task",
      "data": {
        "label": "Design Group Data Model",
        "collapsed": false
      },
      "position": {
        "x": 4176,
        "y": 32096
      },
      "style": {
        "width": 204,
        "height": 36
      }
    },
    {
      "id": "implementGroupCreationCommand",
      "type": "task",
      "data": {
        "label": "Implement Group Creation Command",
        "collapsed": false
      },
      "position": {
        "x": 4140,
        "y": 32332
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "implementUngroupCommand",
      "type": "task",
      "data": {
        "label": "Implement Ungroup Command",
        "collapsed": false
      },
      "position": {
        "x": 4168,
        "y": 32568
      },
      "style": {
        "width": 220,
        "height": 36
      }
    },
    {
      "id": "persistGroupInSerialization",
      "type": "task",
      "data": {
        "label": "Persist Grouping in Project Serialization",
        "collapsed": false
      },
      "position": {
        "x": 4104,
        "y": 32804
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "implementAlignDistributeOperations",
      "type": "task",
      "data": {
        "label": "Implement Align & Distribute Operations",
        "collapsed": false
      },
      "position": {
        "x": 3444,
        "y": 33276
      },
      "style": {
        "width": 332,
        "height": 36
      }
    },
    {
      "id": "implementAlignFunctions",
      "type": "task",
      "data": {
        "label": "Implement Align Functions",
        "collapsed": false
      },
      "position": {
        "x": 4168,
        "y": 33040
      },
      "style": {
        "width": 220,
        "height": 36
      }
    },
    {
      "id": "implementDistributeFunctions",
      "type": "task",
      "data": {
        "label": "Implement Distribute Functions",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 33276
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "snapAtomicPositionUpdate",
      "type": "task",
      "data": {
        "label": "Snap Atomic Position Update",
        "collapsed": false
      },
      "position": {
        "x": 4160,
        "y": 33512
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "integrateUIControlsShortcuts",
      "type": "task",
      "data": {
        "label": "Integrate UI Controls & Shortcuts",
        "collapsed": false
      },
      "position": {
        "x": 3468,
        "y": 33984
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "addToolbarButtons",
      "type": "task",
      "data": {
        "label": "Add Toolbar Buttons",
        "collapsed": false
      },
      "position": {
        "x": 4192,
        "y": 33748
      },
      "style": {
        "width": 172,
        "height": 36
      }
    },
    {
      "id": "addContextMenuEntries",
      "type": "task",
      "data": {
        "label": "Add Context Menu Entries",
        "collapsed": false
      },
      "position": {
        "x": 4172,
        "y": 33984
      },
      "style": {
        "width": 212,
        "height": 36
      }
    },
    {
      "id": "addKeyboardShortcuts",
      "type": "task",
      "data": {
        "label": "Add Keyboard Shortcuts",
        "collapsed": false
      },
      "position": {
        "x": 4180,
        "y": 34220
      },
      "style": {
        "width": 196,
        "height": 36
      }
    },
    {
      "id": "integrateUndoRedoSupport",
      "type": "task",
      "data": {
        "label": "Integrate Undo/Redo Support",
        "collapsed": false
      },
      "position": {
        "x": 3492,
        "y": 34574
      },
      "style": {
        "width": 236,
        "height": 36
      }
    },
    {
      "id": "recordSelectionHistory",
      "type": "task",
      "data": {
        "label": "Record Selection Changes in History",
        "collapsed": false
      },
      "position": {
        "x": 4128,
        "y": 34456
      },
      "style": {
        "width": 300,
        "height": 36
      }
    },
    {
      "id": "recordTransformHistory",
      "type": "task",
      "data": {
        "label": "Record Group/Align/Distribute Commands in History",
        "collapsed": false
      },
      "position": {
        "x": 4072,
        "y": 34692
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "meetPerformanceTarget50Blocks",
      "type": "task",
      "data": {
        "label": "Achieve ≤200 ms Performance for 50 Blocks",
        "collapsed": false
      },
      "position": {
        "x": 3436,
        "y": 35164
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "profileAlgorithms",
      "type": "task",
      "data": {
        "label": "Profile Selection & Transformation Algorithms",
        "collapsed": false
      },
      "position": {
        "x": 4088,
        "y": 34928
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "optimizeDataStructures",
      "type": "task",
      "data": {
        "label": "Optimize Data Structures & Algorithms",
        "collapsed": false
      },
      "position": {
        "x": 4120,
        "y": 35164
      },
      "style": {
        "width": 316,
        "height": 36
      }
    },
    {
      "id": "debounceUIRenders",
      "type": "task",
      "data": {
        "label": "Debounce UI Renders",
        "collapsed": false
      },
      "position": {
        "x": 4192,
        "y": 35400
      },
      "style": {
        "width": 172,
        "height": 36
      }
    },
    {
      "id": "implementAutomatedTests",
      "type": "task",
      "data": {
        "label": "Implement Automated Tests",
        "collapsed": false
      },
      "position": {
        "x": 3500,
        "y": 35872
      },
      "style": {
        "width": 220,
        "height": 36
      }
    },
    {
      "id": "unitTestsSelectionLogic",
      "type": "task",
      "data": {
        "label": "Unit Tests for Selection Logic",
        "collapsed": false
      },
      "position": {
        "x": 4148,
        "y": 35636
      },
      "style": {
        "width": 260,
        "height": 36
      }
    },
    {
      "id": "unitTestsGroupModel",
      "type": "task",
      "data": {
        "label": "Unit Tests for Group Data Model",
        "collapsed": false
      },
      "position": {
        "x": 4144,
        "y": 35872
      },
      "style": {
        "width": 268,
        "height": 36
      }
    },
    {
      "id": "integrationPerformanceTest",
      "type": "task",
      "data": {
        "label": "Integration Test for 50-Block Alignment Execution Time",
        "collapsed": false
      },
      "position": {
        "x": 4052,
        "y": 36108
      },
      "style": {
        "width": 452,
        "height": 36
      }
    },
    {
      "id": "updateDocsTutorials",
      "type": "task",
      "data": {
        "label": "Update Documentation & Tutorials",
        "collapsed": false
      },
      "position": {
        "x": 3472,
        "y": 36226
      },
      "style": {
        "width": 276,
        "height": 36
      }
    },
    {
      "id": "defineCodeSnippetNodeArchitecture",
      "type": "task",
      "data": {
        "label": "Design overall architecture for Code Snippet Node",
        "collapsed": false
      },
      "position": {
        "x": 3404,
        "y": 26550
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "defineDataModelForCodeSnippet",
      "type": "task",
      "data": {
        "label": "Define data model for storing code, language metadata, and simulation bindings",
        "collapsed": false
      },
      "position": {
        "x": 3956,
        "y": 26432
      },
      "style": {
        "width": 644,
        "height": 36
      }
    },
    {
      "id": "defineSimulationInterface",
      "type": "task",
      "data": {
        "label": "Specify interface between Code Snippet Node and simulation engine",
        "collapsed": false
      },
      "position": {
        "x": 4008,
        "y": 26668
      },
      "style": {
        "width": 540,
        "height": 36
      }
    },
    {
      "id": "implementCodeEditorIntegration",
      "type": "task",
      "data": {
        "label": "Implement in-node code editor integration",
        "collapsed": false
      },
      "position": {
        "x": 3436,
        "y": 27140
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "addVerilogSyntaxHighlighting",
      "type": "task",
      "data": {
        "label": "Add Verilog (IEEE-1364-2005) syntax highlighting & linting",
        "collapsed": false
      },
      "position": {
        "x": 4036,
        "y": 26904
      },
      "style": {
        "width": 484,
        "height": 36
      }
    },
    {
      "id": "addPythonSyntaxHighlighting",
      "type": "task",
      "data": {
        "label": "Add Python 3.10 syntax highlighting & linting",
        "collapsed": false
      },
      "position": {
        "x": 4088,
        "y": 27140
      },
      "style": {
        "width": 380,
        "height": 36
      }
    },
    {
      "id": "implementLanguageSelectionToggle",
      "type": "task",
      "data": {
        "label": "Provide UI toggle to select Verilog or Python mode",
        "collapsed": false
      },
      "position": {
        "x": 4068,
        "y": 27376
      },
      "style": {
        "width": 420,
        "height": 36
      }
    },
    {
      "id": "implementCodeExecutionBackend",
      "type": "task",
      "data": {
        "label": "Implement code execution back-end",
        "collapsed": false
      },
      "position": {
        "x": 3468,
        "y": 28084
      },
      "style": {
        "width": 284,
        "height": 36
      }
    },
    {
      "id": "setupVerilogCompilationWithVerilator",
      "type": "task",
      "data": {
        "label": "Set up Verilog compilation & simulation flow using Verilator",
        "collapsed": false
      },
      "position": {
        "x": 4028,
        "y": 27612
      },
      "style": {
        "width": 500,
        "height": 36
      }
    },
    {
      "id": "generateVerilogSimulationHarness",
      "type": "task",
      "data": {
        "label": "Generate wrapper harness for Verilator-compiled modules",
        "collapsed": false
      },
      "position": {
        "x": 4700,
        "y": 16874
      },
      "style": {
        "width": 460,
        "height": 36
      }
    },
    {
      "id": "implementCompiledModuleCaching",
      "type": "task",
      "data": {
        "label": "Cache compiled Verilog modules for faster re-runs",
        "collapsed": false
      },
      "position": {
        "x": 4724,
        "y": 27730
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "setupPythonExecutionEnvironment",
      "type": "task",
      "data": {
        "label": "Set up isolated Python 3.10 execution environment",
        "collapsed": false
      },
      "position": {
        "x": 4072,
        "y": 28084
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "isolatePythonInterpreter",
      "type": "task",
      "data": {
        "label": "Instantiate sandboxed CPython interpreter",
        "collapsed": false
      },
      "position": {
        "x": 4756,
        "y": 27966
      },
      "style": {
        "width": 348,
        "height": 36
      }
    },
    {
      "id": "createSignalIOMappingBetweenPythonAndSimulation",
      "type": "task",
      "data": {
        "label": "Map Python I/O to simulation signals & time steps",
        "collapsed": false
      },
      "position": {
        "x": 4724,
        "y": 52832
      },
      "style": {
        "width": 412,
        "height": 36
      }
    },
    {
      "id": "integrateCocotbForMixedLanguageSimulation",
      "type": "task",
      "data": {
        "label": "Integrate Cocotb testbench for mixed-language simulation",
        "collapsed": false
      },
      "position": {
        "x": 4044,
        "y": 28320
      },
      "style": {
        "width": 468,
        "height": 36
      }
    },
    {
      "id": "implementUIandUX",
      "type": "task",
      "data": {
        "label": "Implement UI/UX for node placement and results display",
        "collapsed": false
      },
      "position": {
        "x": 3384,
        "y": 28792
      },
      "style": {
        "width": 452,
        "height": 36
      }
    },
    {
      "id": "buildNodeInsertionTooling",
      "type": "task",
      "data": {
        "label": "Add drag-and-drop insertion tooling for Code Snippet Node",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 28556
      },
      "style": {
        "width": 476,
        "height": 36
      }
    },
    {
      "id": "buildConfigurationPanel",
      "type": "task",
      "data": {
        "label": "Create configuration panel for code, language, and build options",
        "collapsed": false
      },
      "position": {
        "x": 4012,
        "y": 28792
      },
      "style": {
        "width": 532,
        "height": 36
      }
    },
    {
      "id": "displayRuntimeResultsConsoleAndWaveforms",
      "type": "task",
      "data": {
        "label": "Display console output and interactive waveforms/time-frequency plots",
        "collapsed": false
      },
      "position": {
        "x": 3992,
        "y": 29028
      },
      "style": {
        "width": 572,
        "height": 36
      }
    },
    {
      "id": "implementSecuritySandboxing",
      "type": "task",
      "data": {
        "label": "Implement security & sandboxing measures",
        "collapsed": false
      },
      "position": {
        "x": 3440,
        "y": 29382
      },
      "style": {
        "width": 340,
        "height": 36
      }
    },
    {
      "id": "restrictFileSystemAccess",
      "type": "task",
      "data": {
        "label": "Restrict file-system and network access for executed code",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 29264
      },
      "style": {
        "width": 476,
        "height": 36
      }
    },
    {
      "id": "limitRuntimeResources",
      "type": "task",
      "data": {
        "label": "Limit CPU/memory/time resources during execution",
        "collapsed": false
      },
      "position": {
        "x": 4076,
        "y": 29500
      },
      "style": {
        "width": 404,
        "height": 36
      }
    },
    {
      "id": "developTestingSuiteForCodeSnippetNode",
      "type": "task",
      "data": {
        "label": "Develop automated testing suite for Code Snippet Node",
        "collapsed": false
      },
      "position": {
        "x": 3388,
        "y": 29972
      },
      "style": {
        "width": 444,
        "height": 36
      }
    },
    {
      "id": "writeUnitTestsForVerilogSnippets",
      "type": "task",
      "data": {
        "label": "Write unit tests for sample Verilog snippets",
        "collapsed": false
      },
      "position": {
        "x": 4092,
        "y": 29736
      },
      "style": {
        "width": 372,
        "height": 36
      }
    },
    {
      "id": "writeUnitTestsForPythonSnippets",
      "type": "task",
      "data": {
        "label": "Write unit tests for sample Python snippets",
        "collapsed": false
      },
      "position": {
        "x": 4096,
        "y": 29972
      },
      "style": {
        "width": 364,
        "height": 36
      }
    },
    {
      "id": "writeIntegrationTestsForCodeSnippetNode",
      "type": "task",
      "data": {
        "label": "Write end-to-end integration tests covering editor, build, and simulation",
        "collapsed": false
      },
      "position": {
        "x": 3976,
        "y": 30208
      },
      "style": {
        "width": 604,
        "height": 36
      }
    },
    {
      "id": "writeUserDocumentation",
      "type": "task",
      "data": {
        "label": "Write user documentation for Code Snippet Node",
        "collapsed": false
      },
      "position": {
        "x": 3416,
        "y": 30444
      },
      "style": {
        "width": 388,
        "height": 36
      }
    },
    {
      "id": "createExampleCodeSnippets",
      "type": "task",
      "data": {
        "label": "Create example Verilog & Python snippets demonstrating usage",
        "collapsed": false
      },
      "position": {
        "x": 4028,
        "y": 30444
      },
      "style": {
        "width": 500,
        "height": 36
      }
    },
    {
      "id": "updateCIPipelineAndPackaging",
      "type": "task",
      "data": {
        "label": "Update CI pipeline & packaging for new dependencies",
        "collapsed": false
      },
      "position": {
        "x": 3396,
        "y": 30798
      },
      "style": {
        "width": 428,
        "height": 36
      }
    },
    {
      "id": "updateCIPipelineWithVerilatorAndPythonRuntimes",
      "type": "task",
      "data": {
        "label": "Add Verilator and Python 3.10 runtimes to CI image",
        "collapsed": false
      },
      "position": {
        "x": 4068,
        "y": 30680
      },
      "style": {
        "width": 420,
        "height": 36
      }
    },
    {
      "id": "implementCrossPlatformPackaging",
      "type": "task",
      "data": {
        "label": "Package runtimes for Windows, macOS, and Linux installers",
        "collapsed": false
      },
      "position": {
        "x": 4040,
        "y": 30916
      },
      "style": {
        "width": 476,
        "height": 36
      }
    }
  ],
  "edges": [
    {
      "id": "e_hardwareEngineers_rapidPrototyping",
      "source": "hardwareEngineers",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_hardwareEngineers_visualCodeWorkflow",
      "source": "hardwareEngineers",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_hardwareEngineers_fastVerification",
      "source": "hardwareEngineers",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_hardwareEngineers_interoperability",
      "source": "hardwareEngineers",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_hardwareEngineers_collaborationReuse",
      "source": "hardwareEngineers",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_fpgaDesigners_rapidPrototyping",
      "source": "fpgaDesigners",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_fpgaDesigners_visualCodeWorkflow",
      "source": "fpgaDesigners",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_fpgaDesigners_fastVerification",
      "source": "fpgaDesigners",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_fpgaDesigners_interoperability",
      "source": "fpgaDesigners",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_fpgaDesigners_collaborationReuse",
      "source": "fpgaDesigners",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_fpgaDesigners_timeToMarket",
      "source": "fpgaDesigners",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_asicDesigners_rapidPrototyping",
      "source": "asicDesigners",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_asicDesigners_fastVerification",
      "source": "asicDesigners",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_asicDesigners_interoperability",
      "source": "asicDesigners",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_asicDesigners_collaborationReuse",
      "source": "asicDesigners",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_asicDesigners_timeToMarket",
      "source": "asicDesigners",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_embeddedDevelopers_rapidPrototyping",
      "source": "embeddedDevelopers",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_embeddedDevelopers_visualCodeWorkflow",
      "source": "embeddedDevelopers",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_embeddedDevelopers_fastVerification",
      "source": "embeddedDevelopers",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_embeddedDevelopers_costEffectiveOpenSource",
      "source": "embeddedDevelopers",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_embeddedDevelopers_interoperability",
      "source": "embeddedDevelopers",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_embeddedDevelopers_timeToMarket",
      "source": "embeddedDevelopers",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_verificationEngineers_fastVerification",
      "source": "verificationEngineers",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_verificationEngineers_interoperability",
      "source": "verificationEngineers",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_verificationEngineers_collaborationReuse",
      "source": "verificationEngineers",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_verificationEngineers_timeToMarket",
      "source": "verificationEngineers",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_researchScientists_rapidPrototyping",
      "source": "researchScientists",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_researchScientists_visualCodeWorkflow",
      "source": "researchScientists",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_researchScientists_educationTraining",
      "source": "researchScientists",
      "target": "educationTraining",
      "selected": false
    },
    {
      "id": "e_researchScientists_costEffectiveOpenSource",
      "source": "researchScientists",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_researchScientists_collaborationReuse",
      "source": "researchScientists",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_engineeringStudents_educationTraining",
      "source": "engineeringStudents",
      "target": "educationTraining",
      "selected": false
    },
    {
      "id": "e_engineeringStudents_costEffectiveOpenSource",
      "source": "engineeringStudents",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_engineeringStudents_visualCodeWorkflow",
      "source": "engineeringStudents",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_openSourceCommunity_costEffectiveOpenSource",
      "source": "openSourceCommunity",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_openSourceCommunity_collaborationReuse",
      "source": "openSourceCommunity",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_productManagers_timeToMarket",
      "source": "productManagers",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_productManagers_interoperability",
      "source": "productManagers",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_productManagers_costEffectiveOpenSource",
      "source": "productManagers",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_productManagers_rapidPrototyping",
      "source": "productManagers",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_productManagers_fastVerification",
      "source": "productManagers",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_edaVendors_interoperability",
      "source": "edaVendors",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_edaVendors_collaborationReuse",
      "source": "edaVendors",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_systemArchitects_rapidPrototyping",
      "source": "systemArchitects",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_systemArchitects_visualCodeWorkflow",
      "source": "systemArchitects",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_systemArchitects_interoperability",
      "source": "systemArchitects",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_systemArchitects_timeToMarket",
      "source": "systemArchitects",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_hobbyistsMakers_costEffectiveOpenSource",
      "source": "hobbyistsMakers",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_hobbyistsMakers_educationTraining",
      "source": "hobbyistsMakers",
      "target": "educationTraining",
      "selected": false
    },
    {
      "id": "e_hobbyistsMakers_visualCodeWorkflow",
      "source": "hobbyistsMakers",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_hobbyistsMakers_rapidPrototyping",
      "source": "hobbyistsMakers",
      "target": "rapidPrototyping",
      "selected": false
    },
    {
      "id": "e_itAdministrators_costEffectiveOpenSource",
      "source": "itAdministrators",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_itAdministrators_interoperability",
      "source": "itAdministrators",
      "target": "interoperability",
      "selected": false
    },
    {
      "id": "e_qualityAssurance_fastVerification",
      "source": "qualityAssurance",
      "target": "fastVerification",
      "selected": false
    },
    {
      "id": "e_qualityAssurance_collaborationReuse",
      "source": "qualityAssurance",
      "target": "collaborationReuse",
      "selected": false
    },
    {
      "id": "e_qualityAssurance_timeToMarket",
      "source": "qualityAssurance",
      "target": "timeToMarket",
      "selected": false
    },
    {
      "id": "e_educatorsInstructors_educationTraining",
      "source": "educatorsInstructors",
      "target": "educationTraining",
      "selected": false
    },
    {
      "id": "e_educatorsInstructors_costEffectiveOpenSource",
      "source": "educatorsInstructors",
      "target": "costEffectiveOpenSource",
      "selected": false
    },
    {
      "id": "e_educatorsInstructors_visualCodeWorkflow",
      "source": "educatorsInstructors",
      "target": "visualCodeWorkflow",
      "selected": false
    },
    {
      "id": "e_rapidPrototyping_visualBlockEditor",
      "source": "rapidPrototyping",
      "target": "visualBlockEditor",
      "selected": false
    },
    {
      "id": "e_rapidPrototyping_codeSnippetNodes",
      "source": "rapidPrototyping",
      "target": "codeSnippetNodes",
      "selected": false
    },
    {
      "id": "e_rapidPrototyping_prototypeTemplates",
      "source": "rapidPrototyping",
      "target": "prototypeTemplates",
      "selected": false
    },
    {
      "id": "e_visualCodeWorkflow_visualBlockEditor",
      "source": "visualCodeWorkflow",
      "target": "visualBlockEditor",
      "selected": false
    },
    {
      "id": "e_visualCodeWorkflow_codeSnippetNodes",
      "source": "visualCodeWorkflow",
      "target": "codeSnippetNodes",
      "selected": false
    },
    {
      "id": "e_fastVerification_integratedCocotbVerilatorSim",
      "source": "fastVerification",
      "target": "integratedCocotbVerilatorSim",
      "selected": false
    },
    {
      "id": "e_costEffectiveOpenSource_openSourcePluginArch",
      "source": "costEffectiveOpenSource",
      "target": "openSourcePluginArch",
      "selected": false
    },
    {
      "id": "e_educationTraining_interactiveTutorialMode",
      "source": "educationTraining",
      "target": "interactiveTutorialMode",
      "selected": false
    },
    {
      "id": "e_educationTraining_prototypeTemplates",
      "source": "educationTraining",
      "target": "prototypeTemplates",
      "selected": false
    },
    {
      "id": "e_interoperability_multiToolchainExport",
      "source": "interoperability",
      "target": "multiToolchainExport",
      "selected": false
    },
    {
      "id": "e_collaborationReuse_collaborativeDesignSharing",
      "source": "collaborationReuse",
      "target": "collaborativeDesignSharing",
      "selected": false
    },
    {
      "id": "e_collaborationReuse_openSourcePluginArch",
      "source": "collaborationReuse",
      "target": "openSourcePluginArch",
      "selected": false
    },
    {
      "id": "e_timeToMarket_prototypeTemplates",
      "source": "timeToMarket",
      "target": "prototypeTemplates",
      "selected": false
    },
    {
      "id": "e_timeToMarket_multiToolchainExport",
      "source": "timeToMarket",
      "target": "multiToolchainExport",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateLibrary50Blocks",
      "source": "prototypeTemplates",
      "target": "templateLibrary50Blocks",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateDualRepresentationSync",
      "source": "prototypeTemplates",
      "target": "templateDualRepresentationSync",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateHighCoverageTests",
      "source": "prototypeTemplates",
      "target": "templateHighCoverageTests",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateSemanticVersioning",
      "source": "prototypeTemplates",
      "target": "templateSemanticVersioning",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateSearchFilterSub100ms",
      "source": "prototypeTemplates",
      "target": "templateSearchFilterSub100ms",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateUserCloneSave",
      "source": "prototypeTemplates",
      "target": "templateUserCloneSave",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateAutoDocumentation",
      "source": "prototypeTemplates",
      "target": "templateAutoDocumentation",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateFpgaSynthesisPass",
      "source": "prototypeTemplates",
      "target": "templateFpgaSynthesisPass",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_dragDropSnapGrid",
      "source": "visualBlockEditor",
      "target": "dragDropSnapGrid",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_searchableBlockLibrary",
      "source": "visualBlockEditor",
      "target": "searchableBlockLibrary",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_codeSnippetNodeSupport",
      "source": "visualBlockEditor",
      "target": "codeSnippetNodeSupport",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_realTimeConnectionValidation",
      "source": "visualBlockEditor",
      "target": "realTimeConnectionValidation",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_gitVersionControlExport",
      "source": "visualBlockEditor",
      "target": "gitVersionControlExport",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_verilogNetlistExport",
      "source": "visualBlockEditor",
      "target": "verilogNetlistExport",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_undoRedoHistory",
      "source": "visualBlockEditor",
      "target": "undoRedoHistory",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_performanceZoomPan1000Nodes",
      "source": "visualBlockEditor",
      "target": "performanceZoomPan1000Nodes",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_codeSnippetLanguageSupport",
      "source": "codeSnippetNodes",
      "target": "codeSnippetLanguageSupport",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_codeEditorSyntaxHighlighting",
      "source": "codeSnippetNodes",
      "target": "codeEditorSyntaxHighlighting",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_realtimeLinting",
      "source": "codeSnippetNodes",
      "target": "realtimeLinting",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_automaticPortInference",
      "source": "codeSnippetNodes",
      "target": "automaticPortInference",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_simulationIntegration",
      "source": "codeSnippetNodes",
      "target": "simulationIntegration",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_snippetVersioning",
      "source": "codeSnippetNodes",
      "target": "snippetVersioning",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_reusableSnippetLibrary",
      "source": "codeSnippetNodes",
      "target": "reusableSnippetLibrary",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_cocotbIntegrationSupport",
      "source": "integratedCocotbVerilatorSim",
      "target": "cocotbIntegrationSupport",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_verilatorSVCompileCoverage",
      "source": "integratedCocotbVerilatorSim",
      "target": "verilatorSVCompileCoverage",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_simulationPerf10kGate1kCps",
      "source": "integratedCocotbVerilatorSim",
      "target": "simulationPerf10kGate1kCps",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_waveformExportVcdFsdb",
      "source": "integratedCocotbVerilatorSim",
      "target": "waveformExportVcdFsdb",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_uiInteractiveDebugging",
      "source": "integratedCocotbVerilatorSim",
      "target": "uiInteractiveDebugging",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_headlessCiCli",
      "source": "integratedCocotbVerilatorSim",
      "target": "headlessCiCli",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_verilogLintExport",
      "source": "multiToolchainExport",
      "target": "verilogLintExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_vhdlExportCompliance",
      "source": "multiToolchainExport",
      "target": "vhdlExportCompliance",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_ipxactGeneration",
      "source": "multiToolchainExport",
      "target": "ipxactGeneration",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_vivadoProjectExport",
      "source": "multiToolchainExport",
      "target": "vivadoProjectExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_quartusProjectExport",
      "source": "multiToolchainExport",
      "target": "quartusProjectExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_synopsysDCScriptExport",
      "source": "multiToolchainExport",
      "target": "synopsysDCScriptExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_cocotbTestbenchExport",
      "source": "multiToolchainExport",
      "target": "cocotbTestbenchExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_makefileExport",
      "source": "multiToolchainExport",
      "target": "makefileExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_dockerCIExport",
      "source": "multiToolchainExport",
      "target": "dockerCIExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_rtlCoverageReportExport",
      "source": "multiToolchainExport",
      "target": "rtlCoverageReportExport",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginApiVersioning",
      "source": "openSourcePluginArch",
      "target": "pluginApiVersioning",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_sandboxedPluginExecution",
      "source": "openSourcePluginArch",
      "target": "sandboxedPluginExecution",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_runtimePluginLoading",
      "source": "openSourcePluginArch",
      "target": "runtimePluginLoading",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginSdkDocumentation",
      "source": "openSourcePluginArch",
      "target": "pluginSdkDocumentation",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginMarketplaceUI",
      "source": "openSourcePluginArch",
      "target": "pluginMarketplaceUI",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginCompatibilityCITesting",
      "source": "openSourcePluginArch",
      "target": "pluginCompatibilityCITesting",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_licensingComplianceChecker",
      "source": "openSourcePluginArch",
      "target": "licensingComplianceChecker",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_versionControlledRepository",
      "source": "collaborativeDesignSharing",
      "target": "versionControlledRepository",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_granularAccessPermissions",
      "source": "collaborativeDesignSharing",
      "target": "granularAccessPermissions",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_searchableIpLibrary",
      "source": "collaborativeDesignSharing",
      "target": "searchableIpLibrary",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_publishIpBlocks",
      "source": "collaborativeDesignSharing",
      "target": "publishIpBlocks",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_realTimeCommenting",
      "source": "collaborativeDesignSharing",
      "target": "realTimeCommenting",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_visualMergeConflictResolution",
      "source": "collaborativeDesignSharing",
      "target": "visualMergeConflictResolution",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_ipAttributionReport",
      "source": "collaborativeDesignSharing",
      "target": "ipAttributionReport",
      "selected": false
    },
    {
      "id": "e_collaborativeDesignSharing_pinnedIpVersionSimulation",
      "source": "collaborativeDesignSharing",
      "target": "pinnedIpVersionSimulation",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_guidedWalkthroughHighlight",
      "source": "interactiveTutorialMode",
      "target": "guidedWalkthroughHighlight",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_builtInTutorialLibrary",
      "source": "interactiveTutorialMode",
      "target": "builtInTutorialLibrary",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_persistentProgressTracking",
      "source": "interactiveTutorialMode",
      "target": "persistentProgressTracking",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_autoSimulationFeedback",
      "source": "interactiveTutorialMode",
      "target": "autoSimulationFeedback",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_inlineCodeChallengeValidation",
      "source": "interactiveTutorialMode",
      "target": "inlineCodeChallengeValidation",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_contextSensitiveHintSystem",
      "source": "interactiveTutorialMode",
      "target": "contextSensitiveHintSystem",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_tutorialWorkspaceResetUndo",
      "source": "interactiveTutorialMode",
      "target": "tutorialWorkspaceResetUndo",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_dragDropSnapGrid",
      "source": "roadmapMVPQ12025",
      "target": "dragDropSnapGrid",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_undoRedoHistory",
      "source": "roadmapMVPQ12025",
      "target": "undoRedoHistory",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_codeSnippetNodeSupport",
      "source": "roadmapMVPQ12025",
      "target": "codeSnippetNodeSupport",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_codeSnippetLanguageSupport",
      "source": "roadmapMVPQ12025",
      "target": "codeSnippetLanguageSupport",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_codeEditorSyntaxHighlighting",
      "source": "roadmapMVPQ12025",
      "target": "codeEditorSyntaxHighlighting",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_realtimeLinting",
      "source": "roadmapMVPQ12025",
      "target": "realtimeLinting",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_automaticPortInference",
      "source": "roadmapMVPQ12025",
      "target": "automaticPortInference",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_simulationIntegration",
      "source": "roadmapMVPQ12025",
      "target": "simulationIntegration",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_realTimeConnectionValidation",
      "source": "roadmapMVPQ12025",
      "target": "realTimeConnectionValidation",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_searchableBlockLibrary",
      "source": "roadmapMVPQ12025",
      "target": "searchableBlockLibrary",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_templateLibrary50Blocks",
      "source": "roadmapMVPQ12025",
      "target": "templateLibrary50Blocks",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_templateDualRepresentationSync",
      "source": "roadmapMVPQ12025",
      "target": "templateDualRepresentationSync",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_performanceZoomPan1000Nodes",
      "source": "roadmapPerformanceQ22025",
      "target": "performanceZoomPan1000Nodes",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_templateSearchFilterSub100ms",
      "source": "roadmapPerformanceQ22025",
      "target": "templateSearchFilterSub100ms",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_simulationPerf10kGate1kCps",
      "source": "roadmapPerformanceQ22025",
      "target": "simulationPerf10kGate1kCps",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_waveformExportVcdFsdb",
      "source": "roadmapPerformanceQ22025",
      "target": "waveformExportVcdFsdb",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_templateHighCoverageTests",
      "source": "roadmapPerformanceQ22025",
      "target": "templateHighCoverageTests",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_verilogNetlistExport",
      "source": "roadmapExportToolingQ32025",
      "target": "verilogNetlistExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_verilogLintExport",
      "source": "roadmapExportToolingQ32025",
      "target": "verilogLintExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_vhdlExportCompliance",
      "source": "roadmapExportToolingQ32025",
      "target": "vhdlExportCompliance",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_ipxactGeneration",
      "source": "roadmapExportToolingQ32025",
      "target": "ipxactGeneration",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_vivadoProjectExport",
      "source": "roadmapExportToolingQ32025",
      "target": "vivadoProjectExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_quartusProjectExport",
      "source": "roadmapExportToolingQ32025",
      "target": "quartusProjectExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_synopsysDCScriptExport",
      "source": "roadmapExportToolingQ32025",
      "target": "synopsysDCScriptExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_cocotbTestbenchExport",
      "source": "roadmapExportToolingQ32025",
      "target": "cocotbTestbenchExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_makefileExport",
      "source": "roadmapExportToolingQ32025",
      "target": "makefileExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_dockerCIExport",
      "source": "roadmapExportToolingQ32025",
      "target": "dockerCIExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_rtlCoverageReportExport",
      "source": "roadmapExportToolingQ32025",
      "target": "rtlCoverageReportExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_templateFpgaSynthesisPass",
      "source": "roadmapExportToolingQ32025",
      "target": "templateFpgaSynthesisPass",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginApiVersioning",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginApiVersioning",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_sandboxedPluginExecution",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "sandboxedPluginExecution",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_runtimePluginLoading",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "runtimePluginLoading",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginSdkDocumentation",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginSdkDocumentation",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginMarketplaceUI",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginMarketplaceUI",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginCompatibilityCITesting",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginCompatibilityCITesting",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_licensingComplianceChecker",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "licensingComplianceChecker",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_versionControlledRepository",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "versionControlledRepository",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_granularAccessPermissions",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "granularAccessPermissions",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_searchableIpLibrary",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "searchableIpLibrary",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_publishIpBlocks",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "publishIpBlocks",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_realTimeCommenting",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "realTimeCommenting",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_visualMergeConflictResolution",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "visualMergeConflictResolution",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_ipAttributionReport",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "ipAttributionReport",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_pinnedIpVersionSimulation",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "pinnedIpVersionSimulation",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_builtInTutorialLibrary",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "builtInTutorialLibrary",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_guidedWalkthroughHighlight",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "guidedWalkthroughHighlight",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_persistentProgressTracking",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "persistentProgressTracking",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_autoSimulationFeedback",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "autoSimulationFeedback",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_inlineCodeChallengeValidation",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "inlineCodeChallengeValidation",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_contextSensitiveHintSystem",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "contextSensitiveHintSystem",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_tutorialWorkspaceResetUndo",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "tutorialWorkspaceResetUndo",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_templateUserCloneSave",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "templateUserCloneSave",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_templateAutoDocumentation",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "templateAutoDocumentation",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_templateSemanticVersioning",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "templateSemanticVersioning",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_gitVersionControlExport",
      "source": "roadmap_1VkqwcOIu3",
      "target": "gitVersionControlExport",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_snippetVersioning",
      "source": "roadmap_1VkqwcOIu3",
      "target": "snippetVersioning",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_reusableSnippetLibrary",
      "source": "roadmap_1VkqwcOIu3",
      "target": "reusableSnippetLibrary",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_cocotbIntegrationSupport",
      "source": "roadmap_1VkqwcOIu3",
      "target": "cocotbIntegrationSupport",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_verilatorSVCompileCoverage",
      "source": "roadmap_1VkqwcOIu3",
      "target": "verilatorSVCompileCoverage",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_uiInteractiveDebugging",
      "source": "roadmap_1VkqwcOIu3",
      "target": "uiInteractiveDebugging",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_headlessCiCli",
      "source": "roadmap_1VkqwcOIu3",
      "target": "headlessCiCli",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_multiSelectGroupingAlignment",
      "source": "visualBlockEditor",
      "target": "multiSelectGroupingAlignment",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_hierarchicalSubdiagramSupport",
      "source": "visualBlockEditor",
      "target": "hierarchicalSubdiagramSupport",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_parameterInspectorPanel",
      "source": "visualBlockEditor",
      "target": "parameterInspectorPanel",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_autoRoutingConnections",
      "source": "visualBlockEditor",
      "target": "autoRoutingConnections",
      "selected": false
    },
    {
      "id": "e_visualBlockEditor_autosaveRecovery",
      "source": "visualBlockEditor",
      "target": "autosaveRecovery",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateParamConfigGUI",
      "source": "prototypeTemplates",
      "target": "templateParamConfigGUI",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateLicenseMetadataSPDX",
      "source": "prototypeTemplates",
      "target": "templateLicenseMetadataSPDX",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateCiSimPipeline",
      "source": "prototypeTemplates",
      "target": "templateCiSimPipeline",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templatePortDocCoverage",
      "source": "prototypeTemplates",
      "target": "templatePortDocCoverage",
      "selected": false
    },
    {
      "id": "e_prototypeTemplates_templateSourceSinkBlocks20",
      "source": "prototypeTemplates",
      "target": "templateSourceSinkBlocks20",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_contextAwareAutocomplete",
      "source": "codeSnippetNodes",
      "target": "contextAwareAutocomplete",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_executionSandboxing",
      "source": "codeSnippetNodes",
      "target": "executionSandboxing",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_hoverDocumentation",
      "source": "codeSnippetNodes",
      "target": "hoverDocumentation",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_waveformProbeIntegration",
      "source": "codeSnippetNodes",
      "target": "waveformProbeIntegration",
      "selected": false
    },
    {
      "id": "e_codeSnippetNodes_parameterizedSnippets",
      "source": "codeSnippetNodes",
      "target": "parameterizedSnippets",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_systemVerilogExportCompliance",
      "source": "multiToolchainExport",
      "target": "systemVerilogExportCompliance",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_xdcConstraintExport",
      "source": "multiToolchainExport",
      "target": "xdcConstraintExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_sdcTimingExport",
      "source": "multiToolchainExport",
      "target": "sdcTimingExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_cHeaderRegisterExport",
      "source": "multiToolchainExport",
      "target": "cHeaderRegisterExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_githubActionCIWorkflowExport",
      "source": "multiToolchainExport",
      "target": "githubActionCIWorkflowExport",
      "selected": false
    },
    {
      "id": "e_multiToolchainExport_uvmTbSkeletonExport",
      "source": "multiToolchainExport",
      "target": "uvmTbSkeletonExport",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginManifestSchema",
      "source": "openSourcePluginArch",
      "target": "pluginManifestSchema",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginDeterministicBuilds",
      "source": "openSourcePluginArch",
      "target": "pluginDeterministicBuilds",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginPerformanceIsolation",
      "source": "openSourcePluginArch",
      "target": "pluginPerformanceIsolation",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginInternationalizationSupport",
      "source": "openSourcePluginArch",
      "target": "pluginInternationalizationSupport",
      "selected": false
    },
    {
      "id": "e_openSourcePluginArch_pluginSBOMGeneration",
      "source": "openSourcePluginArch",
      "target": "pluginSBOMGeneration",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_mixedLangVhdlSupport",
      "source": "integratedCocotbVerilatorSim",
      "target": "mixedLangVhdlSupport",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_multithreadedSimScaling50kGate",
      "source": "integratedCocotbVerilatorSim",
      "target": "multithreadedSimScaling50kGate",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_batchRegression500Tests",
      "source": "integratedCocotbVerilatorSim",
      "target": "batchRegression500Tests",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_deterministicSeedRepro",
      "source": "integratedCocotbVerilatorSim",
      "target": "deterministicSeedRepro",
      "selected": false
    },
    {
      "id": "e_integratedCocotbVerilatorSim_dpiCModelCosimSupport",
      "source": "integratedCocotbVerilatorSim",
      "target": "dpiCModelCosimSupport",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_adaptiveDifficultyBranching",
      "source": "interactiveTutorialMode",
      "target": "adaptiveDifficultyBranching",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_tutorialLocalizationMultiLanguage",
      "source": "interactiveTutorialMode",
      "target": "tutorialLocalizationMultiLanguage",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_keyboardAccessibleTutorialControls",
      "source": "interactiveTutorialMode",
      "target": "keyboardAccessibleTutorialControls",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_tutorialCompletionCertificatePDF",
      "source": "interactiveTutorialMode",
      "target": "tutorialCompletionCertificatePDF",
      "selected": false
    },
    {
      "id": "e_interactiveTutorialMode_tutorialAutosaveAndRestore",
      "source": "interactiveTutorialMode",
      "target": "tutorialAutosaveAndRestore",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_templateParamConfigGUI",
      "source": "roadmapMVPQ12025",
      "target": "templateParamConfigGUI",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_templatePortDocCoverage",
      "source": "roadmapExportToolingQ32025",
      "target": "templatePortDocCoverage",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_templateSourceSinkBlocks20",
      "source": "roadmapMVPQ12025",
      "target": "templateSourceSinkBlocks20",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_templateCiSimPipeline",
      "source": "roadmapExportToolingQ32025",
      "target": "templateCiSimPipeline",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_cHeaderRegisterExport",
      "source": "roadmapExportToolingQ32025",
      "target": "cHeaderRegisterExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_systemVerilogExportCompliance",
      "source": "roadmapExportToolingQ32025",
      "target": "systemVerilogExportCompliance",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_uvmTbSkeletonExport",
      "source": "roadmapExportToolingQ32025",
      "target": "uvmTbSkeletonExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_xdcConstraintExport",
      "source": "roadmapExportToolingQ32025",
      "target": "xdcConstraintExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_githubActionCIWorkflowExport",
      "source": "roadmapExportToolingQ32025",
      "target": "githubActionCIWorkflowExport",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_sdcTimingExport",
      "source": "roadmapExportToolingQ32025",
      "target": "sdcTimingExport",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_autoRoutingConnections",
      "source": "roadmapPerformanceQ22025",
      "target": "autoRoutingConnections",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_autosaveRecovery",
      "source": "roadmapMVPQ12025",
      "target": "autosaveRecovery",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_multiSelectGroupingAlignment",
      "source": "roadmapMVPQ12025",
      "target": "multiSelectGroupingAlignment",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_hierarchicalSubdiagramSupport",
      "source": "roadmapMVPQ12025",
      "target": "hierarchicalSubdiagramSupport",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_parameterInspectorPanel",
      "source": "roadmapMVPQ12025",
      "target": "parameterInspectorPanel",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_parameterizedSnippets",
      "source": "roadmapMVPQ12025",
      "target": "parameterizedSnippets",
      "selected": false
    },
    {
      "id": "e_roadmapPerformanceQ22025_hoverDocumentation",
      "source": "roadmapPerformanceQ22025",
      "target": "hoverDocumentation",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_waveformProbeIntegration",
      "source": "roadmapMVPQ12025",
      "target": "waveformProbeIntegration",
      "selected": false
    },
    {
      "id": "e_roadmapMVPQ12025_executionSandboxing",
      "source": "roadmapMVPQ12025",
      "target": "executionSandboxing",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_contextAwareAutocomplete",
      "source": "roadmap_1VkqwcOIu3",
      "target": "contextAwareAutocomplete",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginInternationalizationSupport",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginInternationalizationSupport",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginManifestSchema",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginManifestSchema",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginPerformanceIsolation",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginPerformanceIsolation",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginDeterministicBuilds",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginDeterministicBuilds",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_pluginSBOMGeneration",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "pluginSBOMGeneration",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_multithreadedSimScaling50kGate",
      "source": "roadmap_1VkqwcOIu3",
      "target": "multithreadedSimScaling50kGate",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_deterministicSeedRepro",
      "source": "roadmapExportToolingQ32025",
      "target": "deterministicSeedRepro",
      "selected": false
    },
    {
      "id": "e_roadmapPluginsMarketplaceQ42025_batchRegression500Tests",
      "source": "roadmapPluginsMarketplaceQ42025",
      "target": "batchRegression500Tests",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_dpiCModelCosimSupport",
      "source": "roadmapExportToolingQ32025",
      "target": "dpiCModelCosimSupport",
      "selected": false
    },
    {
      "id": "e_roadmap_1VkqwcOIu3_mixedLangVhdlSupport",
      "source": "roadmap_1VkqwcOIu3",
      "target": "mixedLangVhdlSupport",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_adaptiveDifficultyBranching",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "adaptiveDifficultyBranching",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_tutorialAutosaveAndRestore",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "tutorialAutosaveAndRestore",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_keyboardAccessibleTutorialControls",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "keyboardAccessibleTutorialControls",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_tutorialCompletionCertificatePDF",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "tutorialCompletionCertificatePDF",
      "selected": false
    },
    {
      "id": "e_roadmapCollaborationTutorialsQ12026_tutorialLocalizationMultiLanguage",
      "source": "roadmapCollaborationTutorialsQ12026",
      "target": "tutorialLocalizationMultiLanguage",
      "selected": false
    },
    {
      "id": "e_roadmapExportToolingQ32025_templateLicenseMetadataSPDX",
      "source": "roadmapExportToolingQ32025",
      "target": "templateLicenseMetadataSPDX",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_planBlockLibrary",
      "source": "templateLibrary50Blocks",
      "target": "planBlockLibrary",
      "selected": false
    },
    {
      "id": "e_planBlockLibrary_researchCommonBlocks",
      "source": "planBlockLibrary",
      "target": "researchCommonBlocks",
      "selected": false
    },
    {
      "id": "e_planBlockLibrary_prioritizeBlockList",
      "source": "planBlockLibrary",
      "target": "prioritizeBlockList",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_designBlockInterfaces",
      "source": "templateLibrary50Blocks",
      "target": "designBlockInterfaces",
      "selected": false
    },
    {
      "id": "e_designBlockInterfaces_defineIOPorts",
      "source": "designBlockInterfaces",
      "target": "defineIOPorts",
      "selected": false
    },
    {
      "id": "e_designBlockInterfaces_defineParamSchema",
      "source": "designBlockInterfaces",
      "target": "defineParamSchema",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_implementHardwareBlocks",
      "source": "templateLibrary50Blocks",
      "target": "implementHardwareBlocks",
      "selected": false
    },
    {
      "id": "e_implementHardwareBlocks_codeVerilogBlocks",
      "source": "implementHardwareBlocks",
      "target": "codeVerilogBlocks",
      "selected": false
    },
    {
      "id": "e_implementHardwareBlocks_codePythonModels",
      "source": "implementHardwareBlocks",
      "target": "codePythonModels",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_createEditorNodeDefinitions",
      "source": "templateLibrary50Blocks",
      "target": "createEditorNodeDefinitions",
      "selected": false
    },
    {
      "id": "e_createEditorNodeDefinitions_createNodeIcons",
      "source": "createEditorNodeDefinitions",
      "target": "createNodeIcons",
      "selected": false
    },
    {
      "id": "e_createEditorNodeDefinitions_mapPortsToNode",
      "source": "createEditorNodeDefinitions",
      "target": "mapPortsToNode",
      "selected": false
    },
    {
      "id": "e_createEditorNodeDefinitions_buildConfigUI",
      "source": "createEditorNodeDefinitions",
      "target": "buildConfigUI",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_integrateSimulationFramework",
      "source": "templateLibrary50Blocks",
      "target": "integrateSimulationFramework",
      "selected": false
    },
    {
      "id": "e_integrateSimulationFramework_writeCocotbTestbenches",
      "source": "integrateSimulationFramework",
      "target": "writeCocotbTestbenches",
      "selected": false
    },
    {
      "id": "e_integrateSimulationFramework_ensureVerilatorCompatibility",
      "source": "integrateSimulationFramework",
      "target": "ensureVerilatorCompatibility",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_validateAndTestBlocks",
      "source": "templateLibrary50Blocks",
      "target": "validateAndTestBlocks",
      "selected": false
    },
    {
      "id": "e_validateAndTestBlocks_unitTestBlocks",
      "source": "validateAndTestBlocks",
      "target": "unitTestBlocks",
      "selected": false
    },
    {
      "id": "e_validateAndTestBlocks_performanceBenchmarking",
      "source": "validateAndTestBlocks",
      "target": "performanceBenchmarking",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_documentBlocks",
      "source": "templateLibrary50Blocks",
      "target": "documentBlocks",
      "selected": false
    },
    {
      "id": "e_documentBlocks_writeUsageExamples",
      "source": "documentBlocks",
      "target": "writeUsageExamples",
      "selected": false
    },
    {
      "id": "e_documentBlocks_generateAPIDocumentation",
      "source": "documentBlocks",
      "target": "generateAPIDocumentation",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_packageAndReleaseLibrary",
      "source": "templateLibrary50Blocks",
      "target": "packageAndReleaseLibrary",
      "selected": false
    },
    {
      "id": "e_packageAndReleaseLibrary_bundleInstallableModule",
      "source": "packageAndReleaseLibrary",
      "target": "bundleInstallableModule",
      "selected": false
    },
    {
      "id": "e_packageAndReleaseLibrary_versionAndPublish",
      "source": "packageAndReleaseLibrary",
      "target": "versionAndPublish",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_setupCICDPipeline",
      "source": "templateLibrary50Blocks",
      "target": "setupCICDPipeline",
      "selected": false
    },
    {
      "id": "e_setupCICDPipeline_configureAutoBuild",
      "source": "setupCICDPipeline",
      "target": "configureAutoBuild",
      "selected": false
    },
    {
      "id": "e_setupCICDPipeline_configureAutoTest",
      "source": "setupCICDPipeline",
      "target": "configureAutoTest",
      "selected": false
    },
    {
      "id": "e_templateLibrary50Blocks_collectUserFeedback",
      "source": "templateLibrary50Blocks",
      "target": "collectUserFeedback",
      "selected": false
    },
    {
      "id": "e_collectUserFeedback_gatherBetaFeedback",
      "source": "collectUserFeedback",
      "target": "gatherBetaFeedback",
      "selected": false
    },
    {
      "id": "e_collectUserFeedback_iterateImprovements",
      "source": "collectUserFeedback",
      "target": "iterateImprovements",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskDefineSyncArchitecture",
      "source": "templateDualRepresentationSync",
      "target": "taskDefineSyncArchitecture",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskVisualToIR",
      "source": "templateDualRepresentationSync",
      "target": "taskVisualToIR",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskIRToCodeGenerator",
      "source": "templateDualRepresentationSync",
      "target": "taskIRToCodeGenerator",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskCodeToIR",
      "source": "templateDualRepresentationSync",
      "target": "taskCodeToIR",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskIRToVisual",
      "source": "templateDualRepresentationSync",
      "target": "taskIRToVisual",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskRealtimeSync",
      "source": "templateDualRepresentationSync",
      "target": "taskRealtimeSync",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskStatusUI",
      "source": "templateDualRepresentationSync",
      "target": "taskStatusUI",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskPerformanceOpt",
      "source": "templateDualRepresentationSync",
      "target": "taskPerformanceOpt",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskAutomatedTesting",
      "source": "templateDualRepresentationSync",
      "target": "taskAutomatedTesting",
      "selected": false
    },
    {
      "id": "e_templateDualRepresentationSync_taskDocumentation",
      "source": "templateDualRepresentationSync",
      "target": "taskDocumentation",
      "selected": false
    },
    {
      "id": "e_taskDefineSyncArchitecture_taskDefineIR",
      "source": "taskDefineSyncArchitecture",
      "target": "taskDefineIR",
      "selected": false
    },
    {
      "id": "e_taskDefineSyncArchitecture_taskMappingIRBlocks",
      "source": "taskDefineSyncArchitecture",
      "target": "taskMappingIRBlocks",
      "selected": false
    },
    {
      "id": "e_taskDefineSyncArchitecture_taskDefineCodeGenRules",
      "source": "taskDefineSyncArchitecture",
      "target": "taskDefineCodeGenRules",
      "selected": false
    },
    {
      "id": "e_taskVisualToIR_taskCaptureBlockEvents",
      "source": "taskVisualToIR",
      "target": "taskCaptureBlockEvents",
      "selected": false
    },
    {
      "id": "e_taskVisualToIR_taskTransformBlockToIR",
      "source": "taskVisualToIR",
      "target": "taskTransformBlockToIR",
      "selected": false
    },
    {
      "id": "e_taskVisualToIR_taskEmitCodeUpdate",
      "source": "taskVisualToIR",
      "target": "taskEmitCodeUpdate",
      "selected": false
    },
    {
      "id": "e_taskIRToCodeGenerator_taskGenerateVerilog",
      "source": "taskIRToCodeGenerator",
      "target": "taskGenerateVerilog",
      "selected": false
    },
    {
      "id": "e_taskIRToCodeGenerator_taskGeneratePython",
      "source": "taskIRToCodeGenerator",
      "target": "taskGeneratePython",
      "selected": false
    },
    {
      "id": "e_taskIRToCodeGenerator_taskFormatCodeSnippets",
      "source": "taskIRToCodeGenerator",
      "target": "taskFormatCodeSnippets",
      "selected": false
    },
    {
      "id": "e_taskCodeToIR_taskVerilogParserIR",
      "source": "taskCodeToIR",
      "target": "taskVerilogParserIR",
      "selected": false
    },
    {
      "id": "e_taskCodeToIR_taskPythonParserIR",
      "source": "taskCodeToIR",
      "target": "taskPythonParserIR",
      "selected": false
    },
    {
      "id": "e_taskCodeToIR_taskHandleSyntaxErrors",
      "source": "taskCodeToIR",
      "target": "taskHandleSyntaxErrors",
      "selected": false
    },
    {
      "id": "e_taskIRToVisual_taskComputeGraphDiff",
      "source": "taskIRToVisual",
      "target": "taskComputeGraphDiff",
      "selected": false
    },
    {
      "id": "e_taskIRToVisual_taskUpdateVisualBlocks",
      "source": "taskIRToVisual",
      "target": "taskUpdateVisualBlocks",
      "selected": false
    },
    {
      "id": "e_taskRealtimeSync_taskDebounceUpdate",
      "source": "taskRealtimeSync",
      "target": "taskDebounceUpdate",
      "selected": false
    },
    {
      "id": "e_taskRealtimeSync_taskConflictResolution",
      "source": "taskRealtimeSync",
      "target": "taskConflictResolution",
      "selected": false
    },
    {
      "id": "e_taskStatusUI_taskDisplaySyncStatus",
      "source": "taskStatusUI",
      "target": "taskDisplaySyncStatus",
      "selected": false
    },
    {
      "id": "e_taskPerformanceOpt_taskBenchmarkLargeDesigns",
      "source": "taskPerformanceOpt",
      "target": "taskBenchmarkLargeDesigns",
      "selected": false
    },
    {
      "id": "e_taskPerformanceOpt_taskOptimizeAlgorithms",
      "source": "taskPerformanceOpt",
      "target": "taskOptimizeAlgorithms",
      "selected": false
    },
    {
      "id": "e_taskAutomatedTesting_taskUnitTestsConverters",
      "source": "taskAutomatedTesting",
      "target": "taskUnitTestsConverters",
      "selected": false
    },
    {
      "id": "e_taskAutomatedTesting_taskIntegrationTests",
      "source": "taskAutomatedTesting",
      "target": "taskIntegrationTests",
      "selected": false
    },
    {
      "id": "e_taskDocumentation_taskWriteUserGuide",
      "source": "taskDocumentation",
      "target": "taskWriteUserGuide",
      "selected": false
    },
    {
      "id": "e_taskDocumentation_taskCreateSampleTemplates",
      "source": "taskDocumentation",
      "target": "taskCreateSampleTemplates",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_paramTemplatesPreparation",
      "source": "templateParamConfigGUI",
      "target": "paramTemplatesPreparation",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_parameterUIImplementation",
      "source": "templateParamConfigGUI",
      "target": "parameterUIImplementation",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_regenerationEngineImplementation",
      "source": "templateParamConfigGUI",
      "target": "regenerationEngineImplementation",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_blockUpdateRendering",
      "source": "templateParamConfigGUI",
      "target": "blockUpdateRendering",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_performanceAssurance",
      "source": "templateParamConfigGUI",
      "target": "performanceAssurance",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_automatedTestingQA",
      "source": "templateParamConfigGUI",
      "target": "automatedTestingQA",
      "selected": false
    },
    {
      "id": "e_templateParamConfigGUI_documentationExamples",
      "source": "templateParamConfigGUI",
      "target": "documentationExamples",
      "selected": false
    },
    {
      "id": "e_paramTemplatesPreparation_paramSchemaDefinition",
      "source": "paramTemplatesPreparation",
      "target": "paramSchemaDefinition",
      "selected": false
    },
    {
      "id": "e_paramTemplatesPreparation_templatePlaceholderInsertion",
      "source": "paramTemplatesPreparation",
      "target": "templatePlaceholderInsertion",
      "selected": false
    },
    {
      "id": "e_paramTemplatesPreparation_parameterValidationRules",
      "source": "paramTemplatesPreparation",
      "target": "parameterValidationRules",
      "selected": false
    },
    {
      "id": "e_parameterUIImplementation_dynamicFormGenerator",
      "source": "parameterUIImplementation",
      "target": "dynamicFormGenerator",
      "selected": false
    },
    {
      "id": "e_parameterUIImplementation_uiValidationFeedback",
      "source": "parameterUIImplementation",
      "target": "uiValidationFeedback",
      "selected": false
    },
    {
      "id": "e_parameterUIImplementation_stateBindingImplementation",
      "source": "parameterUIImplementation",
      "target": "stateBindingImplementation",
      "selected": false
    },
    {
      "id": "e_regenerationEngineImplementation_changeDetectionDebounce",
      "source": "regenerationEngineImplementation",
      "target": "changeDetectionDebounce",
      "selected": false
    },
    {
      "id": "e_regenerationEngineImplementation_generateHDL",
      "source": "regenerationEngineImplementation",
      "target": "generateHDL",
      "selected": false
    },
    {
      "id": "e_regenerationEngineImplementation_validateHDL",
      "source": "regenerationEngineImplementation",
      "target": "validateHDL",
      "selected": false
    },
    {
      "id": "e_regenerationEngineImplementation_writeHDLMemory",
      "source": "regenerationEngineImplementation",
      "target": "writeHDLMemory",
      "selected": false
    },
    {
      "id": "e_blockUpdateRendering_replaceHDLInModel",
      "source": "blockUpdateRendering",
      "target": "replaceHDLInModel",
      "selected": false
    },
    {
      "id": "e_blockUpdateRendering_updateBlockMetadata",
      "source": "blockUpdateRendering",
      "target": "updateBlockMetadata",
      "selected": false
    },
    {
      "id": "e_blockUpdateRendering_reactFlowRerender",
      "source": "blockUpdateRendering",
      "target": "reactFlowRerender",
      "selected": false
    },
    {
      "id": "e_performanceAssurance_profileLatency",
      "source": "performanceAssurance",
      "target": "profileLatency",
      "selected": false
    },
    {
      "id": "e_performanceAssurance_implementCaching",
      "source": "performanceAssurance",
      "target": "implementCaching",
      "selected": false
    },
    {
      "id": "e_performanceAssurance_parallelizeTasks",
      "source": "performanceAssurance",
      "target": "parallelizeTasks",
      "selected": false
    },
    {
      "id": "e_performanceAssurance_automatedPerfTesting",
      "source": "performanceAssurance",
      "target": "automatedPerfTesting",
      "selected": false
    },
    {
      "id": "e_automatedTestingQA_unitTests",
      "source": "automatedTestingQA",
      "target": "unitTests",
      "selected": false
    },
    {
      "id": "e_automatedTestingQA_integrationTests",
      "source": "automatedTestingQA",
      "target": "integrationTests",
      "selected": false
    },
    {
      "id": "e_automatedTestingQA_regressionPerformanceTests",
      "source": "automatedTestingQA",
      "target": "regressionPerformanceTests",
      "selected": false
    },
    {
      "id": "e_documentationExamples_updateUserDocs",
      "source": "documentationExamples",
      "target": "updateUserDocs",
      "selected": false
    },
    {
      "id": "e_documentationExamples_createExampleTemplates",
      "source": "documentationExamples",
      "target": "createExampleTemplates",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT1",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT1",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT2",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT2",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT3",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT3",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT4",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT4",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT5",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT5",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT6",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT6",
      "selected": false
    },
    {
      "id": "e_templateSourceSinkBlocks20_taskT7",
      "source": "templateSourceSinkBlocks20",
      "target": "taskT7",
      "selected": false
    },
    {
      "id": "e_taskT1_taskT1_1",
      "source": "taskT1",
      "target": "taskT1_1",
      "selected": false
    },
    {
      "id": "e_taskT1_taskT1_2",
      "source": "taskT1",
      "target": "taskT1_2",
      "selected": false
    },
    {
      "id": "e_taskT1_taskT1_3",
      "source": "taskT1",
      "target": "taskT1_3",
      "selected": false
    },
    {
      "id": "e_taskT1_taskT1_4",
      "source": "taskT1",
      "target": "taskT1_4",
      "selected": false
    },
    {
      "id": "e_taskT2_taskT2_1",
      "source": "taskT2",
      "target": "taskT2_1",
      "selected": false
    },
    {
      "id": "e_taskT2_taskT2_2",
      "source": "taskT2",
      "target": "taskT2_2",
      "selected": false
    },
    {
      "id": "e_taskT2_taskT2_3",
      "source": "taskT2",
      "target": "taskT2_3",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_1",
      "source": "taskT3",
      "target": "taskT3_1",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_2",
      "source": "taskT3",
      "target": "taskT3_2",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_3",
      "source": "taskT3",
      "target": "taskT3_3",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_4",
      "source": "taskT3",
      "target": "taskT3_4",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_5",
      "source": "taskT3",
      "target": "taskT3_5",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_6",
      "source": "taskT3",
      "target": "taskT3_6",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_7",
      "source": "taskT3",
      "target": "taskT3_7",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_8",
      "source": "taskT3",
      "target": "taskT3_8",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_9",
      "source": "taskT3",
      "target": "taskT3_9",
      "selected": false
    },
    {
      "id": "e_taskT3_taskT3_10",
      "source": "taskT3",
      "target": "taskT3_10",
      "selected": false
    },
    {
      "id": "e_taskT3_1_taskT3_1_1",
      "source": "taskT3_1",
      "target": "taskT3_1_1",
      "selected": false
    },
    {
      "id": "e_taskT3_1_taskT3_1_2",
      "source": "taskT3_1",
      "target": "taskT3_1_2",
      "selected": false
    },
    {
      "id": "e_taskT3_2_taskT3_2_1",
      "source": "taskT3_2",
      "target": "taskT3_2_1",
      "selected": false
    },
    {
      "id": "e_taskT3_2_taskT3_2_2",
      "source": "taskT3_2",
      "target": "taskT3_2_2",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_1",
      "source": "taskT4",
      "target": "taskT4_1",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_2",
      "source": "taskT4",
      "target": "taskT4_2",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_3",
      "source": "taskT4",
      "target": "taskT4_3",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_4",
      "source": "taskT4",
      "target": "taskT4_4",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_5",
      "source": "taskT4",
      "target": "taskT4_5",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_6",
      "source": "taskT4",
      "target": "taskT4_6",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_7",
      "source": "taskT4",
      "target": "taskT4_7",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_8",
      "source": "taskT4",
      "target": "taskT4_8",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_9",
      "source": "taskT4",
      "target": "taskT4_9",
      "selected": false
    },
    {
      "id": "e_taskT4_taskT4_10",
      "source": "taskT4",
      "target": "taskT4_10",
      "selected": false
    },
    {
      "id": "e_taskT4_1_taskT4_1_1",
      "source": "taskT4_1",
      "target": "taskT4_1_1",
      "selected": false
    },
    {
      "id": "e_taskT4_1_taskT4_1_2",
      "source": "taskT4_1",
      "target": "taskT4_1_2",
      "selected": false
    },
    {
      "id": "e_taskT4_2_taskT4_2_1",
      "source": "taskT4_2",
      "target": "taskT4_2_1",
      "selected": false
    },
    {
      "id": "e_taskT4_2_taskT4_2_2",
      "source": "taskT4_2",
      "target": "taskT4_2_2",
      "selected": false
    },
    {
      "id": "e_taskT5_taskT5_1",
      "source": "taskT5",
      "target": "taskT5_1",
      "selected": false
    },
    {
      "id": "e_taskT5_taskT5_2",
      "source": "taskT5",
      "target": "taskT5_2",
      "selected": false
    },
    {
      "id": "e_taskT5_taskT5_3",
      "source": "taskT5",
      "target": "taskT5_3",
      "selected": false
    },
    {
      "id": "e_taskT5_taskT5_4",
      "source": "taskT5",
      "target": "taskT5_4",
      "selected": false
    },
    {
      "id": "e_taskT6_taskT6_1",
      "source": "taskT6",
      "target": "taskT6_1",
      "selected": false
    },
    {
      "id": "e_taskT6_taskT6_2",
      "source": "taskT6",
      "target": "taskT6_2",
      "selected": false
    },
    {
      "id": "e_taskT6_taskT6_3",
      "source": "taskT6",
      "target": "taskT6_3",
      "selected": false
    },
    {
      "id": "e_taskT6_taskT6_4",
      "source": "taskT6",
      "target": "taskT6_4",
      "selected": false
    },
    {
      "id": "e_taskT7_taskT7_1",
      "source": "taskT7",
      "target": "taskT7_1",
      "selected": false
    },
    {
      "id": "e_taskT7_taskT7_2",
      "source": "taskT7",
      "target": "taskT7_2",
      "selected": false
    },
    {
      "id": "e_taskT7_taskT7_3",
      "source": "taskT7",
      "target": "taskT7_3",
      "selected": false
    },
    {
      "id": "e_taskT3_task_ZbkuAd8AOc",
      "source": "taskT3",
      "target": "task_ZbkuAd8AOc",
      "selected": false
    },
    {
      "id": "e_dragDropSnapGrid_dragUXDesign",
      "source": "dragDropSnapGrid",
      "target": "dragUXDesign"
    },
    {
      "id": "e_dragUXDesign_dragUXWireframes",
      "source": "dragUXDesign",
      "target": "dragUXWireframes"
    },
    {
      "id": "e_dragUXDesign_dragUXFeedback",
      "source": "dragUXDesign",
      "target": "dragUXFeedback"
    },
    {
      "id": "e_dragUXDesign_dragUXSpec",
      "source": "dragUXDesign",
      "target": "dragUXSpec"
    },
    {
      "id": "e_dragDropSnapGrid_implementDragHandler",
      "source": "dragDropSnapGrid",
      "target": "implementDragHandler"
    },
    {
      "id": "e_implementDragHandler_captureEvents",
      "source": "implementDragHandler",
      "target": "captureEvents"
    },
    {
      "id": "e_implementDragHandler_updateStatePos",
      "source": "implementDragHandler",
      "target": "updateStatePos"
    },
    {
      "id": "e_implementDragHandler_enforceBounds",
      "source": "implementDragHandler",
      "target": "enforceBounds"
    },
    {
      "id": "e_implementDragHandler_groupDrag",
      "source": "implementDragHandler",
      "target": "groupDrag"
    },
    {
      "id": "e_dragDropSnapGrid_snapToGridLogic",
      "source": "dragDropSnapGrid",
      "target": "snapToGridLogic"
    },
    {
      "id": "e_snapToGridLogic_gridConfig",
      "source": "snapToGridLogic",
      "target": "gridConfig"
    },
    {
      "id": "e_snapToGridLogic_calcNearestGrid",
      "source": "snapToGridLogic",
      "target": "calcNearestGrid"
    },
    {
      "id": "e_snapToGridLogic_gridVisualization",
      "source": "snapToGridLogic",
      "target": "gridVisualization"
    },
    {
      "id": "e_dragDropSnapGrid_portAutoAlignAlgo",
      "source": "dragDropSnapGrid",
      "target": "portAutoAlignAlgo"
    },
    {
      "id": "e_portAutoAlignAlgo_detectAdjacentPorts",
      "source": "portAutoAlignAlgo",
      "target": "detectAdjacentPorts"
    },
    {
      "id": "e_portAutoAlignAlgo_autoRoutePreview",
      "source": "portAutoAlignAlgo",
      "target": "autoRoutePreview"
    },
    {
      "id": "e_portAutoAlignAlgo_overrideToggle",
      "source": "portAutoAlignAlgo",
      "target": "overrideToggle"
    },
    {
      "id": "e_dragDropSnapGrid_dynamicConnectionPreview",
      "source": "dragDropSnapGrid",
      "target": "dynamicConnectionPreview"
    },
    {
      "id": "e_dynamicConnectionPreview_highlightTargets",
      "source": "dynamicConnectionPreview",
      "target": "highlightTargets"
    },
    {
      "id": "e_dynamicConnectionPreview_drawTempLines",
      "source": "dynamicConnectionPreview",
      "target": "drawTempLines"
    },
    {
      "id": "e_dragDropSnapGrid_placementTesting",
      "source": "dragDropSnapGrid",
      "target": "placementTesting"
    },
    {
      "id": "e_placementTesting_unitTestsGrid",
      "source": "placementTesting",
      "target": "unitTestsGrid"
    },
    {
      "id": "e_placementTesting_uiTestsDrag",
      "source": "placementTesting",
      "target": "uiTestsDrag"
    },
    {
      "id": "e_placementTesting_regressionAutoAlign",
      "source": "placementTesting",
      "target": "regressionAutoAlign"
    },
    {
      "id": "e_dragDropSnapGrid_optimizePerformanceLargeDiagrams",
      "source": "dragDropSnapGrid",
      "target": "optimizePerformanceLargeDiagrams"
    },
    {
      "id": "e_optimizePerformanceLargeDiagrams_throttleDebounce",
      "source": "optimizePerformanceLargeDiagrams",
      "target": "throttleDebounce"
    },
    {
      "id": "e_optimizePerformanceLargeDiagrams_useRAF",
      "source": "optimizePerformanceLargeDiagrams",
      "target": "useRAF"
    },
    {
      "id": "e_optimizePerformanceLargeDiagrams_profileBenchmark",
      "source": "optimizePerformanceLargeDiagrams",
      "target": "profileBenchmark"
    },
    {
      "id": "e_dragDropSnapGrid_updateDocsTutorial",
      "source": "dragDropSnapGrid",
      "target": "updateDocsTutorial"
    },
    {
      "id": "e_updateDocsTutorial_addUserGuide",
      "source": "updateDocsTutorial",
      "target": "addUserGuide"
    },
    {
      "id": "e_updateDocsTutorial_recordDemo",
      "source": "updateDocsTutorial",
      "target": "recordDemo"
    },
    {
      "id": "e_updateDocsTutorial_updateAPIRef",
      "source": "updateDocsTutorial",
      "target": "updateAPIRef"
    },
    {
      "id": "e_codeSnippetNodeSupport_designCodeSnippetNodeUIUX",
      "source": "codeSnippetNodeSupport",
      "target": "designCodeSnippetNodeUIUX"
    },
    {
      "id": "e_codeSnippetNodeSupport_implementSyntaxHighlighting",
      "source": "codeSnippetNodeSupport",
      "target": "implementSyntaxHighlighting"
    },
    {
      "id": "e_codeSnippetNodeSupport_implementRealtimeLinting",
      "source": "codeSnippetNodeSupport",
      "target": "implementRealtimeLinting"
    },
    {
      "id": "e_codeSnippetNodeSupport_implementCompilationSimulationIntegration",
      "source": "codeSnippetNodeSupport",
      "target": "implementCompilationSimulationIntegration"
    },
    {
      "id": "e_codeSnippetNodeSupport_implementDragDropCreationConfiguration",
      "source": "codeSnippetNodeSupport",
      "target": "implementDragDropCreationConfiguration"
    },
    {
      "id": "e_codeSnippetNodeSupport_persistCodeSnippetsProjectModel",
      "source": "codeSnippetNodeSupport",
      "target": "persistCodeSnippetsProjectModel"
    },
    {
      "id": "e_codeSnippetNodeSupport_unitIntegrationTesting",
      "source": "codeSnippetNodeSupport",
      "target": "unitIntegrationTesting"
    },
    {
      "id": "e_codeSnippetNodeSupport_documentationExamples",
      "source": "codeSnippetNodeSupport",
      "target": "documentationExamples"
    },
    {
      "id": "e_designCodeSnippetNodeUIUX_defineNodePropertiesMetadata",
      "source": "designCodeSnippetNodeUIUX",
      "target": "defineNodePropertiesMetadata"
    },
    {
      "id": "e_designCodeSnippetNodeUIUX_createCodeEditorComponentIntegration",
      "source": "designCodeSnippetNodeUIUX",
      "target": "createCodeEditorComponentIntegration"
    },
    {
      "id": "e_designCodeSnippetNodeUIUX_implementNodeConnectors",
      "source": "designCodeSnippetNodeUIUX",
      "target": "implementNodeConnectors"
    },
    {
      "id": "e_createCodeEditorComponentIntegration_integrateMonacoEditor",
      "source": "createCodeEditorComponentIntegration",
      "target": "integrateMonacoEditor"
    },
    {
      "id": "e_createCodeEditorComponentIntegration_configureLanguageModes",
      "source": "createCodeEditorComponentIntegration",
      "target": "configureLanguageModes"
    },
    {
      "id": "e_implementSyntaxHighlighting_implementVerilogSyntaxHighlighting",
      "source": "implementSyntaxHighlighting",
      "target": "implementVerilogSyntaxHighlighting"
    },
    {
      "id": "e_implementSyntaxHighlighting_implementPythonSyntaxHighlighting",
      "source": "implementSyntaxHighlighting",
      "target": "implementPythonSyntaxHighlighting"
    },
    {
      "id": "e_implementSyntaxHighlighting_testHighlightingPerformance",
      "source": "implementSyntaxHighlighting",
      "target": "testHighlightingPerformance"
    },
    {
      "id": "e_implementRealtimeLinting_selectLintingEngines",
      "source": "implementRealtimeLinting",
      "target": "selectLintingEngines"
    },
    {
      "id": "e_implementRealtimeLinting_integrateLintingWebWorkers",
      "source": "implementRealtimeLinting",
      "target": "integrateLintingWebWorkers"
    },
    {
      "id": "e_implementRealtimeLinting_mapLintingDiagnostics",
      "source": "implementRealtimeLinting",
      "target": "mapLintingDiagnostics"
    },
    {
      "id": "e_implementCompilationSimulationIntegration_generateTemporaryFiles",
      "source": "implementCompilationSimulationIntegration",
      "target": "generateTemporaryFiles"
    },
    {
      "id": "e_implementCompilationSimulationIntegration_verilogSnippetToVerilatorFlow",
      "source": "implementCompilationSimulationIntegration",
      "target": "verilogSnippetToVerilatorFlow"
    },
    {
      "id": "e_implementCompilationSimulationIntegration_wrapPythonSnippetsCocotbHarness",
      "source": "implementCompilationSimulationIntegration",
      "target": "wrapPythonSnippetsCocotbHarness"
    },
    {
      "id": "e_implementDragDropCreationConfiguration_addPaletteEntryCodeSnippetNode",
      "source": "implementDragDropCreationConfiguration",
      "target": "addPaletteEntryCodeSnippetNode"
    },
    {
      "id": "e_implementDragDropCreationConfiguration_supportOnCanvasEdit",
      "source": "implementDragDropCreationConfiguration",
      "target": "supportOnCanvasEdit"
    },
    {
      "id": "e_persistCodeSnippetsProjectModel_serializeSnippets",
      "source": "persistCodeSnippetsProjectModel",
      "target": "serializeSnippets"
    },
    {
      "id": "e_persistCodeSnippetsProjectModel_loadReconstructNode",
      "source": "persistCodeSnippetsProjectModel",
      "target": "loadReconstructNode"
    },
    {
      "id": "e_unitIntegrationTesting_writeJestUnitTestsEditor",
      "source": "unitIntegrationTesting",
      "target": "writeJestUnitTestsEditor"
    },
    {
      "id": "e_unitIntegrationTesting_createEndToEndCypressTests",
      "source": "unitIntegrationTesting",
      "target": "createEndToEndCypressTests"
    },
    {
      "id": "e_documentationExamples_provideSampleVerilogSnippet",
      "source": "documentationExamples",
      "target": "provideSampleVerilogSnippet"
    },
    {
      "id": "e_documentationExamples_provideSamplePythonSnippet",
      "source": "documentationExamples",
      "target": "provideSamplePythonSnippet"
    },
    {
      "id": "e_documentationExamples_updateUserManual",
      "source": "documentationExamples",
      "target": "updateUserManual"
    },
    {
      "id": "e_realTimeConnectionValidation_signalMetadataPropagationEngine",
      "source": "realTimeConnectionValidation",
      "target": "signalMetadataPropagationEngine"
    },
    {
      "id": "e_realTimeConnectionValidation_compatibilityRulesLibrary",
      "source": "realTimeConnectionValidation",
      "target": "compatibilityRulesLibrary"
    },
    {
      "id": "e_realTimeConnectionValidation_editorValidationTriggerIntegration",
      "source": "realTimeConnectionValidation",
      "target": "editorValidationTriggerIntegration"
    },
    {
      "id": "e_realTimeConnectionValidation_validationPerformanceOptimization",
      "source": "realTimeConnectionValidation",
      "target": "validationPerformanceOptimization"
    },
    {
      "id": "e_realTimeConnectionValidation_errorHighlightingUI",
      "source": "realTimeConnectionValidation",
      "target": "errorHighlightingUI"
    },
    {
      "id": "e_realTimeConnectionValidation_validationTesting",
      "source": "realTimeConnectionValidation",
      "target": "validationTesting"
    },
    {
      "id": "e_realTimeConnectionValidation_validationTelemetryLogging",
      "source": "realTimeConnectionValidation",
      "target": "validationTelemetryLogging"
    },
    {
      "id": "e_realTimeConnectionValidation_validationDocumentation",
      "source": "realTimeConnectionValidation",
      "target": "validationDocumentation"
    },
    {
      "id": "e_signalMetadataPropagationEngine_signalMetadataPropagationEngineDefineSchema",
      "source": "signalMetadataPropagationEngine",
      "target": "signalMetadataPropagationEngineDefineSchema"
    },
    {
      "id": "e_signalMetadataPropagationEngine_signalMetadataPropagationEngineExtendDataModel",
      "source": "signalMetadataPropagationEngine",
      "target": "signalMetadataPropagationEngineExtendDataModel"
    },
    {
      "id": "e_signalMetadataPropagationEngine_signalMetadataPropagationEngineDevelopAlgorithm",
      "source": "signalMetadataPropagationEngine",
      "target": "signalMetadataPropagationEngineDevelopAlgorithm"
    },
    {
      "id": "e_signalMetadataPropagationEngine_signalMetadataPropagationEngineImplementCaching",
      "source": "signalMetadataPropagationEngine",
      "target": "signalMetadataPropagationEngineImplementCaching"
    },
    {
      "id": "e_compatibilityRulesLibrary_compatibilityRulesGatherRequirements",
      "source": "compatibilityRulesLibrary",
      "target": "compatibilityRulesGatherRequirements"
    },
    {
      "id": "e_compatibilityRulesLibrary_compatibilityRulesEncodeRules",
      "source": "compatibilityRulesLibrary",
      "target": "compatibilityRulesEncodeRules"
    },
    {
      "id": "e_compatibilityRulesLibrary_compatibilityRulesImplementEngine",
      "source": "compatibilityRulesLibrary",
      "target": "compatibilityRulesImplementEngine"
    },
    {
      "id": "e_compatibilityRulesLibrary_compatibilityRulesUserDefinedMechanism",
      "source": "compatibilityRulesLibrary",
      "target": "compatibilityRulesUserDefinedMechanism"
    },
    {
      "id": "e_editorValidationTriggerIntegration_editorTriggerHookEvents",
      "source": "editorValidationTriggerIntegration",
      "target": "editorTriggerHookEvents"
    },
    {
      "id": "e_editorValidationTriggerIntegration_editorTriggerDebounceEvents",
      "source": "editorValidationTriggerIntegration",
      "target": "editorTriggerDebounceEvents"
    },
    {
      "id": "e_editorValidationTriggerIntegration_editorTriggerInvokeValidation",
      "source": "editorValidationTriggerIntegration",
      "target": "editorTriggerInvokeValidation"
    },
    {
      "id": "e_validationPerformanceOptimization_performanceProfileWorkflow",
      "source": "validationPerformanceOptimization",
      "target": "performanceProfileWorkflow"
    },
    {
      "id": "e_validationPerformanceOptimization_performanceParallelizeEvaluation",
      "source": "validationPerformanceOptimization",
      "target": "performanceParallelizeEvaluation"
    },
    {
      "id": "e_validationPerformanceOptimization_performanceIncrementalValidation",
      "source": "validationPerformanceOptimization",
      "target": "performanceIncrementalValidation"
    },
    {
      "id": "e_validationPerformanceOptimization_performanceSetBudgets",
      "source": "validationPerformanceOptimization",
      "target": "performanceSetBudgets"
    },
    {
      "id": "e_errorHighlightingUI_uiDefineVisualizationPatterns",
      "source": "errorHighlightingUI",
      "target": "uiDefineVisualizationPatterns"
    },
    {
      "id": "e_errorHighlightingUI_uiImplementErrorListPanel",
      "source": "errorHighlightingUI",
      "target": "uiImplementErrorListPanel"
    },
    {
      "id": "e_errorHighlightingUI_uiEnsureAccessibility",
      "source": "errorHighlightingUI",
      "target": "uiEnsureAccessibility"
    },
    {
      "id": "e_errorHighlightingUI_uiAddClickNavigation",
      "source": "errorHighlightingUI",
      "target": "uiAddClickNavigation"
    },
    {
      "id": "e_validationTesting_testingWriteUnitTests",
      "source": "validationTesting",
      "target": "testingWriteUnitTests"
    },
    {
      "id": "e_validationTesting_testingCreateSampleGraphs",
      "source": "validationTesting",
      "target": "testingCreateSampleGraphs"
    },
    {
      "id": "e_validationTesting_testingAutomateRegression",
      "source": "validationTesting",
      "target": "testingAutomateRegression"
    },
    {
      "id": "e_validationTelemetryLogging_telemetryLogValidationDuration",
      "source": "validationTelemetryLogging",
      "target": "telemetryLogValidationDuration"
    },
    {
      "id": "e_validationTelemetryLogging_telemetrySendAnonymized",
      "source": "validationTelemetryLogging",
      "target": "telemetrySendAnonymized"
    },
    {
      "id": "e_validationTelemetryLogging_telemetryCreateDashboard",
      "source": "validationTelemetryLogging",
      "target": "telemetryCreateDashboard"
    },
    {
      "id": "e_validationDocumentation_documentationUpdateUserGuide",
      "source": "validationDocumentation",
      "target": "documentationUpdateUserGuide"
    },
    {
      "id": "e_validationDocumentation_documentationProvideAPIDocumentation",
      "source": "validationDocumentation",
      "target": "documentationProvideAPIDocumentation"
    },
    {
      "id": "e_validationDocumentation_documentationCreateTutorials",
      "source": "validationDocumentation",
      "target": "documentationCreateTutorials"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_designSubdiagramDataModel",
      "source": "hierarchicalSubdiagramSupport",
      "target": "designSubdiagramDataModel"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_implementSubdiagramCreation",
      "source": "hierarchicalSubdiagramSupport",
      "target": "implementSubdiagramCreation"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_implementCollapseExpandUI",
      "source": "hierarchicalSubdiagramSupport",
      "target": "implementCollapseExpandUI"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_optimizePerformance100Blocks",
      "source": "hierarchicalSubdiagramSupport",
      "target": "optimizePerformance100Blocks"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_preserveNetlistHierarchy",
      "source": "hierarchicalSubdiagramSupport",
      "target": "preserveNetlistHierarchy"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_writeAutomatedTests",
      "source": "hierarchicalSubdiagramSupport",
      "target": "writeAutomatedTests"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_updateSerializationSupport",
      "source": "hierarchicalSubdiagramSupport",
      "target": "updateSerializationSupport"
    },
    {
      "id": "e_hierarchicalSubdiagramSupport_updateDocumentationAndTutorials",
      "source": "hierarchicalSubdiagramSupport",
      "target": "updateDocumentationAndTutorials"
    },
    {
      "id": "e_designSubdiagramDataModel_defineJsonSchemaChanges",
      "source": "designSubdiagramDataModel",
      "target": "defineJsonSchemaChanges"
    },
    {
      "id": "e_designSubdiagramDataModel_implementFrontendDataStructures",
      "source": "designSubdiagramDataModel",
      "target": "implementFrontendDataStructures"
    },
    {
      "id": "e_designSubdiagramDataModel_updateBackendSimulationMetadata",
      "source": "designSubdiagramDataModel",
      "target": "updateBackendSimulationMetadata"
    },
    {
      "id": "e_implementSubdiagramCreation_implementMultiSelect",
      "source": "implementSubdiagramCreation",
      "target": "implementMultiSelect"
    },
    {
      "id": "e_implementSubdiagramCreation_groupSelectionIntoSubdiagram",
      "source": "implementSubdiagramCreation",
      "target": "groupSelectionIntoSubdiagram"
    },
    {
      "id": "e_implementSubdiagramCreation_generateWrapperBlock",
      "source": "implementSubdiagramCreation",
      "target": "generateWrapperBlock"
    },
    {
      "id": "e_implementSubdiagramCreation_ensureUndoRedoIntegration",
      "source": "implementSubdiagramCreation",
      "target": "ensureUndoRedoIntegration"
    },
    {
      "id": "e_implementCollapseExpandUI_implementCollapseExpandTrigger",
      "source": "implementCollapseExpandUI",
      "target": "implementCollapseExpandTrigger"
    },
    {
      "id": "e_implementCollapseExpandUI_animateCollapseExpand",
      "source": "implementCollapseExpandUI",
      "target": "animateCollapseExpand"
    },
    {
      "id": "e_implementCollapseExpandUI_maintainLayoutPositions",
      "source": "implementCollapseExpandUI",
      "target": "maintainLayoutPositions"
    },
    {
      "id": "e_implementCollapseExpandUI_updateMinimapViewport",
      "source": "implementCollapseExpandUI",
      "target": "updateMinimapViewport"
    },
    {
      "id": "e_optimizePerformance100Blocks_benchmarkBaseline100Blocks",
      "source": "optimizePerformance100Blocks",
      "target": "benchmarkBaseline100Blocks"
    },
    {
      "id": "e_optimizePerformance100Blocks_implementIncrementalRendering",
      "source": "optimizePerformance100Blocks",
      "target": "implementIncrementalRendering"
    },
    {
      "id": "e_optimizePerformance100Blocks_memoizeNodeRendering",
      "source": "optimizePerformance100Blocks",
      "target": "memoizeNodeRendering"
    },
    {
      "id": "e_optimizePerformance100Blocks_optimizeEventDispatching",
      "source": "optimizePerformance100Blocks",
      "target": "optimizeEventDispatching"
    },
    {
      "id": "e_optimizePerformance100Blocks_verifyOneSecondPerformance",
      "source": "optimizePerformance100Blocks",
      "target": "verifyOneSecondPerformance"
    },
    {
      "id": "e_preserveNetlistHierarchy_generateHierarchicalIdentifiers",
      "source": "preserveNetlistHierarchy",
      "target": "generateHierarchicalIdentifiers"
    },
    {
      "id": "e_preserveNetlistHierarchy_updateNetlistExporterHierarchy",
      "source": "preserveNetlistHierarchy",
      "target": "updateNetlistExporterHierarchy"
    },
    {
      "id": "e_preserveNetlistHierarchy_verifyHierarchyConsistencyTests",
      "source": "preserveNetlistHierarchy",
      "target": "verifyHierarchyConsistencyTests"
    },
    {
      "id": "e_writeAutomatedTests_unitTestsDataModel",
      "source": "writeAutomatedTests",
      "target": "unitTestsDataModel"
    },
    {
      "id": "e_writeAutomatedTests_integrationTestsUIOperations",
      "source": "writeAutomatedTests",
      "target": "integrationTestsUIOperations"
    },
    {
      "id": "e_writeAutomatedTests_performanceTestScript",
      "source": "writeAutomatedTests",
      "target": "performanceTestScript"
    },
    {
      "id": "e_writeAutomatedTests_ciPipelineIntegration",
      "source": "writeAutomatedTests",
      "target": "ciPipelineIntegration"
    },
    {
      "id": "e_updateSerializationSupport_updateSaveFileVersioning",
      "source": "updateSerializationSupport",
      "target": "updateSaveFileVersioning"
    },
    {
      "id": "e_updateSerializationSupport_implementDesignMigration",
      "source": "updateSerializationSupport",
      "target": "implementDesignMigration"
    },
    {
      "id": "e_updateSerializationSupport_verifyLoadSaveRoundtrip",
      "source": "updateSerializationSupport",
      "target": "verifyLoadSaveRoundtrip"
    },
    {
      "id": "e_updateDocumentationAndTutorials_updateUserManual",
      "source": "updateDocumentationAndTutorials",
      "target": "updateUserManual"
    },
    {
      "id": "e_updateDocumentationAndTutorials_createTutorialVideo",
      "source": "updateDocumentationAndTutorials",
      "target": "createTutorialVideo"
    },
    {
      "id": "e_updateDocumentationAndTutorials_updateApiDocs",
      "source": "updateDocumentationAndTutorials",
      "target": "updateApiDocs"
    },
    {
      "id": "e_parameterInspectorPanel_optimizePanelInitialization",
      "source": "parameterInspectorPanel",
      "target": "optimizePanelInitialization"
    },
    {
      "id": "e_optimizePanelInitialization_profilePanelLoadTime",
      "source": "optimizePanelInitialization",
      "target": "profilePanelLoadTime"
    },
    {
      "id": "e_optimizePanelInitialization_removeRedundantReRenders",
      "source": "optimizePanelInitialization",
      "target": "removeRedundantReRenders"
    },
    {
      "id": "e_optimizePanelInitialization_memoizeStaticSubcomponents",
      "source": "optimizePanelInitialization",
      "target": "memoizeStaticSubcomponents"
    },
    {
      "id": "e_optimizePanelInitialization_optimizeAssetBundling",
      "source": "optimizePanelInitialization",
      "target": "optimizeAssetBundling"
    },
    {
      "id": "e_parameterInspectorPanel_implementLazyLoadingStrategy",
      "source": "parameterInspectorPanel",
      "target": "implementLazyLoadingStrategy"
    },
    {
      "id": "e_implementLazyLoadingStrategy_identifyHeavyDependencies",
      "source": "implementLazyLoadingStrategy",
      "target": "identifyHeavyDependencies"
    },
    {
      "id": "e_implementLazyLoadingStrategy_convertToDynamicImports",
      "source": "implementLazyLoadingStrategy",
      "target": "convertToDynamicImports"
    },
    {
      "id": "e_implementLazyLoadingStrategy_implementSkeletonLoadingUI",
      "source": "implementLazyLoadingStrategy",
      "target": "implementSkeletonLoadingUI"
    },
    {
      "id": "e_parameterInspectorPanel_prefetchAndCacheParameterMetadata",
      "source": "parameterInspectorPanel",
      "target": "prefetchAndCacheParameterMetadata"
    },
    {
      "id": "e_prefetchAndCacheParameterMetadata_designMetadataCacheStructure",
      "source": "prefetchAndCacheParameterMetadata",
      "target": "designMetadataCacheStructure"
    },
    {
      "id": "e_prefetchAndCacheParameterMetadata_triggerMetadataFetchOnProjectLoad",
      "source": "prefetchAndCacheParameterMetadata",
      "target": "triggerMetadataFetchOnProjectLoad"
    },
    {
      "id": "e_prefetchAndCacheParameterMetadata_implementCacheInvalidationPolicy",
      "source": "prefetchAndCacheParameterMetadata",
      "target": "implementCacheInvalidationPolicy"
    },
    {
      "id": "e_parameterInspectorPanel_efficientStateManagementForPanel",
      "source": "parameterInspectorPanel",
      "target": "efficientStateManagementForPanel"
    },
    {
      "id": "e_efficientStateManagementForPanel_evaluateStateLibraryOptions",
      "source": "efficientStateManagementForPanel",
      "target": "evaluateStateLibraryOptions"
    },
    {
      "id": "e_efficientStateManagementForPanel_implementShallowComparisonSelectors",
      "source": "efficientStateManagementForPanel",
      "target": "implementShallowComparisonSelectors"
    },
    {
      "id": "e_efficientStateManagementForPanel_writeStateUnitTests",
      "source": "efficientStateManagementForPanel",
      "target": "writeStateUnitTests"
    },
    {
      "id": "e_parameterInspectorPanel_debouncedAndBatchedParameterUpdates",
      "source": "parameterInspectorPanel",
      "target": "debouncedAndBatchedParameterUpdates"
    },
    {
      "id": "e_debouncedAndBatchedParameterUpdates_addDebounceToUserInputHandlers",
      "source": "debouncedAndBatchedParameterUpdates",
      "target": "addDebounceToUserInputHandlers"
    },
    {
      "id": "e_debouncedAndBatchedParameterUpdates_batchMultipleParameterChanges",
      "source": "debouncedAndBatchedParameterUpdates",
      "target": "batchMultipleParameterChanges"
    },
    {
      "id": "e_debouncedAndBatchedParameterUpdates_provideImmediateUIFeedbackDuringDebounce",
      "source": "debouncedAndBatchedParameterUpdates",
      "target": "provideImmediateUIFeedbackDuringDebounce"
    },
    {
      "id": "e_parameterInspectorPanel_incrementalSimulationUpdatePath",
      "source": "parameterInspectorPanel",
      "target": "incrementalSimulationUpdatePath"
    },
    {
      "id": "e_incrementalSimulationUpdatePath_defineAPILiveParameterInjection",
      "source": "incrementalSimulationUpdatePath",
      "target": "defineAPILiveParameterInjection"
    },
    {
      "id": "e_incrementalSimulationUpdatePath_implementDifferentialConfigurationGeneration",
      "source": "incrementalSimulationUpdatePath",
      "target": "implementDifferentialConfigurationGeneration"
    },
    {
      "id": "e_incrementalSimulationUpdatePath_implementFallbackFullRecompilePath",
      "source": "incrementalSimulationUpdatePath",
      "target": "implementFallbackFullRecompilePath"
    },
    {
      "id": "e_parameterInspectorPanel_performanceProfilingAndMonitoring",
      "source": "parameterInspectorPanel",
      "target": "performanceProfilingAndMonitoring"
    },
    {
      "id": "e_performanceProfilingAndMonitoring_integrateReactProfiler",
      "source": "performanceProfilingAndMonitoring",
      "target": "integrateReactProfiler"
    },
    {
      "id": "e_performanceProfilingAndMonitoring_addRuntimePerformanceMetricsLogging",
      "source": "performanceProfilingAndMonitoring",
      "target": "addRuntimePerformanceMetricsLogging"
    },
    {
      "id": "e_performanceProfilingAndMonitoring_documentOptimizationFindings",
      "source": "performanceProfilingAndMonitoring",
      "target": "documentOptimizationFindings"
    },
    {
      "id": "e_parameterInspectorPanel_automatedTimingTests",
      "source": "parameterInspectorPanel",
      "target": "automatedTimingTests"
    },
    {
      "id": "e_automatedTimingTests_unitTestPanelOpenTime",
      "source": "automatedTimingTests",
      "target": "unitTestPanelOpenTime"
    },
    {
      "id": "e_automatedTimingTests_integrationTestParameterChangeLatency",
      "source": "automatedTimingTests",
      "target": "integrationTestParameterChangeLatency"
    },
    {
      "id": "e_automatedTimingTests_setupCIFailureThresholds",
      "source": "automatedTimingTests",
      "target": "setupCIFailureThresholds"
    },
    {
      "id": "e_parameterInspectorPanel_codeReviewAndRefactoringForPerformance",
      "source": "parameterInspectorPanel",
      "target": "codeReviewAndRefactoringForPerformance"
    },
    {
      "id": "e_codeReviewAndRefactoringForPerformance_peerReviewCriticalPaths",
      "source": "codeReviewAndRefactoringForPerformance",
      "target": "peerReviewCriticalPaths"
    },
    {
      "id": "e_codeReviewAndRefactoringForPerformance_refactorSpaghettiCode",
      "source": "codeReviewAndRefactoringForPerformance",
      "target": "refactorSpaghettiCode"
    },
    {
      "id": "e_codeReviewAndRefactoringForPerformance_removeDeadCode",
      "source": "codeReviewAndRefactoringForPerformance",
      "target": "removeDeadCode"
    },
    {
      "id": "e_parameterInspectorPanel_continuousPerformanceRegressionPipeline",
      "source": "parameterInspectorPanel",
      "target": "continuousPerformanceRegressionPipeline"
    },
    {
      "id": "e_continuousPerformanceRegressionPipeline_addPerformanceBenchmarksToCI",
      "source": "continuousPerformanceRegressionPipeline",
      "target": "addPerformanceBenchmarksToCI"
    },
    {
      "id": "e_continuousPerformanceRegressionPipeline_alertOnPerformanceRegression",
      "source": "continuousPerformanceRegressionPipeline",
      "target": "alertOnPerformanceRegression"
    },
    {
      "id": "e_autosaveRecovery_taskAutosaveArch",
      "source": "autosaveRecovery",
      "target": "taskAutosaveArch"
    },
    {
      "id": "e_taskAutosaveArch_taskChangeDetection",
      "source": "taskAutosaveArch",
      "target": "taskChangeDetection"
    },
    {
      "id": "e_taskAutosaveArch_taskDiagramSerializationFormat",
      "source": "taskAutosaveArch",
      "target": "taskDiagramSerializationFormat"
    },
    {
      "id": "e_taskAutosaveArch_taskStorageStrategy",
      "source": "taskAutosaveArch",
      "target": "taskStorageStrategy"
    },
    {
      "id": "e_autosaveRecovery_taskAutosaveTimer",
      "source": "autosaveRecovery",
      "target": "taskAutosaveTimer"
    },
    {
      "id": "e_taskAutosaveTimer_taskTimerResetOnManualSave",
      "source": "taskAutosaveTimer",
      "target": "taskTimerResetOnManualSave"
    },
    {
      "id": "e_autosaveRecovery_taskSerializeDiagram",
      "source": "autosaveRecovery",
      "target": "taskSerializeDiagram"
    },
    {
      "id": "e_taskSerializeDiagram_taskCollectDiagramState",
      "source": "taskSerializeDiagram",
      "target": "taskCollectDiagramState"
    },
    {
      "id": "e_taskSerializeDiagram_taskCollectCodeSnippets",
      "source": "taskSerializeDiagram",
      "target": "taskCollectCodeSnippets"
    },
    {
      "id": "e_taskSerializeDiagram_taskCollectSimConfig",
      "source": "taskSerializeDiagram",
      "target": "taskCollectSimConfig"
    },
    {
      "id": "e_taskSerializeDiagram_taskCompressJSON",
      "source": "taskSerializeDiagram",
      "target": "taskCompressJSON"
    },
    {
      "id": "e_autosaveRecovery_taskWriteToDisk",
      "source": "autosaveRecovery",
      "target": "taskWriteToDisk"
    },
    {
      "id": "e_taskWriteToDisk_taskWriteTempFile",
      "source": "taskWriteToDisk",
      "target": "taskWriteTempFile"
    },
    {
      "id": "e_taskWriteToDisk_taskMoveToAutosaveFile",
      "source": "taskWriteToDisk",
      "target": "taskMoveToAutosaveFile"
    },
    {
      "id": "e_autosaveRecovery_taskSessionRecoveryLoader",
      "source": "autosaveRecovery",
      "target": "taskSessionRecoveryLoader"
    },
    {
      "id": "e_taskSessionRecoveryLoader_taskDetectAutosaveFile",
      "source": "taskSessionRecoveryLoader",
      "target": "taskDetectAutosaveFile"
    },
    {
      "id": "e_taskSessionRecoveryLoader_taskRecoveryPrompt",
      "source": "taskSessionRecoveryLoader",
      "target": "taskRecoveryPrompt"
    },
    {
      "id": "e_taskSessionRecoveryLoader_taskLoadDiagramWithin3s",
      "source": "taskSessionRecoveryLoader",
      "target": "taskLoadDiagramWithin3s"
    },
    {
      "id": "e_autosaveRecovery_taskOptimizeLoading",
      "source": "autosaveRecovery",
      "target": "taskOptimizeLoading"
    },
    {
      "id": "e_taskOptimizeLoading_taskLazyLoadAssets",
      "source": "taskOptimizeLoading",
      "target": "taskLazyLoadAssets"
    },
    {
      "id": "e_taskOptimizeLoading_taskBinaryCompression",
      "source": "taskOptimizeLoading",
      "target": "taskBinaryCompression"
    },
    {
      "id": "e_autosaveRecovery_taskTests",
      "source": "autosaveRecovery",
      "target": "taskTests"
    },
    {
      "id": "e_taskTests_taskIntervalAccuracyTest",
      "source": "taskTests",
      "target": "taskIntervalAccuracyTest"
    },
    {
      "id": "e_taskTests_taskLoadingTimeTest",
      "source": "taskTests",
      "target": "taskLoadingTimeTest"
    },
    {
      "id": "e_taskTests_taskDataIntegrityTest",
      "source": "taskTests",
      "target": "taskDataIntegrityTest"
    },
    {
      "id": "e_autosaveRecovery_taskUIFeedback",
      "source": "autosaveRecovery",
      "target": "taskUIFeedback"
    },
    {
      "id": "e_taskUIFeedback_taskSaveStatusIndicator",
      "source": "taskUIFeedback",
      "target": "taskSaveStatusIndicator"
    },
    {
      "id": "e_taskUIFeedback_taskHandleWriteErrors",
      "source": "taskUIFeedback",
      "target": "taskHandleWriteErrors"
    },
    {
      "id": "e_taskUIFeedback_taskLogFailures",
      "source": "taskUIFeedback",
      "target": "taskLogFailures"
    },
    {
      "id": "e_autosaveRecovery_taskDocumentation",
      "source": "autosaveRecovery",
      "target": "taskDocumentation"
    },
    {
      "id": "e_taskDocumentation_taskDevDocs",
      "source": "taskDocumentation",
      "target": "taskDevDocs"
    },
    {
      "id": "e_taskDocumentation_taskUserDocs",
      "source": "taskDocumentation",
      "target": "taskUserDocs"
    },
    {
      "id": "e_searchableBlockLibrary_defineBlockLibraryArchitecture",
      "source": "searchableBlockLibrary",
      "target": "defineBlockLibraryArchitecture"
    },
    {
      "id": "e_searchableBlockLibrary_implementParameterizationFramework",
      "source": "searchableBlockLibrary",
      "target": "implementParameterizationFramework"
    },
    {
      "id": "e_searchableBlockLibrary_buildMetadataIndexAndSearchBackend",
      "source": "searchableBlockLibrary",
      "target": "buildMetadataIndexAndSearchBackend"
    },
    {
      "id": "e_searchableBlockLibrary_developParameterisableBlocks",
      "source": "searchableBlockLibrary",
      "target": "developParameterisableBlocks"
    },
    {
      "id": "e_searchableBlockLibrary_integrateLibraryWithEditorUI",
      "source": "searchableBlockLibrary",
      "target": "integrateLibraryWithEditorUI"
    },
    {
      "id": "e_searchableBlockLibrary_establishCICDValidationPipeline",
      "source": "searchableBlockLibrary",
      "target": "establishCICDValidationPipeline"
    },
    {
      "id": "e_searchableBlockLibrary_writeDocumentation",
      "source": "searchableBlockLibrary",
      "target": "writeDocumentation"
    },
    {
      "id": "e_searchableBlockLibrary_conductPerformanceAndAcceptanceTesting",
      "source": "searchableBlockLibrary",
      "target": "conductPerformanceAndAcceptanceTesting"
    },
    {
      "id": "e_buildMetadataIndexAndSearchBackend_chooseDataStoreIndexingStrategy",
      "source": "buildMetadataIndexAndSearchBackend",
      "target": "chooseDataStoreIndexingStrategy"
    },
    {
      "id": "e_buildMetadataIndexAndSearchBackend_implementSearchAPI",
      "source": "buildMetadataIndexAndSearchBackend",
      "target": "implementSearchAPI"
    },
    {
      "id": "e_buildMetadataIndexAndSearchBackend_optimizeSearchPerformance",
      "source": "buildMetadataIndexAndSearchBackend",
      "target": "optimizeSearchPerformance"
    },
    {
      "id": "e_buildMetadataIndexAndSearchBackend_implementSearchUnitTests",
      "source": "buildMetadataIndexAndSearchBackend",
      "target": "implementSearchUnitTests"
    },
    {
      "id": "e_developParameterisableBlocks_designSourceBlocks",
      "source": "developParameterisableBlocks",
      "target": "designSourceBlocks"
    },
    {
      "id": "e_developParameterisableBlocks_designProcessingBlocks",
      "source": "developParameterisableBlocks",
      "target": "designProcessingBlocks"
    },
    {
      "id": "e_developParameterisableBlocks_designSinkBlocks",
      "source": "developParameterisableBlocks",
      "target": "designSinkBlocks"
    },
    {
      "id": "e_developParameterisableBlocks_writeBlockMetadataAndParameters",
      "source": "developParameterisableBlocks",
      "target": "writeBlockMetadataAndParameters"
    },
    {
      "id": "e_developParameterisableBlocks_unitTestEachBlock",
      "source": "developParameterisableBlocks",
      "target": "unitTestEachBlock"
    },
    {
      "id": "e_integrateLibraryWithEditorUI_createSearchablePaletteComponent",
      "source": "integrateLibraryWithEditorUI",
      "target": "createSearchablePaletteComponent"
    },
    {
      "id": "e_integrateLibraryWithEditorUI_implementDragAndDropFromSearchResults",
      "source": "integrateLibraryWithEditorUI",
      "target": "implementDragAndDropFromSearchResults"
    },
    {
      "id": "e_integrateLibraryWithEditorUI_implementParameterEditingDialog",
      "source": "integrateLibraryWithEditorUI",
      "target": "implementParameterEditingDialog"
    },
    {
      "id": "e_establishCICDValidationPipeline_configureCIPipeline",
      "source": "establishCICDValidationPipeline",
      "target": "configureCIPipeline"
    },
    {
      "id": "e_establishCICDValidationPipeline_addAutomatedBuildLintJobs",
      "source": "establishCICDValidationPipeline",
      "target": "addAutomatedBuildLintJobs"
    },
    {
      "id": "e_establishCICDValidationPipeline_addAutomatedSimulationTests",
      "source": "establishCICDValidationPipeline",
      "target": "addAutomatedSimulationTests"
    },
    {
      "id": "e_conductPerformanceAndAcceptanceTesting_measureSearchLatency",
      "source": "conductPerformanceAndAcceptanceTesting",
      "target": "measureSearchLatency"
    },
    {
      "id": "e_conductPerformanceAndAcceptanceTesting_gatherBetaUserFeedback",
      "source": "conductPerformanceAndAcceptanceTesting",
      "target": "gatherBetaUserFeedback"
    },
    {
      "id": "e_conductPerformanceAndAcceptanceTesting_fixReportedIssues",
      "source": "conductPerformanceAndAcceptanceTesting",
      "target": "fixReportedIssues"
    },
    {
      "id": "e_undoRedoHistory_tUndoArch",
      "source": "undoRedoHistory",
      "target": "tUndoArch"
    },
    {
      "id": "e_undoRedoHistory_tImplementRecordingMiddleware",
      "source": "undoRedoHistory",
      "target": "tImplementRecordingMiddleware"
    },
    {
      "id": "e_undoRedoHistory_tImplementStacks",
      "source": "undoRedoHistory",
      "target": "tImplementStacks"
    },
    {
      "id": "e_undoRedoHistory_tUndoExecLogic",
      "source": "undoRedoHistory",
      "target": "tUndoExecLogic"
    },
    {
      "id": "e_undoRedoHistory_tRedoExecLogic",
      "source": "undoRedoHistory",
      "target": "tRedoExecLogic"
    },
    {
      "id": "e_undoRedoHistory_tKeyboardShortcuts",
      "source": "undoRedoHistory",
      "target": "tKeyboardShortcuts"
    },
    {
      "id": "e_undoRedoHistory_tToolbarButtons",
      "source": "undoRedoHistory",
      "target": "tToolbarButtons"
    },
    {
      "id": "e_undoRedoHistory_tPersistHistory",
      "source": "undoRedoHistory",
      "target": "tPersistHistory"
    },
    {
      "id": "e_undoRedoHistory_tUnitTests",
      "source": "undoRedoHistory",
      "target": "tUnitTests"
    },
    {
      "id": "e_undoRedoHistory_tPerformanceOpt",
      "source": "undoRedoHistory",
      "target": "tPerformanceOpt"
    },
    {
      "id": "e_undoRedoHistory_tDocumentation",
      "source": "undoRedoHistory",
      "target": "tDocumentation"
    },
    {
      "id": "e_tUndoArch_tDefineActionAbstraction",
      "source": "tUndoArch",
      "target": "tDefineActionAbstraction"
    },
    {
      "id": "e_tUndoArch_tDetermineStateStrategy",
      "source": "tUndoArch",
      "target": "tDetermineStateStrategy"
    },
    {
      "id": "e_tUndoArch_tSpecifyStackSize",
      "source": "tUndoArch",
      "target": "tSpecifyStackSize"
    },
    {
      "id": "e_tUndoArch_tDefineSerialization",
      "source": "tUndoArch",
      "target": "tDefineSerialization"
    },
    {
      "id": "e_tImplementRecordingMiddleware_tIntegrateReactFlowEvents",
      "source": "tImplementRecordingMiddleware",
      "target": "tIntegrateReactFlowEvents"
    },
    {
      "id": "e_tImplementRecordingMiddleware_tCaptureCodeEditorChanges",
      "source": "tImplementRecordingMiddleware",
      "target": "tCaptureCodeEditorChanges"
    },
    {
      "id": "e_tImplementRecordingMiddleware_tRecordSimulationParamChanges",
      "source": "tImplementRecordingMiddleware",
      "target": "tRecordSimulationParamChanges"
    },
    {
      "id": "e_tImplementStacks_tStackPushPop",
      "source": "tImplementStacks",
      "target": "tStackPushPop"
    },
    {
      "id": "e_tImplementStacks_tStackSizeLimit",
      "source": "tImplementStacks",
      "target": "tStackSizeLimit"
    },
    {
      "id": "e_tUndoExecLogic_tUndoReverseAction",
      "source": "tUndoExecLogic",
      "target": "tUndoReverseAction"
    },
    {
      "id": "e_tUndoExecLogic_tUndoUpdateUI",
      "source": "tUndoExecLogic",
      "target": "tUndoUpdateUI"
    },
    {
      "id": "e_tUndoExecLogic_tHandleCompositeActions",
      "source": "tUndoExecLogic",
      "target": "tHandleCompositeActions"
    },
    {
      "id": "e_tRedoExecLogic_tRedoReapplyAction",
      "source": "tRedoExecLogic",
      "target": "tRedoReapplyAction"
    },
    {
      "id": "e_tRedoExecLogic_tRedoUpdateUI",
      "source": "tRedoExecLogic",
      "target": "tRedoUpdateUI"
    },
    {
      "id": "e_tPersistHistory_tSerializeHistory",
      "source": "tPersistHistory",
      "target": "tSerializeHistory"
    },
    {
      "id": "e_tPersistHistory_tRestoreHistory",
      "source": "tPersistHistory",
      "target": "tRestoreHistory"
    },
    {
      "id": "e_tUnitTests_tTestActionTypes",
      "source": "tUnitTests",
      "target": "tTestActionTypes"
    },
    {
      "id": "e_tUnitTests_tTest50Actions",
      "source": "tUnitTests",
      "target": "tTest50Actions"
    },
    {
      "id": "e_tUnitTests_tTestStackEviction",
      "source": "tUnitTests",
      "target": "tTestStackEviction"
    },
    {
      "id": "e_tPerformanceOpt_tDebounceActions",
      "source": "tPerformanceOpt",
      "target": "tDebounceActions"
    },
    {
      "id": "e_tPerformanceOpt_tMemoryProfiling",
      "source": "tPerformanceOpt",
      "target": "tMemoryProfiling"
    },
    {
      "id": "e_tDocumentation_tDevDocs",
      "source": "tDocumentation",
      "target": "tDevDocs"
    },
    {
      "id": "e_tDocumentation_tUserDocs",
      "source": "tDocumentation",
      "target": "tUserDocs"
    },
    {
      "id": "e_multiSelectGroupingAlignment_implementMultiSelectMechanics",
      "source": "multiSelectGroupingAlignment",
      "target": "implementMultiSelectMechanics"
    },
    {
      "id": "e_implementMultiSelectMechanics_addBoxSelectionDragHandler",
      "source": "implementMultiSelectMechanics",
      "target": "addBoxSelectionDragHandler"
    },
    {
      "id": "e_implementMultiSelectMechanics_addModifierClickMultiSelectLogic",
      "source": "implementMultiSelectMechanics",
      "target": "addModifierClickMultiSelectLogic"
    },
    {
      "id": "e_implementMultiSelectMechanics_maintainSelectionStateStore",
      "source": "implementMultiSelectMechanics",
      "target": "maintainSelectionStateStore"
    },
    {
      "id": "e_implementMultiSelectMechanics_renderSelectionVisualFeedback",
      "source": "implementMultiSelectMechanics",
      "target": "renderSelectionVisualFeedback"
    },
    {
      "id": "e_multiSelectGroupingAlignment_implementGroupingFeature",
      "source": "multiSelectGroupingAlignment",
      "target": "implementGroupingFeature"
    },
    {
      "id": "e_implementGroupingFeature_designGroupDataModel",
      "source": "implementGroupingFeature",
      "target": "designGroupDataModel"
    },
    {
      "id": "e_implementGroupingFeature_implementGroupCreationCommand",
      "source": "implementGroupingFeature",
      "target": "implementGroupCreationCommand"
    },
    {
      "id": "e_implementGroupingFeature_implementUngroupCommand",
      "source": "implementGroupingFeature",
      "target": "implementUngroupCommand"
    },
    {
      "id": "e_implementGroupingFeature_persistGroupInSerialization",
      "source": "implementGroupingFeature",
      "target": "persistGroupInSerialization"
    },
    {
      "id": "e_multiSelectGroupingAlignment_implementAlignDistributeOperations",
      "source": "multiSelectGroupingAlignment",
      "target": "implementAlignDistributeOperations"
    },
    {
      "id": "e_implementAlignDistributeOperations_implementAlignFunctions",
      "source": "implementAlignDistributeOperations",
      "target": "implementAlignFunctions"
    },
    {
      "id": "e_implementAlignDistributeOperations_implementDistributeFunctions",
      "source": "implementAlignDistributeOperations",
      "target": "implementDistributeFunctions"
    },
    {
      "id": "e_implementAlignDistributeOperations_snapAtomicPositionUpdate",
      "source": "implementAlignDistributeOperations",
      "target": "snapAtomicPositionUpdate"
    },
    {
      "id": "e_multiSelectGroupingAlignment_integrateUIControlsShortcuts",
      "source": "multiSelectGroupingAlignment",
      "target": "integrateUIControlsShortcuts"
    },
    {
      "id": "e_integrateUIControlsShortcuts_addToolbarButtons",
      "source": "integrateUIControlsShortcuts",
      "target": "addToolbarButtons"
    },
    {
      "id": "e_integrateUIControlsShortcuts_addContextMenuEntries",
      "source": "integrateUIControlsShortcuts",
      "target": "addContextMenuEntries"
    },
    {
      "id": "e_integrateUIControlsShortcuts_addKeyboardShortcuts",
      "source": "integrateUIControlsShortcuts",
      "target": "addKeyboardShortcuts"
    },
    {
      "id": "e_multiSelectGroupingAlignment_integrateUndoRedoSupport",
      "source": "multiSelectGroupingAlignment",
      "target": "integrateUndoRedoSupport"
    },
    {
      "id": "e_integrateUndoRedoSupport_recordSelectionHistory",
      "source": "integrateUndoRedoSupport",
      "target": "recordSelectionHistory"
    },
    {
      "id": "e_integrateUndoRedoSupport_recordTransformHistory",
      "source": "integrateUndoRedoSupport",
      "target": "recordTransformHistory"
    },
    {
      "id": "e_multiSelectGroupingAlignment_meetPerformanceTarget50Blocks",
      "source": "multiSelectGroupingAlignment",
      "target": "meetPerformanceTarget50Blocks"
    },
    {
      "id": "e_meetPerformanceTarget50Blocks_profileAlgorithms",
      "source": "meetPerformanceTarget50Blocks",
      "target": "profileAlgorithms"
    },
    {
      "id": "e_meetPerformanceTarget50Blocks_optimizeDataStructures",
      "source": "meetPerformanceTarget50Blocks",
      "target": "optimizeDataStructures"
    },
    {
      "id": "e_meetPerformanceTarget50Blocks_debounceUIRenders",
      "source": "meetPerformanceTarget50Blocks",
      "target": "debounceUIRenders"
    },
    {
      "id": "e_multiSelectGroupingAlignment_implementAutomatedTests",
      "source": "multiSelectGroupingAlignment",
      "target": "implementAutomatedTests"
    },
    {
      "id": "e_implementAutomatedTests_unitTestsSelectionLogic",
      "source": "implementAutomatedTests",
      "target": "unitTestsSelectionLogic"
    },
    {
      "id": "e_implementAutomatedTests_unitTestsGroupModel",
      "source": "implementAutomatedTests",
      "target": "unitTestsGroupModel"
    },
    {
      "id": "e_implementAutomatedTests_integrationPerformanceTest",
      "source": "implementAutomatedTests",
      "target": "integrationPerformanceTest"
    },
    {
      "id": "e_multiSelectGroupingAlignment_updateDocsTutorials",
      "source": "multiSelectGroupingAlignment",
      "target": "updateDocsTutorials"
    },
    {
      "id": "e_codeSnippetLanguageSupport_defineCodeSnippetNodeArchitecture",
      "source": "codeSnippetLanguageSupport",
      "target": "defineCodeSnippetNodeArchitecture"
    },
    {
      "id": "e_codeSnippetLanguageSupport_implementCodeEditorIntegration",
      "source": "codeSnippetLanguageSupport",
      "target": "implementCodeEditorIntegration"
    },
    {
      "id": "e_codeSnippetLanguageSupport_implementCodeExecutionBackend",
      "source": "codeSnippetLanguageSupport",
      "target": "implementCodeExecutionBackend"
    },
    {
      "id": "e_codeSnippetLanguageSupport_implementUIandUX",
      "source": "codeSnippetLanguageSupport",
      "target": "implementUIandUX"
    },
    {
      "id": "e_codeSnippetLanguageSupport_implementSecuritySandboxing",
      "source": "codeSnippetLanguageSupport",
      "target": "implementSecuritySandboxing"
    },
    {
      "id": "e_codeSnippetLanguageSupport_developTestingSuiteForCodeSnippetNode",
      "source": "codeSnippetLanguageSupport",
      "target": "developTestingSuiteForCodeSnippetNode"
    },
    {
      "id": "e_codeSnippetLanguageSupport_writeUserDocumentation",
      "source": "codeSnippetLanguageSupport",
      "target": "writeUserDocumentation"
    },
    {
      "id": "e_codeSnippetLanguageSupport_updateCIPipelineAndPackaging",
      "source": "codeSnippetLanguageSupport",
      "target": "updateCIPipelineAndPackaging"
    },
    {
      "id": "e_defineCodeSnippetNodeArchitecture_defineDataModelForCodeSnippet",
      "source": "defineCodeSnippetNodeArchitecture",
      "target": "defineDataModelForCodeSnippet"
    },
    {
      "id": "e_defineCodeSnippetNodeArchitecture_defineSimulationInterface",
      "source": "defineCodeSnippetNodeArchitecture",
      "target": "defineSimulationInterface"
    },
    {
      "id": "e_implementCodeEditorIntegration_addVerilogSyntaxHighlighting",
      "source": "implementCodeEditorIntegration",
      "target": "addVerilogSyntaxHighlighting"
    },
    {
      "id": "e_implementCodeEditorIntegration_addPythonSyntaxHighlighting",
      "source": "implementCodeEditorIntegration",
      "target": "addPythonSyntaxHighlighting"
    },
    {
      "id": "e_implementCodeEditorIntegration_implementLanguageSelectionToggle",
      "source": "implementCodeEditorIntegration",
      "target": "implementLanguageSelectionToggle"
    },
    {
      "id": "e_implementCodeExecutionBackend_setupVerilogCompilationWithVerilator",
      "source": "implementCodeExecutionBackend",
      "target": "setupVerilogCompilationWithVerilator"
    },
    {
      "id": "e_implementCodeExecutionBackend_setupPythonExecutionEnvironment",
      "source": "implementCodeExecutionBackend",
      "target": "setupPythonExecutionEnvironment"
    },
    {
      "id": "e_implementCodeExecutionBackend_integrateCocotbForMixedLanguageSimulation",
      "source": "implementCodeExecutionBackend",
      "target": "integrateCocotbForMixedLanguageSimulation"
    },
    {
      "id": "e_setupVerilogCompilationWithVerilator_generateVerilogSimulationHarness",
      "source": "setupVerilogCompilationWithVerilator",
      "target": "generateVerilogSimulationHarness"
    },
    {
      "id": "e_setupVerilogCompilationWithVerilator_implementCompiledModuleCaching",
      "source": "setupVerilogCompilationWithVerilator",
      "target": "implementCompiledModuleCaching"
    },
    {
      "id": "e_setupPythonExecutionEnvironment_isolatePythonInterpreter",
      "source": "setupPythonExecutionEnvironment",
      "target": "isolatePythonInterpreter"
    },
    {
      "id": "e_setupPythonExecutionEnvironment_createSignalIOMappingBetweenPythonAndSimulation",
      "source": "setupPythonExecutionEnvironment",
      "target": "createSignalIOMappingBetweenPythonAndSimulation"
    },
    {
      "id": "e_implementUIandUX_buildNodeInsertionTooling",
      "source": "implementUIandUX",
      "target": "buildNodeInsertionTooling"
    },
    {
      "id": "e_implementUIandUX_buildConfigurationPanel",
      "source": "implementUIandUX",
      "target": "buildConfigurationPanel"
    },
    {
      "id": "e_implementUIandUX_displayRuntimeResultsConsoleAndWaveforms",
      "source": "implementUIandUX",
      "target": "displayRuntimeResultsConsoleAndWaveforms"
    },
    {
      "id": "e_implementSecuritySandboxing_restrictFileSystemAccess",
      "source": "implementSecuritySandboxing",
      "target": "restrictFileSystemAccess"
    },
    {
      "id": "e_implementSecuritySandboxing_limitRuntimeResources",
      "source": "implementSecuritySandboxing",
      "target": "limitRuntimeResources"
    },
    {
      "id": "e_developTestingSuiteForCodeSnippetNode_writeUnitTestsForVerilogSnippets",
      "source": "developTestingSuiteForCodeSnippetNode",
      "target": "writeUnitTestsForVerilogSnippets"
    },
    {
      "id": "e_developTestingSuiteForCodeSnippetNode_writeUnitTestsForPythonSnippets",
      "source": "developTestingSuiteForCodeSnippetNode",
      "target": "writeUnitTestsForPythonSnippets"
    },
    {
      "id": "e_developTestingSuiteForCodeSnippetNode_writeIntegrationTestsForCodeSnippetNode",
      "source": "developTestingSuiteForCodeSnippetNode",
      "target": "writeIntegrationTestsForCodeSnippetNode"
    },
    {
      "id": "e_writeUserDocumentation_createExampleCodeSnippets",
      "source": "writeUserDocumentation",
      "target": "createExampleCodeSnippets"
    },
    {
      "id": "e_updateCIPipelineAndPackaging_updateCIPipelineWithVerilatorAndPythonRuntimes",
      "source": "updateCIPipelineAndPackaging",
      "target": "updateCIPipelineWithVerilatorAndPythonRuntimes"
    },
    {
      "id": "e_updateCIPipelineAndPackaging_implementCrossPlatformPackaging",
      "source": "updateCIPipelineAndPackaging",
      "target": "implementCrossPlatformPackaging"
    }
  ],
  "ui": {
    "view": {
      "tableMode": true,
      "timelineMode": false,
      "pathOnlyMode": false,
      "leftPanelVisible": true,
      "showEdgeLabels": true
    },
    "nodeVisibility": {
      "stakeholder": true,
      "keydriver": true,
      "applicationdriver": true,
      "category": true,
      "requirement": true,
      "task": true,
      "owner": true,
      "roadmap": true
    },
    "table": {
      "groupBy": "applicationdriver",
      "groupSort": "weight-desc",
      "expandedGroups": {
        "roadmap:roadmapMVPQ12025|applicationdriver:prototypeTemplates": false,
        "roadmap:roadmapMVPQ12025|applicationdriver:visualBlockEditor": false,
        "roadmap:roadmapMVPQ12025|applicationdriver:codeSnippetNodes": true
      },
      "higherGroupBy": "roadmap",
      "higherGroupSort": "alpha-asc",
      "expandedHigherGroups": {
        "roadmap:roadmapMVPQ12025": true
      },
      "sortConfig": {
        "colIndex": 2,
        "direction": "desc"
      },
      "visibleCols": {
        "Requirement": true,
        "Impact": true,
        "Weight": true,
        "Impact Insights": true,
        "Start Date": true,
        "Due Date": true,
        "Status": true,
        "Progress": true,
        "Stakeholder(s)": false,
        "Key Driver(s)": false,
        "Application Driver(s)": false,
        "Category": true,
        "Roadmap": true,
        "Owner(s)": false
      },
      "colWidthByHeader": {
        "ID": 110,
        "Requirement": 280,
        "Impact": 100,
        "Weight": 100,
        "Impact Insights": 300,
        "Start Date": 150,
        "Due Date": 150,
        "Status": 100,
        "Progress": 100,
        "Category": 220,
        "Roadmap": 220,
        "Actions": 120
      },
      "filters": {
        "tableFilterText": "",
        "tableFilterStartFrom": "",
        "tableFilterStartTo": "",
        "tableFilterDueFrom": "",
        "tableFilterDueTo": "",
        "tableFilterOverdueOnly": false,
        "tableFilterStakeholder": "",
        "tableFilterKeydriver": "",
        "tableFilterAppdriver": "",
        "tableFilterOwner": "",
        "tableFilterImpactMin": "",
        "tableFilterImpactMax": ""
      }
    },
    "tasksPanel": {
      "expandedTaskIds": {
        "implementMultiSelectMechanics": false,
        "addBoxSelectionDragHandler": false,
        "addModifierClickMultiSelectLogic": false,
        "maintainSelectionStateStore": false,
        "renderSelectionVisualFeedback": false,
        "implementGroupingFeature": false,
        "designGroupDataModel": false,
        "implementGroupCreationCommand": false,
        "implementUngroupCommand": false,
        "persistGroupInSerialization": false,
        "implementAlignDistributeOperations": false,
        "implementAlignFunctions": false,
        "implementDistributeFunctions": false,
        "snapAtomicPositionUpdate": false,
        "integrateUIControlsShortcuts": false,
        "addToolbarButtons": false,
        "addContextMenuEntries": false,
        "addKeyboardShortcuts": false,
        "integrateUndoRedoSupport": false,
        "recordSelectionHistory": false,
        "recordTransformHistory": false,
        "meetPerformanceTarget50Blocks": false,
        "profileAlgorithms": false,
        "optimizeDataStructures": false,
        "debounceUIRenders": false,
        "implementAutomatedTests": false,
        "unitTestsSelectionLogic": false,
        "unitTestsGroupModel": false,
        "integrationPerformanceTest": false,
        "updateDocsTutorials": false
      },
      "sort": null,
      "panelPos": {
        "x": 120,
        "y": 50
      },
      "panelSize": {
        "w": 1882,
        "h": 784
      },
      "colWidths": [
        320,
        80,
        140,
        120,
        150,
        150,
        220,
        120,
        120
      ],
      "filters": {
        "taskFilterText": "",
        "taskFilterOwner": "",
        "taskFilterStatus": "",
        "taskFilterPriority": "",
        "taskFilterStartFrom": "",
        "taskFilterStartTo": "",
        "taskFilterDueFrom": "",
        "taskFilterDueTo": "",
        "taskFilterOverdueOnly": false
      }
    },
    "timeline": {
      "groupBy": "applicationdriver",
      "higherGroupBy": "roadmap",
      "filterOwner": "",
      "filterDriver": "",
      "filterOverdue": false,
      "filterStatus": "Any",
      "filterPriority": "Any",
      "scale": "months",
      "groupSort": "weight-desc",
      "higherGroupSort": "weight-desc",
      "zoomPct": 200,
      "expandedHigherGroups": {},
      "expandedGroups": {
        "roadmapMVPQ12025|prototypeTemplates": true
      },
      "leftWidth": 415,
      "scrollLeft": 1803.75,
      "showDatesUnderNames": false
    }
  }
}